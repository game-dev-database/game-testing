
@article{mozgovoy_comprehensive_2018,
	title = {A {Comprehensive} {Approach} to {Quality} {Assurance} in a {Mobile} {Game} {Project}},
	doi = {10.1145/3290621.3290835},
	author = {Mozgovoy, Maxim and Pyshkin, Evgeny},
	year = {2018},
	note = {ISBN: 9781450361767},
	keywords = {continuou, quality assurance, Software development},
	pages = {1--8},
	file = {Mozgovoy and Pyshkin - 2018 - A Comprehensive Approach to Quality Assurance in a.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/SU43TWIC/Mozgovoy and Pyshkin - 2018 - A Comprehensive Approach to Quality Assurance in a.pdf:application/pdf}
}

@article{callele_experience_2015,
	title = {Experience requirements in video games: {Definition} and testability},
	doi = {10.1109/RE.2015.7320449},
	abstract = {© 2015 IEEE. A properly formed requirement is testable, a necessity for ensuring that design goals are met. While challenging in productivity applications, entertainment applications such as games compound the problem due to their subjective nature. We report here on our efforts to create testable experience requirements, the associated scope challenges and challenges with test design and result interpretation. We further report on issues experienced when performing focus group testing and provide practitioner guidance.},
	journal = {2015 IEEE 23rd International Requirements Engineering Conference, RE 2015 - Proceedings},
	author = {Callele, David and Dueck, Philip and Wnuk, Krzysztof and Hynninen, Peitsa},
	year = {2015},
	note = {ISBN: 9781467369053
Publisher: IEEE},
	keywords = {design goal, Experience requirements, testing, user experience, validation},
	pages = {324--333}
}

@article{ramadan_development_2014,
	title = {Development of game testing method for measuring game quality},
	doi = {10.1109/ICODSE.2014.7062694},
	abstract = {? 2014 IEEE.The quality of game is one of the factors that may stop the release of a game. Game testing can be used to measure the game quality. Unfortunately, most game testing use user-centric approach to test the quality of the game. In this paper, we propose a game testing method, which is developed from the existing game testing approach supplemented with software testing approach to measure the game quality. The game quality was derived from software engineering quality model standards and game quality model. The proposed game testing method is applied to several case studies. The case studies have demonstrated how to assess the games in order to obtain the meaningful results. The research found that the game quality results can be used by game developers to improve the game.},
	journal = {Proceedings of 2014 International Conference on Data and Software Engineering, ICODSE 2014},
	author = {Ramadan, Rido and Hendradjaya, Bayu},
	year = {2014},
	note = {ISBN: 9781479979967
Publisher: IEEE},
	keywords = {game, measurement, quality, testing},
	pages = {1--6}
}

@article{kasurinen_what_2013,
	title = {What do game developers expect from development and design tools?},
	url = {http://dl.acm.org/citation.cfm?doid=2460999.2461004},
	doi = {10.1145/2460999.2461004},
	journal = {Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering - EASE '13},
	author = {Kasurinen, Jussi and Strandén, Jukka-Pekka and Smolander, Kari},
	year = {2013},
	note = {ISBN: 9781450318488},
	keywords = {game industry, software development, technical infrastructure},
	pages = {36}
}

@inproceedings{lewis_whats_2011,
	title = {The whats and the whys of games and software engineering},
	isbn = {978-1-4503-0578-5},
	url = {http://dl.acm.org/citation.cfm?id=1984676},
	doi = {10.1145/1984674.1984676},
	abstract = {The intersection of video games and software engineering is not yet well understood. This paper highlights the varied and exciting opportunities available at the intersection of these two disciplines. We investigate four main areas: the development of games, how they are designed, how middleware supports the creative process and how games are tested. We hope that it inspires readers to take on the challenges available in games and software engineering, and join together to create a vibrant community.},
	booktitle = {1st {International} {Workshop} on {Games} and {Software} {Engineering}},
	author = {Lewis, C and Whitehead, J},
	year = {2011},
	note = {ISSN: 02705257},
	keywords = {gameprocess, software engineering, survey, video games},
	pages = {1--4}
}

@article{hullett_data_2011,
	title = {Data analytics for game development},
	volume = {80},
	doi = {10.1145/1985793.1985952},
	abstract = {The software engineering community has had seminal papers on data analysis for software productivity, quality, reliability, performance etc. Analyses have involved software systems ranging from desktop software to telecommunication switching systems. Little work has been done on the emerging digital game industry. In this paper we explore how data can drive game design and production decisions in game development. We define a mixture of qualitative and quantitative data sources, broken down into three broad categories: internal testing, external testing, and subjective evaluations. We present preliminary results of a case study of how data collected from users of a released game can inform subsequent development.},
	author = {Hullett, Kenneth and Nagappan, Nachiappan and Schuh, Eric and Hopson, John},
	year = {2011},
	note = {ISBN: 9781450304450},
	keywords = {game design, game development, game metrics},
	pages = {940}
}

@article{kanode_software_2009,
	title = {Software engineering challenges in game development},
	doi = {10.1109/ITNG.2009.74},
	abstract = {In software engineering (SE), video game development is unique yet similar to other software endeavors. It is unique in that it combines the work of teams covering multiple disciplines (art, music, acting, programming, etc.), and that engaging game play is sought after through the use of prototypes and iterations. With that, game development is faced with challenges that can be addressed using traditional SE practices. The industry needs to adopt sound SE practices for their distinct needs such as managing multimedia assets and finding the ldquofunrdquo in game play. The industry must take on the challenges by evolving SE methods to meet their needs. This work investigates these challenges and highlights engineering practices to mitigate these challenges.},
	journal = {ITNG 2009 - 6th International Conference on Information Technology: New Generations},
	author = {Kanode, Christopher M. and Haddad, Hisham M.},
	year = {2009},
	note = {ISBN: 9780769535968
Publisher: IEEE},
	keywords = {Challenges, Diverse assets, Process, Project management, Project scope, Publishing},
	pages = {260--265}
}

@inproceedings{murphy-hill_cowboys_2014,
	address = {Hyderabad, India},
	title = {Cowboys, ankle sprains, and keepers of quality: how is video game development different from software development?},
	isbn = {978-1-4503-2756-5},
	shorttitle = {Cowboys, ankle sprains, and keepers of quality},
	url = {http://dl.acm.org/citation.cfm?doid=2568225.2568226},
	doi = {10.1145/2568225.2568226},
	abstract = {Video games make up an important part of the software industry, yet the software engineering community rarely studies video games. This imbalance is a problem if video game development differs from general software development, as some game experts suggest. In this paper we describe a study with 14 interviewees and 364 survey respondents. The study elicited substantial differences between video game development and other software development. For example, in game development, “cowboy coders” are necessary to cope with the continuous interplay between creative desires and technical constraints. Consequently, game developers are hesitant to use automated testing because of these tests’ rapid obsolescence in the face of shifting creative desires of game designers. These differences between game and non-game development have implications for research, industry, and practice. For instance, as a starting point for impacting game development, researchers could create testing tools that enable game developers to create tests that assert flexible behavior with little up-front investment.},
	language = {en},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the 36th {International} {Conference} on {Software} {Engineering} - {ICSE} 2014},
	publisher = {ACM Press},
	author = {Murphy-Hill, Emerson and Zimmermann, Thomas and Nagappan, Nachiappan},
	year = {2014},
	pages = {1--11},
	file = {Murphy-Hill et al. - 2014 - Cowboys, ankle sprains, and keepers of quality ho.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/GR3MSPEI/Murphy-Hill et al. - 2014 - Cowboys, ankle sprains, and keepers of quality ho.pdf:application/pdf}
}

@article{zhang_why_2016,
	title = {Why {Are} {We} {Permanently} {Stuck} in an {Elevator}? {A} {Software} {Engineering} {Perspective} on {Game} {Bugs}},
	shorttitle = {Why {Are} {We} {Permanently} {Stuck} in an {Elevator}?},
	url = {https://doi.org/10.7916/D8416XJ7},
	doi = {10.7916/D8416XJ7},
	abstract = {In the past decade, the complexity of video games have increased dramatically and so have the complexity of software systems behind them. The difficulty in designing and testing games invariably leads to bugs that manifest themselves across funny video reels on graphical glitches and millions of submitted support tickets. This paper presents an analysis of game developers and their teams who have knowingly released bugs to see what factors may motivate them in doing so. It examines different development environments as well as inquiring into varied types of game platforms and play-style. Above all, it seeks out how established research on software development best practices and challenges should inform understanding of these bugs. These findings may lead to targeted efforts to mitigate some of the factors leading to glitches, tailored to the specific needs of the game development team.},
	language = {en},
	urldate = {2020-11-04},
	author = {Zhang, Iris},
	year = {2016},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/UHWTSAQP/Zhang - 2016 - Why Are We Permanently Stuck in an Elevator A Sof.pdf:application/pdf;Snapshot:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/9T7LFKJ3/D8416XJ7.html:text/html}
}

@article{politowski_learning_2018,
	title = {Learning from the past: {A} process recommendation system for video game projects using postmortems experiences},
	volume = {100},
	issn = {09505849},
	url = {https://doi.org/10.1016/j.infsof.2018.04.003},
	doi = {10.1016/j.infsof.2018.04.003},
	abstract = {Context: The video game industry is a billion dollar industry that faces problems in the way games are developed. One method to address these problems is using developer aid tools, such as Recommendation Systems. These tools assist developers by generating recommendations to help them perform their tasks. Objective: This article describes a systematic approach to recommend development processes for video game projects, using postmortem knowledge extraction and a model of the context of the new project, in which “postmortems” are articles written by video game developers at the end of projects, summarizing the experience of their game development team. This approach aims to provide reflections about development processes used in the game industry as well as guidance to developers to choose the most adequate process according to the contexts they're in. Method: Our approach is divided in three separate phases: in the first phase, we manually extracted the processes from the postmortems analysis; in the second one, we created a video game context and algorithm rules for recommendation; and finally in the third phase, we evaluated the recommended processes by using quantitative and qualitative metrics, game developers feedback, and a case study by interviewing a video game development team. Contributions: This article brings three main contributions. The first describes a database of developers' experiences extracted from postmortems in the form of development processes. The second defines the main attributes that a video game project contain, which it uses to define the contexts of the project. The third describes and evaluates a recommendation system for video game projects, which uses the contexts of the projects to identify similar projects and suggest a set of activities in the form of a process.},
	number = {March},
	journal = {Information and Software Technology},
	author = {Politowski, Cristiano and Fontoura, Lisandra M. and Petrillo, Fabio and Guéhéneuc, Yann Gaël},
	year = {2018},
	note = {Publisher: Elsevier},
	keywords = {Recommendation system, Software development process, Video game development},
	pages = {103--118}
}

@article{kasurinen_games_2016,
	title = {Games as {Software} – {Similarities} and {Differences} between the {Implementation} {Projects} {Jussi}},
	url = {http://dl.acm.org/citation.cfm?doid=2983468.2983501},
	doi = {10.1145/2983468.2983501},
	abstract = {The game development in principle is not different from the traditional software development. In this study, the aim is to assess the video game development from the viewpoint of software engineering, assessing which software development activities are similar, and which incompatible within the game industry context. We interviewed 11 companies and conducted a survey to understand these differences; the project management and development tasks are similar, but the detailed activities, such as requirements engineering practices, are noticeably different. ©2016 ACM.},
	number = {June},
	journal = {Proceedings of the 17th International Conference on Computer Systems and Technologies 2016 - CompSysTech '16},
	author = {Kasurinen, Jussi},
	year = {2016},
	note = {ISBN: 9781450341820},
	keywords = {development process, game development, software development, software engineering},
	pages = {33--40},
	file = {Kasurinen - 2016 - Games as Software Similarities and Differences be.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/7V6PDZNV/Kasurinen - 2016 - Games as Software Similarities and Differences be.pdf:application/pdf}
}

@article{kasurinen_games_2014,
	title = {Games from the {Viewpoint} of {Software} {Engineering}},
	journal = {Proceeding of the Federated Computer Science Event},
	author = {Kasurinen, Jussi and {Risto Laine}},
	year = {2014},
	keywords = {development process, game development, software engineering},
	pages = {23--26}
}

@inproceedings{godoy_game-scrum_2010,
	title = {Game-{Scrum}: {An} {Approach} to {Agile} {Game} {Development}},
	url = {http://www.sbgames.org/sbgames2010/proceedings/computing/short/Computing_short19.pdf},
	abstract = {The use of agile methodologies for developing games has become very common. However, such methodologies must be adapted to the team reality and to the particularities of the game development. Since there are few agile methodologies that specifically address the problems found in game development, this paper aims at inves- tigating some alternatives and suggests an approach to guide people who are starting in this area. The proposed methodology, named Game-Scrum, has been applied in the development of a game for teaching software engineering. The results from its application are also discussed in the paper.},
	booktitle = {{SBCGames}},
	author = {Godoy, André and Barbosa, Ellen F},
	year = {2010},
	keywords = {agile methodologies, educational game, game development, gameprocess, scrum, xp},
	pages = {292--295}
}

@article{carmona_game_2016,
	title = {Game development-{From} the vision to the final product},
	url = {http://upcommons.upc.edu/handle/2117/83419},
	author = {Carmona, O Tobar},
	year = {2016},
	pages = {1--32}
}

@article{annanpera_testing_2018,
	title = {Testing methods for mobile game development: {A} case study on user feedback in different development phases},
	doi = {10.1109/SeGAH.2018.8401372},
	abstract = {Mobile games are relatively new industry, and their relevance on the game markets are rising. At the same time, it is very competitive market, as new games are coming out by hundreds every day. The challenges for the new game development come from the creative process and the human factors on how to make the game appealing. In this research, we study the use of test groups as part of new mobile game and concept development process in the early phases. They were used to complement the testing automation at the development phases when use of analytics was not yet possible. Six separate feedback collection sessions were arranged using different methods. The paper presents the main learnings of each used method, the perceived usefulness of the methods for the entire development process. We also contribute to the growing knowledge for mobile game development, focusing on methods for the testing with test user approaches. We conclude that testing with user groups can help clarify the mobile game design to create a more appealing game, but choosing the right groups and right moments in the game development phase can be difficult, as can be the interpretation of the feedback for decision making.},
	journal = {2018 IEEE 6th International Conference on Serious Games and Applications for Health, SeGAH 2018},
	author = {Annanperä, Elina and Yli-Kantola, Jani and Sauvola, Tanja and Heinonen, Samuli and Siira, Erkki},
	year = {2018},
	note = {ISBN: 9781538662984},
	keywords = {development process, game testing, methods, mobile games, users},
	pages = {1--8},
	file = {IEEE Xplore Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/FFHIBR99/Annanperä et al. - 2018 - Testing methods for mobile game development a case.pdf:application/pdf}
}

@article{santos_computer_2018,
	title = {Computer games are serious business and so is their quality: {Particularities} of software testing in game development from the perspective of practitioners},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85061499891&doi=10.1145%2F3239235.3268923&partnerID=40&md5=80bb105d155dbee4b24ff3b9d92b13cf},
	doi = {10.1145/3239235.3268923},
	abstract = {Context. Over the last several decades, computer games started to have a significant impact on society. However, although a computer game is a type of software, the process to conceptualize, produce and deliver a game could involve unusual features. In software testing, for instance, studies demonstrated the hesitance of professionals to use automated testing techniques with games, due to the constant changes in requirements and design, and pointed out the need for creating testing tools that take into account the flexibility required for the game development process. Goal. This study aims to improve the current body of knowledge regarding these theme and point out the existing particularities observed in software testing considering the development of a computer game. Method. A mixed-method approach based on a case study and a survey was applied to collect quantitative and qualitative data from practitioners regarding the particularities of software testing in game development. Results. We analyzed over 70 messages posted on three well-established network of question-and-answer communities and received answers of 38 practitioners, and identified important aspects to be observed in the process of planning, performing and reporting tests games. Conclusion. Considering computer games, software testing must focus not only on the common aspects of a general software, but also, track and investigate issues that could be related to game balance, game physics and entertainment related-aspects to guarantee the quality of computer games and a successful testing process. © 2018 ACM.},
	journal = {International Symposium on Empirical Software Engineering and Measurement},
	author = {Santos, R E S and Magalhes, C V C and Capretz, L F and Correia-Neto, J S and Da Silva, F Q B and Saher, A},
	year = {2018},
	keywords = {Automated testing, Body of knowledge, Computer games, Established, Software design, Software testing},
	file = {Santos et al. - 2018 - Computer games are serious business and so is thei.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/4TDCN4WF/Santos et al. - 2018 - Computer games are serious business and so is thei.pdf:application/pdf}
}

@article{al-azawi_towards_2014,
	title = {Towards {Agent}-based {Agile} approach for {Game} {Development} {Methodology}},
	doi = {10.1109/WCCAIS.2014.6916626},
	abstract = {? 2014 IEEE.Game development is very complex and the success of the game is based on the game development methods. The purpose of this paper is to investigate on the existing game development methods and provide an upcoming game development method that is based on predictive and adaptive development models. A critical analysis to Agile method which are mostly used in modern game development methods is presented. We identified the weakness of Agile game development and solve it by creating a cooperation with Agent Oriented Software Engineering (AOSE) to introduce a new hybrid methodology named as Agent Agile Game Development Methodology (AAGDM) that combines both predictive and adaptive models.},
	journal = {2014 World Congress on Computer Applications and Information Systems, WCCAIS 2014},
	author = {Al-Azawi, Rula and Ayesh, Aladdin and Al-Obaidy, Mohaned},
	year = {2014},
	note = {ISBN: 9781479933518
Publisher: IEEE},
	pages = {1--6}
}

@article{wang_how_2017,
	title = {How to {Keep} {People} {Playing} {Mobile} {Games}: {An} {Experience} {Requirements} {Testing} {Approach}},
	doi = {10.1109/UIC-ATC-ScalCom-CBDCom-IoP-SmartWorld.2016.0130},
	abstract = {© 2016 IEEE. The smartphones continues to revolutionize daily activities, how people perform them. However, with a huge market, defining, testing experience requirements in mobile games is still vague, challenging. In this paper, we raise some new emotional experience requirements that are necessary for playing a mobile game., we propose a testing approach for formally expressing, testing experience requirements in mobile games. We attempted to define requirements for player experiences that were to be induced by the mobile game, then test them to determine whether the implementation satisfies these requirements. According to the test results, the mobile game developers will have more chances to adapt their products to better status before releasing. In order to prove the efficiency of our approach, we perform a real test environment to verify the satisfaction of experience requirements.},
	journal = {Proceedings - 13th IEEE International Conference on Ubiquitous Intelligence and Computing, 13th IEEE International Conference on Advanced and Trusted Computing, 16th IEEE International Conference on Scalable Computing and Communications, IEEE Internationa},
	author = {Wang, Yiran and Che, Xiaoping},
	year = {2017},
	note = {ISBN: 9781509027705
Publisher: IEEE},
	keywords = {Experience Requirement, Mobile Game, Testing},
	pages = {815--822}
}

@article{valente_mapping_2017,
	title = {Mapping quality requirements for pervasive mobile games},
	volume = {22},
	issn = {1432010X},
	doi = {10.1007/s00766-015-0238-y},
	abstract = {? 2015 Springer-Verlag LondonGames have not received the full attention of the requirements engineering community. This scenario is becoming more critical as we move towards newer forms of games, such as pervasive games. Pervasiveness (the quality that distinguishes pervasive games from traditional digital games) holds several meanings, including being ubiquitous, permeating something, or spreading something, somewhere, in a physical space. Pervasiveness can be recognized in by the boundaries of the game expanding every time it is played, from the virtual (or fictional) world to the real world. Pervasive games are a new form of digital entertainment that has evolved in different forms, such as alternate reality games, transmedia games, and crossmedia games. Sensor technologies, networking capabilities, augmented reality systems, computer vision technology, the internet, and, especially, mobile devices have been responsible for the rapid evolution of this new form of digital product. This paper is focused on ?pervasive mobile games?, which we define as context-aware games that use mobile devices. We bear in mind that mobile devices are currently the main driver for fulfilling the promises of pervasive game playing. Our investigations and experiments on this class of games led us to study the quality requirements for pervasive mobile games. Using different information sources, we gathered a set of interrelated characteristics that are crucial to the success of these games. In this paper, we begin to clarify the definition and scope of pervasive mobile games, which are controversial issues in the literature. Using these fundamentals, we propose a two-level conceptual map of non-functional requirements that helps to realize pervasiveness in pervasive mobile games. These non-functional requirements are then associated with a set of questions that help the designers in verifying tasks and operationalizing the requirements of a game. We also propose a dependence matrix for pervasive game qualities that enhances the insight into pervasiveness and reveals important guidelines for the game designers.},
	number = {1},
	journal = {Requirements Engineering},
	author = {Valente, Luis and Feijó, Bruno and Leite, Julio Cesar Sampaio do Prado},
	year = {2017},
	keywords = {Dependence matrix, Non-functional requirements, Pervasive mobile games, Requirements engineering},
	pages = {137--165}
}

@article{koutonen_how_2013,
	title = {How are agile methods and practices deployed in video game development? {A} survey into finnish game studios},
	volume = {149},
	issn = {18651348},
	doi = {10.1007/978-3-642-38314-4_10},
	abstract = {Adapting software for different languages is required to gain market access by increasing product acceptance and usability, and satisfying legal requirements. This process commonly consists of two steps: Internationalization, i.e. the generalization of any language- and culture-specific properties and elements of the software in question, and localization, i.e. the specialization of said elements for specific languages, cultures and countries [1]. It is a topic with increasing relevance as new technologies enable new software uses and interaction modes, which in turn create new cultural dependencies which need to be localized, and new ways to do it, e.g. crowdsourcing [2] and machine translation [3]. © 2011 Springer-Verlag Berlin Heidelberg.},
	journal = {Lecture Notes in Business Information Processing},
	author = {Koutonen, Jussi and Leppänen, Mauri},
	year = {2013},
	note = {ISBN: 9783642383137},
	keywords = {Agile practices, Kanban, Scrum, Video game development, XP},
	pages = {135--149}
}

@inproceedings{pascarella_how_2018,
	address = {Gothenburg, Sweden},
	title = {How is video game development different from software development in open source?},
	url = {http://dx.doi.org/10.1145/3196398.3196418},
	doi = {10.1145/3196398.3196418},
	abstract = {Recent research has provided evidence that, in the industrial con-text, developing video games diverges from developing software systems in other domains, such as office suites and system utilities. In this paper, we consider video game development in the open source system (OSS) context. Specifically, we investigate how de-velopers contribute to video games vs. non-games by working on different kinds of artifacts, how they handle malfunctions, and how they perceive the development process of their projects. To this pur-pose, we conducted a mixed, qualitative and quantitative study on a broad suite of 60 OSS projects. Our results confirm the existence of significant differences between game and non-game development, in terms of how project resources are organized and in the diversity of developers' specializations. Moreover, game developers respond-ing to our survey perceive more difficulties than other developers when reusing code as well as performing automated testing, and they lack a clear overview of their system's requirements.},
	booktitle = {Proceedings - {International} {Conference} on {Software} {Engineering}},
	author = {Pascarella, Luca and Palomba, Fabio and Di Penta, Massimiliano and Bacchelli, Alberto},
	year = {2018},
	note = {ISSN: 02705257},
	keywords = {Human computer interaction, Industrial research, Int},
	pages = {392--402}
}

@article{sobke_entertainment_2016,
	title = {Entertainment {Computing} and {Serious} {Games}},
	volume = {9970},
	url = {http://link.springer.com/10.1007/978-3-319-46152-6},
	doi = {10.1007/978-3-319-46152-6},
	abstract = {Content is a key component for successful computer games and it is also one of the most labour and time intensive tasks a game developer can face. As the scale of contemporary games increases, players come to expect higher standards of fidelity and immersion, thus increasing the need to create large amounts of content. This chapter focuses on the creation of content for serious games, particularly research that can aid designers and game developers in generating large amounts of content quickly and effectively. While game developers have had many tools and methods for creating content for standard computer games, this chapter will concentrate on the types of content specific to serious games.},
	author = {Söbke, Heinrich and Streicher, Alexander},
	year = {2016},
	note = {ISBN: 978-3-319-46151-9},
	keywords = {development, distributed architecture, game component, game engine, schema, serious game, serious games architecture},
	pages = {148--173}
}

@article{aleem_digital_2016,
	title = {A {Digital} {Game} {Maturity} {Model} ({DGMM})},
	volume = {17},
	issn = {18759521},
	url = {http://dx.doi.org/10.1016/j.entcom.2016.08.004},
	doi = {10.1016/j.entcom.2016.08.004},
	abstract = {Game development is an interdisciplinary concept that embraces artistic, software engineering, management, and business disciplines. This research facilitates a better understanding of important dimensions of digital game development methodology. Game development is considered as one of the most complex tasks in software engineering. The increased popularity of digital games, the challenges faced by game development organizations in developing quality games, and high competition in the digital game industry demand a game development maturity assessment. Consequently, this study presents a Digital Game Maturity Model to evaluate the current development methodology in an organization. The framework of this model consists of assessment questionnaires, a performance scale, and a rating method. The main goal of the questionnaires is to collect information about current processes and practices. In general, this research contributes towards formulating a comprehensive and unified strategy for game development maturity evaluation. Two case studies were conducted and their assessment results reported. These demonstrate the level of maturity of current development practices in two organizations.},
	journal = {Entertainment Computing},
	author = {Aleem, Saiqa and Capretz, Luiz Fernando and Ahmed, Faheem},
	year = {2016},
	note = {Publisher: Elsevier B.V.},
	keywords = {Game development methodology, Game performance, Online game, Process assessment, Software game, Software process improvement, Video game},
	pages = {55--73}
}

@article{callele_report_2011,
	title = {A report on select research opportunities in requirements engineering for videogame development},
	doi = {10.1109/MERE.2011.6043942},
	abstract = {Requirements engineering research in videogame development is a relatively new field. This paper summarizes our work in the area then reviews the prior academic and trade press. We then present brief overviews of numerous research opportunities in the videogame domain that arose from our research program yet remain open questions with the goal of providing other researchers with a concise directory of interesting research possibilities. ? 2011 IEEE.},
	journal = {2011 4th Int. Workshop on Multimedia and Enjoyable Requirements Eng. - Beyond Mere Descriptions and with More Fun and Games, MERE'11 - Co-located with the 19th IEEE Int. Requirements Eng. Conf., RE'11},
	author = {Callele, David and Neufeld, Eric and Schneider, Kevin},
	year = {2011},
	note = {ISBN: 9781457709340
Publisher: IEEE},
	keywords = {games, requirements, Research opportunities, videogames},
	pages = {26--33}
}

@article{aleem_game_2016,
	title = {Game development software engineering process life cycle: a systematic review},
	volume = {4},
	issn = {2195-1721},
	url = {http://dx.doi.org/10.1186/s40411-016-0032-7},
	doi = {10.1186/s40411-016-0032-7},
	abstract = {Software game is a kind of application that is used not only for entertainment, but also for serious purposes that can be applicable to different domains such as education, business, and health care. Multidisciplinary nature of the game development processes that combine sound, art, control systems, artificial intelligence (AI), and human factors, makes the software game development practice different from traditional software development. However, the underline software engineering techniques help game development to achieve maintainability, flexibility, lower effort and cost, and better design. The purpose of this study is to assesses the state of the art research on the game development software engineering process and highlight areas that need further consideration by researchers. In the study, we used a systematic literature review methodology based on well-known digital libraries. The largest number of studies have been reported in the production phase of the game development software engineering process life cycle, followed by the pre-production phase. By contrast, the post-production phase has received much less research activity than the pre-production and production phases. The results of this study suggest that the game development software engineering process has many aspects that need further attention from researchers; that especially includes the postproduction phase.},
	number = {1},
	journal = {Journal of Software Engineering Research and Development},
	author = {Aleem, Saiqa and Capretz, Luiz Fernando and Ahmed, Faheem},
	year = {2016},
	note = {Publisher: Journal of Software Engineering Research and Development},
	keywords = {development software engineerong proces, online game, Online game, software game, Software Game, Systematic re, systematic review, video game, Video game}
}

@article{colomo-palacios_systems_2013,
	title = {Systems, software and services process improvement},
	volume = {36},
	issn = {09205489},
	url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-77957574553&partnerID=tZOtx3y1},
	doi = {10.1016/j.csi.2013.08.001},
	abstract = {The role of Systems and Product Architects is increasingly important for the development of modern products and services that are sustainable, innovative, and successful. This paper shows that competences in integration in product and systems design have to be a key part of these architect's competence profiles. Capitalizing on results from extensive research in the optimization of product development, it points out that the integration of all stakeholders from the earliest development phases is a fundamental need to be able to take into account all requirements and constraints imposed on both hardware and software products and systems. It draws the conclusion that the key stakeholders in product and system development processes need to have skills that enable this way of doing integrated development. © 2010 Springer-Verlag Berlin Heidelberg.},
	number = {1},
	journal = {Computer Standards and Interfaces},
	author = {Colomo-Palacios, Ricardo and Messnarz, Richard and Biró, Miklós},
	year = {2013},
	pmid = {25246403},
	note = {ISBN: 978-3-642-15665-6
\_eprint: arXiv:1011.1669v3},
	keywords = {gameprocess, Software Development Methods, SPI, SPI Manifesto},
	pages = {1--2}
}

@article{gustafsson_cooperative_2016,
	title = {The cooperative future of game development : {A} phenomenon of collaboration between producers and consumers in the video game industry},
	url = {http://www.diva-portal.org/smash/record.jsf?pid=diva2%3A937094&dswid=5819},
	abstract = {Independent developers and large-scale development studios - commonly seen as the Davids and Goliaths of the video game industry - are moving closer together. Powerful software frameworks, traditionally reserved for professional developers and only available through expensive licenses, are becoming free to use for consumers. By sharing their tools instead of keeping them for themselves, companies can utilize the combined talent of whole communities and monetize on that talent through royalties and other indirect fees. This paper describes how the video game industry has developed in recent years to allow for this change in business strategy and examines how the industry can continue to evolve because of this. The result of a Delphi study based on interviews with game developers both inside and outside the industry point toward a future of increased intermingling and sharing of knowledge and resources, characterized by more producer-consumer collaborations and closer relationships between companies and their communities. By adopting free-to-use business models and sharing powerful, proprietary software with their consumers, companies are lowering the point of entry for aspiring developers and thereby dissolving the traditional narrative of “we and them” that has existed between independent developers and established studios in the past.},
	author = {Gustafsson, Viktor and Höglund, Gustav},
	year = {2016},
	keywords = {business model, community platforms, game development, game engine, indie, modding, outsourcing innovation, participatory culture, producer-consumer collaboration}
}

@article{kasurinen_is_2014,
	title = {Is {Requirements} {Engineering} {Useless} in {Game} {Development}?},
	author = {Kasurinen, Jussi and Maglyas, Andrey and Smolander, Kari},
	year = {2014},
	keywords = {game design, game development, management, requirements, requirements engineering},
	pages = {1--16}
}

@article{scacchi_research_2015,
	title = {Research {Challenges} at the {Intersection} of {Computer} {Games} and {Software} {Engineering}},
	url = {https://books.google.com.br/books?hl=pt-BR&lr=&id=fi2sCQAAQBAJ&oi=fnd&pg=PA261&dq=educational+RPG+serious+RPG+%22history+of+RPG%22+OR+%22serious+Games%22+OR+%22serious+RPG%22+OR+%22RPG+framework%22+OR+%22educational+RPG%22&ots=2KnSFOrmkE&sig=gghlGN4j4rqri},
	abstract = {This paper provides an overview and review of R\&D studies, findings, and practices that identify important problems that constitute an emerging program of future R\&D opportunities relevant to established scholars and new students interested in computer games and software engineering (CGSE). This includes examining how computer games may be used to address long- standing, grand challenge problems in software engineering in new ways. The review also examines other challenges in game software requirements engineering, game software design, game software testing, teamwork processes in CGSE, global CGSE, and other closely related areas for CGSE research. From these results, it becomes possible to identify and outline possible areas for future CGSE research opportunities that may be appropriate for consideration by students, scholars, or research agencies seeking to build up scientific and technological capabilities in CGSE research and educational practice.},
	number = {Fdg},
	journal = {Computer Games and Software {\textbackslash}ldots},
	author = {Scacchi, Walt and Cooper, Kendra M.},
	year = {2015},
	keywords = {challenges, computer games, grand, research, software engineering, software engineering education}
}

@article{paakkanen_user_2014,
	title = {User {Experience} of {Game} {Development} {Environments}: {Can} making games be as fun as playing them?},
	author = {Paakkanen, Vesa},
	year = {2014}
}

@inproceedings{politowski_are_2016,
	address = {Austin, TX, United states},
	title = {Are the {Old} {Days} {Gone}? {A} {Survey} on {Actual} {Software} {Engineering} {Processes} in {Video} {Game} {Industry}},
	volume = {16-May-201},
	isbn = {978-1-4503-4160-8},
	url = {http://dx.doi.org/10.1145/2896958.2896960},
	abstract = {In the past 10 years, several researches studied video game development process who proposed approaches to improve the way how games are developed. These approaches usually adopt agile methodologies because of claims that traditional practices and the waterfall process are gone. However, are the "old days" really gone in the game industry? In this paper, we present a survey of software engineering processes in video game industry from postmortem project analyses. We analyzed 20 postmortems from Gamasutra Portal. We extracted their processes and modelled them through using the Business Process Model and Notation (BPMN). This work presents three main contributions. First, a postmortem analysis methodology to identify and extract project processes. Second, the study main result: the "old days" are gone, but not completely. Iterative practices are increasing and are applied to at least 65\% of projects in which 45\% of this projects explicitly adopted Agile practices. However, waterfall process is still applied at least 30\% of projects. Finally, we discuss some implications, directions and opportunities for video game development community.},
	booktitle = {Gas 2016},
	author = {Politowski, Cristiano and Fontoura, Lisandra and Petrillo, Fabio and Guéhéneuc, Yann-Gaël},
	year = {2016},
	note = {ISSN: 02705257},
	keywords = {game development, postmortem, software engineering process},
	pages = {22--28}
}

@article{jr_what_2016,
	title = {"{What} {Went} {Right} and {What} {Went} {Wrong}": {An} {Analysis} of 155 {Postmortems} from {Game} {Development}},
	url = {http://research.microsoft.com/apps/pubs/default.aspx?id=262301},
	doi = {10.1145/2889160.2889253},
	abstract = {In game development, software teams often conduct postmortems to reflect on what went well and what went wrong in a project. The postmortems are shared publicly on gaming sites or at developer conferences. In this paper, we present an analysis of 155 postmortems published on the gaming site Gamasutra.com. We identify characteristics of game development, link the characteristics to positive and negative experiences in the postmortems and distill a set of best practices and pitfalls for game development.},
	journal = {Proceedings of the 38th International Conference on Software Engineering (ICSE 2016 SEIP Track)},
	author = {Jr, Michael Washburn and Sathiyanarayanan, Pavithra and Nagappan, Meiyappan and Zimmermann, Thomas and Bird, Christian},
	year = {2016},
	note = {ISBN: 9781450342056},
	keywords = {games, postmortems, qualitative analysis},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/VXXN9YPU/Washburn et al. - 2016 - What went right and what went wrong an analysis o.pdf:application/pdf}
}

@article{osborne_ohagan_software_2014,
	title = {Software {Development} {Processes} for {Games}: {A} {Systematic} {Literature} {Review}},
	volume = {425},
	issn = {18650929},
	doi = {10.1007/978-3-662-43896-1_16},
	abstract = {This paper describes the methodology and results from a Systematic Literature Review (SLR) of the software processes used in game development. A total of 404 papers were analyzed as part of the review and the various process models that are used in industry and academia/research are presented. Software Process Improvement (SPI) initiatives for game development are discussed. The factors that promote or deter the adoption of process models, and implementing SPI in practice are highlighted. Our findings indicate that there is no single model that serves as a best practice process model for game development and it is a matter of deciding which model is best suited for a particular game. Agile models such as Scrum and XP are suited to the knowledge intensive domain of game development where innovation and speed to market are vital. Hybrid approaches such as reuse can also be suitable for game development where the risk of the upfront investment in terms of time and cost is mitigated with a game that has stable requirements and a longer lifespan. © Springer-Verlag Berlin Heidelberg 2014.},
	number = {June},
	journal = {Communications in Computer and Information Science},
	author = {Osborne O'Hagan, Ann and Coleman, Gerry and O'Connor, Rory V.},
	year = {2014},
	note = {ISBN: 9783662438954},
	keywords = {Game Development, Software Engineering, Software Process, Software Process Improvement (SPI), Systematic Literature Review (SLR)},
	pages = {182--193}
}

@article{kasurinen_defining_2016,
	title = {Defining an {Iterative} {ISO}/{IEC} 29110 {Deployment} {Package} for {Game} {Developers}},
	volume = {10},
	issn = {1935-570X},
	doi = {10.4018/ijitsa.2017010106},
	abstract = {Software development in a small development team is a challenge, as people have to fulfill several roles, which in larger groups would have dedicated people. To help in this aspect, the ISO/IEC 29110 Lifecycle profiles for Very Small Entities has been developed to help organization and manage the workflow. However, the model presented in the ISO/IEC 29110 is rather abstract, and prominently follows the waterfall approach, even though the documents do amend agile practices as one acceptable approach. In game development this loosely defined approach is problematic, since games industry heavily relies in the agile practices with short cycles of iterations. In this article, the authors present their study of game development organizations, and describe the ISO/IEC 29110 deployment package “Highly Iterative Software Processes” which combines the Entry level model with the industry-specific requirements. In general, the definition of support for the iterative development makes the model feasible for the industry.},
	number = {1},
	journal = {International Journal of Information Technologies and Systems Approach},
	author = {Kasurinen, Jussi and Smolander, Kari},
	year = {2016},
	pages = {107--125}
}

@article{kasurinen_how_2013,
	title = {How applicable is {ISO}/{IEC} 29110 in game software development?},
	volume = {7983 LNCS},
	issn = {03029743},
	doi = {10.1007/978-3-642-39259-7_4},
	abstract = {Software development in a small development team is a challenge, as people have to fulfill several roles, which in larger groups would have separate, dedicated people for the work. To help small development teams to organize their activities, ISO/IEC standardization body has developed the standard ISO/IEC 29110, Lifecycle profiles for Very Small Entities. Our study focuses on the application of this model in the game industry, an industry that develops software. However, the game industry has its own set of unusual features in software development, such as the demand for artistic vision, need for novelty and demand for creative designs. In this study we analyze how the standard would work in seven different game industry companies and identify a set of additions that would help these organizations to apply the standard in practice. Based on our results, the ISO/IEC 29110 should incorporate more support for iterative development to allow easier adaptation to real-life organizations. © 2013 Springer-Verlag.},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	author = {Kasurinen, Jussi and Laine, Risto and Smolander, Kari},
	year = {2013},
	note = {ISBN: 9783642392580},
	keywords = {empirical study, game development, game industry, gameprocess, ISO/IEC 29110, software process},
	pages = {5--19}
}

@article{karre_is_2019,
	title = {Is {Virtual} {Reality} {Product} {Development} different?},
	url = {http://doi.acm.org/10.1145/3299771.3299772},
	doi = {10.1145/3299771.3299772},
	journal = {Proceedings of the 12th Innovations on Software Engineering Conference (Formerly Known As India Software Engineering Conference)},
	author = {Karre, Sai Anirudh and Mathur, Neeraj and Reddy, Y. Raghu},
	year = {2019},
	note = {ISBN: 978-1-4503-6215-3},
	keywords = {Industrial Practices, Quantitative Study, Software Development Methodology, Software Process, Virtual Reality},
	pages = {1--11}
}

@article{ruonala_agile_2016,
	title = {Agile {Game} {Development}: {A} {Systematic} {Literature} {Review}},
	author = {Ruonala, Henna-riikka},
	year = {2016}
}

@article{wang_software_2014,
	title = {Software {Architectures} and the {Creative} {Processes} in {Game} {Development}},
	volume = {8770},
	url = {http://link.springer.com/10.1007/978-3-662-45212-7},
	doi = {10.1007/978-3-662-45212-7},
	abstract = {Urban computing systems impact quality of life in densely populated areas. With the widespread availability of wireless networks and portable devices, urban areas are fast becoming a hybrid of the physical environment and the digital datasphere. This paper describes Yasmine's Adventures, a location aware storytelling platform that leverages on urban computing strategies to create an interactive walk through the Mehringplatz area, surrounding the Jewish Museum in Berlin. Yasmine's Adventures (YA) is a mobile application that delivers a sequence of animations clips tailored specifically to the Mehringplatz neighbourhood. The story follows an adventurous local girl as she walks home alone, visiting local landmarks. Yasmine's perceptions of the landmarks, identified by community members in an earlier workshop, reflect the real concerns of the community. This interactive experience was created to engage visitors of the Jewish Museum to explore the relatively neglected streets of the area in which the museum is situated.},
	author = {Wang, Alf Inge and Nordmark, Nj{\textbackslash}aal},
	year = {2014},
	note = {ISBN: 978-3-662-45211-0},
	keywords = {creative software development, game development, software ar-},
	pages = {272--285},
	file = {Springer Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/73D7THIQ/Wang and Nordmark - 2015 - Software Architectures and the Creative Processes .pdf:application/pdf}
}

@article{aleem_critical_2016,
	title = {Critical {Success} {Factors} to {Improve} the {Game} {Development} {Process} from a {Developer}'s {Perspective}},
	volume = {31},
	issn = {10009000},
	doi = {10.1007/s11390-016-1673-z},
	abstract = {The growth of the software game development industry is enormous and is gaining importance day by day. This growth imposes severe pressure and a number of issues and challenges on the game development community. Game development is a complex process, and one important game development choice is to consider the developer's perspective to produce good-quality software games by improving the game development process. The objective of this study is to provide a better understanding of the developer's dimension as a factor in software game success. It focuses mainly on an empirical investigation of the effect of key developer's factors on the software game development process and eventually on the quality of the resulting game. A quantitative survey was developed and conducted to identify key developer's factors for an enhanced game development process. For this study, the developed survey was used to test the research model and hypotheses. The results provide evidence that game development organizations must deal with multiple key factors to remain competitive and to handle high pressure in the software game industry. The main contribution of this paper is to investigate empirically the influence of key developer's factors on the game development process.},
	number = {5},
	journal = {Journal of Computer Science and Technology},
	author = {Aleem, Saiqa and Capretz, Luiz Fernando and Ahmed, Faheem},
	year = {2016},
	keywords = {developer's perspective, empirical investigation, game developer's factor, game development process, good-quality game, software game},
	pages = {925--950}
}

@book{shelley_feasibility_2013,
	title = {On the {Feasibility} o f using {Use} {Case} {Maps} for the {Prevention} o f {Sequence} {Breaking} in {Video} {Games}},
	isbn = {978-0-494-94637-4},
	author = {Shelley, Matthew and Science, Computer},
	year = {2013}
}

@article{analytics_introduction_2013,
	title = {An {Introduction} to {Gameplay} {Data} {Visualization}},
	author = {Analytics, Game},
	year = {2013}
}

@article{kasurinen_what_2014,
	title = {What do game developers test in their products?},
	issn = {19493770},
	doi = {10.1145/2652524.2652525},
	abstract = {© 2014 ACM. Context: Software projects often have four objectives; to produce the required functionality, in budget and in schedule, with acceptable quality. That statement may be true for most of the ordinary software development projects, but are these objectives enough for game development, where creativity and artistic aspects have a major role? Goal: We analyze how game developing organizations test their products, what are their main test objectives and how they perceive themselves in the software business. Method: We interviewed seven game development teams from different companies and studied how they test their products with grounded theory approach. Results: Our results suggest that game developers focus on soft values such as game content or user experience, instead of more traditional objectives such as reliability or efficiency. Conclusions: Game developers have similar, but not fully comparable to software industry, set of priorities in their software testing and quality assurance approaches.},
	journal = {Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM'14)},
	author = {Kasurinen, Jussi and Smolander, Kari},
	year = {2014},
	note = {ISBN: 9781450327749},
	keywords = {empirical study, game development, gameprocess, survey, test methods, test process},
	pages = {1--10},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/BLU74TBI/Kasurinen and Smolander - 2014 - What do game developers test in their products.pdf:application/pdf}
}

@article{politowski_software_2016,
	title = {Software {Engineering} {Processes} in {Game} {Development}: a {Survey} about {Developers}' {Experiences}},
	abstract = {With the increasing participation of digital games in the economy and our society, the attention given to this subject in the academic field has also increased. However, the software engineering field and, more precisely, game development processes seems to be for-gotten by researchers. In addition, game developers and big game companies prefer to keep their processes and methodologies to themselves. Studies and professional reports have shown the " ugly face " behind the game industry. Crunch Times and heavy pres-sure during the development are treated as normal practices in a game developer's life. In this work, we surveyed 58 Brazilian game developers about the relations between game development process and problems in a software engineering context. We sought for answers based on empirical data collected from the questionnaire. The goal was to understand the area and provide insights to improve game development, pointing a direction for future researches. As a result, considering the Brazilian context, this paper presents three main contributions. The first shows that, on projects that used sys-tematic approaches, regardless of the type, result in better prod-ucts. The second presents that Delays, Unrealistic scope and Lack of documentation are the most common problems faced by game developers. Finally, we describe insights and considerations gath-ered from developers and literature studies, which may serve as a source of knowledge as well as characterization of the Brazilian game developers.},
	number = {September},
	author = {Politowski, Cristiano and Vargas, Daniel De and Fontoura, Lisandra M and Foletto, A},
	year = {2016},
	keywords = {game developer ex-, game development process, survey}
}

@article{ramadan_game_2013,
	title = {Game development life cycle guidelines},
	doi = {10.1109/ICACSIS.2013.6761558},
	abstract = {Game is a kind of software with goal to provide entertainment. However, during the real game development practice, simply adopting the software development life cycle (SDLC) is not enough, as the developers face several challenges during its life cycle. To address the problem, game development uses a kind of specific approach called game development life cycle (GDLC) to direct the game development. However, none of the existing GDLCs explicitly address how to successfully deliver a good quality game. This paper presents a new game development life cycle model and guidelines to successfully deliver a good quality game. Several quality criterias are explicitly considered at each phase. ? 2013 IEEE.},
	number = {June},
	journal = {2013 International Conference on Advanced Computer Science and Information Systems, ICACSIS 2013},
	author = {Ramadan, Rido and Widyani, Yani},
	year = {2013},
	note = {ISBN: 9789791421195},
	pages = {95--100}
}

@article{barik_perspective_2016,
	title = {A perspective on blending programming environments and games: {Beyond} points, badges, and leaderboards},
	volume = {2016-Novem},
	issn = {19436106},
	doi = {10.1109/VLHCC.2016.7739676},
	abstract = {© 2016 IEEE. Programming environments and game environments share many of the same characteristics, such as requiring their users to understand strategies and solve difficult challenges. Yet, only game designers have been able to capitalize on methods that are consistently able to keep their users engaged. Consequently, software engineers have been increasingly interested in understanding how these game experiences can be transferred to programming experiences, a process termed gamification. In this perspective paper, we offer a formal argument that gamification as applied today is predominately narrow, placing emphasis on the reward aspects of game mechanics at the expense of other important game elements, such as framing. We argue that more authentic game experiences are possible when programming environments are re-conceptualized and assessed as holistic, serious games. This broad gamification enables us to more effectively apply and leverage the breadth of game elements to the construction and understanding of programming environments.},
	journal = {Proceedings of IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC},
	author = {Barik, Titus and Murphy-Hill, Emerson and Zimmermann, Thomas},
	year = {2016},
	note = {ISBN: 9781509002528
Publisher: IEEE},
	pages = {134--142}
}

@article{petrillo_is_2010,
	title = {Is agility out there?},
	doi = {10.1145/1878450.1878453},
	abstract = {Game development is a very complex and multidisciplinary activity and surely the success of games as one of most profitable areas in entertainment domain could not be incidentally. The goal of this paper is to investigate if (and how) principles and practices from Agile Methods have been adopted in game development, mainly gathering evidences through Postmortem Analysis (PMA). Then we describe how we have conducted PMA in order to identify the good practices adopted in several game development projects. The results are discussed, comparing similarities and differences on how these practices are taken in account in (traditional) software development and game development. Copyright 2010 ACM.},
	number = {November 2016},
	author = {Petrillo, Fabio and Pimenta, Marcelo},
	year = {2010},
	note = {ISBN: 9781450304030},
	pages = {9}
}

@article{musil_survey_2010,
	title = {A {Survey} on the {State} of the {Practice} in {Video} {Game} {Software} {Development}},
	url = {http://qse.ifs.tuwien.ac.at/publication/IFS-QSE-10-04.pdf},
	abstract = {Video Game Software Development is a promising area of empirical research because our ?rst observations in industry environment identi?ed a lack of a systematic process and method support and rarely conducted/documented studies. Nevertheless, video games - speci?c types of software products - focus strongly on user interface and game design. Thus, engineering processes, methods for game construction and veri?cation/validation, and best-practices, derived from traditional software engineering, might be applicable in context of video game development. We selected the Austrian games industry as a manageable and promising starting point for systematically capturing the state-of-the practice in Video game development. In this paper we present the survey design and report on the ?rst results of a national survey in the Austrian games industry. The results of the survey showed that the Austrian games industry is organized in a set of small and young studios with the trend to ad-hoc and ?exible development processes and limitations in systematic method support.},
	number = {March},
	author = {Musil, Juergen and Schweda, Angelika and Winkler, Dietmar and Biffl, Stefan},
	year = {2010},
	note = {ISBN: QSE-IFS-10/04},
	pages = {13}
}

@article{blow_game_2004,
	title = {Game {Development} {Harder} {Than} {You} {Think}},
	volume = {1},
	issn = {15427730},
	url = {http://portal.acm.org/citation.cfm?doid=971564.971590},
	doi = {10.1145/971564.971590},
	abstract = {The hardest part of making a game has always been the engineering. In times past, game engineering was mainly about low-level optimization - writing code that would run quickly on the target computer, leveraging clever little tricks whenever possible.},
	number = {10},
	journal = {Queue},
	author = {Blow, Jonathan},
	year = {2004},
	note = {ISBN: 9781590598726},
	keywords = {gameprocess},
	pages = {28}
}

@article{stacey_temporal_2009,
	title = {A temporal perspective of the computer game development process},
	volume = {19},
	issn = {13501917},
	doi = {10.1111/j.1365-2575.2007.00273.x},
	abstract = {This paper offers an insight into the games software development process from a time perspective by drawing on an in-depth study in a games development organization. The wider market for computer games now exceeds the annual global revenues of cinema. We have, however, only a limited scholarly understanding of how games studios produce games. Games projects require particular attention because their context is unique. Drawing on a case study, the paper offers a theoretical conceptualization of the development process of creative software, such as games software. We found that the process, as constituted by the interactions of developers, oscillates between two modes of practice: routinized and improvised, which sediment and flux the working rhythms in the context. This paper argues that while we may predeterminately lay down the broad stages of creative software development, the activities that constitute each stage, and the transition criteria from one to the next, may be left to the actors in the moment, to the temporality of the situation as it emerges. If all development activities are predefined, as advocated in various process models, this may leave little room for opportunity and the creative fruits that flow from opportunity, such as enhanced features, aesthetics and learning.},
	number = {5},
	journal = {Information Systems Journal},
	author = {Stacey, Patrick and Nandhakumar, Joe},
	year = {2009},
	keywords = {Computer game, Software development process, Temporal structure},
	pages = {479--497}
}

@article{connolly_systematic_2012,
	title = {A systematic literature review of empirical evidence on computer games and serious games},
	volume = {59},
	issn = {03601315},
	url = {http://dx.doi.org/10.1016/j.compedu.2012.03.004},
	doi = {10.1016/j.compedu.2012.03.004},
	abstract = {This paper examines the literature on computer games and serious games in regard to the potential positive impacts of gaming on users aged 14 years or above, especially with respect to learning, skill enhancement and engagement. Search terms identified 129 papers reporting empirical evidence about the impacts and outcomes of computer games and serious games with respect to learning and engagement and a multidimensional approach to categorizing games was developed. The findings revealed that playing computer games is linked to a range of perceptual, cognitive, behavioural, affective and motivational impacts and outcomes. The most frequently occurring outcomes and impacts were knowledge acquisition/content understanding and affective and motivational outcomes. The range of indicators and measures used in the included papers are discussed, together with methodological limitations and recommendations for further work in this area. © 2012 Elsevier Ltd. All rights reserved.},
	number = {2},
	journal = {Computers and Education},
	author = {Connolly, Thomas M. and Boyle, Elizabeth A. and MacArthur, Ewan and Hainey, Thomas and Boyle, James M.},
	year = {2012},
	note = {Publisher: Elsevier Ltd},
	keywords = {Computer games, Engagement, Learning, Serious games, Skill enhancement},
	pages = {661--686}
}

@article{lewis_what_2010,
	title = {What went wrong: a taxonomy of video game bugs},
	url = {http://portal.acm.org/citation.cfm?id=1822348.1822363},
	doi = {10.1145/1822348.1822363},
	abstract = {Video games are complex, emergent systems that are difficult to design and test. This difficulty invariably leads to failures being present in the game, negatively impacting the play experience of some. We present a taxonomy of possible failures, divided into temporal and non-temporal failures. The taxonomy can guide the thinking of designers and testers alike, helping them expose bugs in the game. This will lead to games being better tested and designed, with fewer failures when released.},
	author = {Lewis, Chris and Whitehead, Jim and Wardrip-Fruin, Noah},
	year = {2010},
	note = {ISBN: 978-1-60558-937-4},
	keywords = {08 where, a failure from tiger, an image of a, bug, error, failure, fault, figure 1, jesus shot, taxonomy, video game, woods, youtube video showing the},
	pages = {108--115}
}

@article{petrillo_what_2009,
	title = {What went wrong? {A} survey of problems in game development},
	volume = {7},
	issn = {15443574},
	doi = {10.1145/1486508.1486521},
	abstract = {Despite its growth and profitability, many reports about game projects show that their production is not a simple task, but one beset by common problems and still distant from having a healthy and synergetic work process. The goal of this article is to survey the problems in the development process of electronic games, which are mainly collected from game postmortems, by exploring their similarities and differences to well-known problems in traditional information systems.},
	number = {1},
	journal = {Computers in Entertainment},
	author = {Petrillo, Fábio and Pimenta, Marcelo and Trindade, Francisco and Dietrich, Carlos},
	year = {2009},
	note = {ISBN: 1544-3574},
	pages = {1}
}

@article{callele_requirements_2005,
	title = {Requirements engineering and the creative process in the video game industry},
	doi = {10.1109/re.2005.58},
	abstract = {The software engineering process in video game development is not clearly understood, hindering the development of reliable practices and processes for this field. An investigation of factors leading to success or failure in video game development suggests that many failures can be traced to problems with the transition from preproduction to production. Three examples, drawn from real video games, illustrate specific problems: 1) how to transform documentation from its preproduction form to a form that can be used as a basis for production, 2) how to identify implied information in preproduction documents, and 3) how to apply domain knowledge without hindering the creative process. We identify 3 levels of implication and show that there is a strong correlation between experience and the ability to identify issues at each level. The accumulated evidence clearly identifies the need to extend traditional requirements engineering techniques to support the creative process in video game development. ? 2005 IEEE.},
	author = {Callele, D. and Neufeld, E. and Schneider, K.},
	year = {2005},
	note = {ISBN: 0769524257},
	keywords = {domain-specific terminology, duction, elicitation, game design document, non-functional requirements, prepro-, production, video game development, when designing non-player characters, while software engi-},
	pages = {240--250}
}

@article{lewis_runtime_2010,
	title = {Runtime repair of software faults using event-driven monitoring},
	doi = {10.1145/1810295.1810352},
	abstract = {In software with emergent properties, despite the best efforts to remove faults before execution, there is a high likelihood that faults will occur during runtime. These faults can lead to unacceptable program behavior during execution, even leading to the program terminating unexpectedly. Using a distributed event-driven runtime software-fault monitor to repair faulty states creates an enforceable runtime specification. Using such an architecture can help ensure that emergent systems operate within specification, increasing the reliability of such software.},
	author = {Lewis, Chris and Whitehead, Jim},
	year = {2010},
	note = {ISBN: 9781605587196},
	keywords = {[Electronic Manuscript], driven systems, event-, message broker, rule engine, runtime software-fault monitoring, specifications, temporal invariants},
	pages = {275}
}

@article{callele_introduction_2010,
	title = {An introduction to experience requirements},
	doi = {10.1109/RE.2010.55},
	abstract = {We consider the application of requirements engineering principles and techniques to the elicitation, capture, and representation of the output of the user experience design process. A stimulus-perception-response model is used to motivate experience requirements, defined as descriptions of user experiences that must be met (functional experiences) or are satisfaction goals (non-functional experiences). We identify potential benefits and look at experience requirements in video games. ? 2010 IEEE.},
	journal = {Proceedings of the 2010 18th IEEE International Requirements Engineering Conference, RE2010},
	author = {Callele, David and Neufeld, Eric and Schneider, Kevin},
	year = {2010},
	note = {ISBN: 9780769541624
Publisher: IEEE},
	keywords = {Experience requirements, Non-functional requirements, User experience design},
	pages = {395--396}
}

@book{schultz_game_2005,
	address = {Boston, MA},
	title = {Game testing all in one},
	isbn = {978-1-59200-373-0},
	language = {en},
	publisher = {Thomson/Course Technology},
	author = {Schultz, Charles P. and Bryant, Robert and Langdell, Tim},
	year = {2005},
	note = {OCLC: ocm58530176},
	keywords = {Computer games, Design, Programming, Video games},
	file = {Schultz et al. - 2005 - Game testing all in one.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/8LHZDNSB/Schultz et al. - 2005 - Game testing all in one.pdf:application/pdf}
}

@inproceedings{mirza-babaei_playtesting_2016,
	address = {New York, NY, USA},
	series = {{AcademicMindtrek} '16},
	title = {Playtesting for indie studios},
	isbn = {978-1-4503-4367-1},
	url = {http://doi.org/10.1145/2994310.2994364},
	doi = {10.1145/2994310.2994364},
	abstract = {Creating video games is a lengthy and demanding process. Financial success for games studios often depends on making games that deliver a fun and engaging experience for a diverse audience of players. Therefore, understanding how players interact and behave during gameplay is of vital importance. Playtesting aims to assist developers to achieve their design intent and help to identify and resolve potential problem areas during development. However, playtests are not always feasible or affordable for smaller, independent game developers (indie studios) because they require specialized equipment and expertise. In addition to this, there is a lack of research on the value of playtesting for indie studios, which means most indie developers are not convinced of the value of user research and playtesting. This paper reports on our collaboration with six commercial indie developers conducting eleven rounds of playtesting session. Through these collaborations, our paper contributes to this growing domain by highlighting the value of playtesting for indie developers and discussing the user research process and approaches based on indie developers' needs and budget.},
	urldate = {2020-11-18},
	booktitle = {Proceedings of the 20th {International} {Academic} {Mindtrek} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Mirza-Babaei, Pejman and Moosajee, Naeem and Drenikow, Brandon},
	month = oct,
	year = {2016},
	keywords = {case studies, game development, games user research, indie developers, playtesting, user experience},
	pages = {366--374},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/Z4S9ZKZL/Mirza-Babaei et al. - 2016 - Playtesting for indie studios.pdf:application/pdf}
}

@article{bingamawa_review_2016,
	title = {A {Review} on {Requirement} {Engineering} {Process} in {Game} {Development}},
	url = {http://rgdoi.net/10.13140/RG.2.2.32494.00329},
	doi = {10.13140/RG.2.2.32494.00329},
	abstract = {With rapid development of technology, game development is also follow the improvement of technology. Many choices of game application is available in application store for people to play. However, people will be selective to choose which game that they want to play. This is becoming a new challenge for game developer to provide a game application that fulfill the market needs and trends. By applying requirement engineering technique in game development, it may help the developers to provide a game that can satisfy and fulfil the user requirement. In this paper, the author discuss a general requirement engineering phase, technique and also other requirement that proposed by previous researcher. The aims of this paper is to give a review on the requirement engineering technique implemented in game development.},
	language = {en},
	urldate = {2020-11-04},
	author = {Bingamawa, Muhammad Tosan and Ahmad, Sabrina},
	year = {2016},
	note = {Publisher: Unpublished},
	file = {Bingamawa and Ahmad - 2016 - A Review on Requirement Engineering Process in Gam.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/YHYE8JZX/Bingamawa and Ahmad - 2016 - A Review on Requirement Engineering Process in Gam.pdf:application/pdf}
}

@article{engstrom_gdc_2019,
	title = {{GDC} vs. {DiGRA}: {Gaps} in {Game}},
	abstract = {Previous studies have revealed a gap between game research and industry game production. This article presents an analysis of this research gap using the tracks and summits at the Game Developers Conference (GDC) as a point of reference. The result shows that there are several areas where there exists very little research. The DiGRA conference is no exception – since 2006, only a handful of papers present empirics from game production. Studies are in particular rare for content producing areas, such as audio, visual arts, and narrative. There are plenty of opportunities for researchers to extract experiences and knowledge from game professionals and to identify problems to be addressed. To do this, collaboration models need to be established that endure non-disclosure agreements and crunch cultures.},
	language = {en},
	author = {Engström, Henrik},
	year = {2019},
	pages = {19},
	file = {Engström - GDC vs. DiGRA Gaps in Game.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/TRGKLFPE/Engström - GDC vs. DiGRA Gaps in Game.pdf:application/pdf}
}

@inproceedings{mckenzie_software_2019,
	address = {Barcelona, Spain},
	title = {Software {Engineering} {Practices} and {Methods} in the {Game} {Development} {Industry}},
	isbn = {978-1-4503-6871-1},
	url = {http://dl.acm.org/citation.cfm?doid=3341215.3354647},
	doi = {10.1145/3341215.3354647},
	abstract = {Applying current software engineering practices in the game development industry is a rapidly growing but under researched area. Whether game development studios align to traditional software engineering practices such as agile methodologies to develop their games is not known. It is also unknown how studios perceive their own adherence to such agile development practices. Furthermore, struggling start-up studios could beneﬁt from implementing development practices based on the experiences of established studios. Hence, an exploratory survey was conducted to determine the practice of, and perception of agile game development in New Zealand. The results show that while studios universally state and perceive that they use the agile framework Scrum and sometimes Kanban, their actual practices often differ from these frameworks in key areas. Furthermore, studios collectively overestimated their level of adherence with Scrum. This has general implications for related academic studies as well as for the game industry’s own evaluation and improvement of their practices.},
	language = {en},
	urldate = {2020-11-04},
	booktitle = {Extended {Abstracts} of the {Annual} {Symposium} on {Computer}-{Human} {Interaction} in {Play} {Companion} {Extended} {Abstracts}  - {CHI} {PLAY} '19 {Extended} {Abstracts}},
	publisher = {ACM Press},
	author = {McKenzie, Timothy and Trujillo, Miguel Morales and Hoermann, Simon},
	year = {2019},
	pages = {181--193},
	file = {McKenzie et al. - 2019 - Software Engineering Practices and Methods in the .pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/E3I3VDX7/McKenzie et al. - 2019 - Software Engineering Practices and Methods in the .pdf:application/pdf}
}

@article{ahmed_open_2017,
	title = {Open source computer game application: {An} empirical analysis of quality concerns},
	volume = {21},
	issn = {1875-9521},
	shorttitle = {Open source computer game application},
	url = {http://www.sciencedirect.com/science/article/pii/S1875952117300290},
	doi = {10.1016/j.entcom.2017.04.001},
	abstract = {A computer game is one of the major sources of entertainment. People nowadays spend a lot of time while playing computer games. Open Source Software (OSS), despite some reservations on the quality, has been steadily increasing its popularity. The uncontrolled change management foresees an increase in the complexity of the methods and classes in an application, which sometimes result in poor quality. The number of OSS projects dealing with computer game development are on the increase, which lead to more research interests in assessing the quality of OSS resulting products. Some studies that deal with the evaluating the OSS quality, concerns use user’s survey approach focusing on the usability aspects. The empirical investigations to evaluate the quality concerns of the design, using internal code attributes, needs attention of researchers. In this study, we aim to investigate the quality concerns of the design complexity of methods in OSS computer game applications using internal code attributes. We use three quality criteria, namely correctness, reliability and maintainability from the set of six factors of ISO 9126 model. We collect data from 55 OSS computer game applications and use various statistical analysis techniques to examine the research question of this study. We conclude that the methods of the OSS computer game applications demonstrate an acceptable level of quality in the three criteria of correctness, reliability and maintainability.},
	language = {en},
	urldate = {2020-11-04},
	journal = {Entertainment Computing},
	author = {Ahmed, Faheem and Zia, Muhammad and Mahmood, Hasan and Al Kobaisi, Shayma},
	month = jun,
	year = {2017},
	keywords = {Computer game, Empirical study, Maintainability, Open source software, Reliability, Software quality},
	pages = {1--10},
	file = {ScienceDirect Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/CQQLL2YU/Ahmed et al. - 2017 - Open source computer game application An empirica.pdf:application/pdf;ScienceDirect Snapshot:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/3RUYYD8U/S1875952117300290.html:text/html}
}

@article{liu_role_2019,
	title = {The role of {Sprint} planning and feedback in game development projects: {Implications} for game quality},
	volume = {154},
	issn = {0164-1212},
	shorttitle = {The role of {Sprint} planning and feedback in game development projects},
	url = {http://www.sciencedirect.com/science/article/pii/S0164121219300974},
	doi = {10.1016/j.jss.2019.04.057},
	abstract = {Game development projects adopt Scrum to leverage their flexibility, as game concepts and the customer preferences are highly abstract and unpredictable. The most desirable features in an original game will not be easily identified during the first phase of development but will emerge later in a clear pattern as developers and testers continuously playtest the game. Thus, game development projects use feedback from game testers to understand what they think of various features and concepts, to obtain a better understanding of problem spaces. This study proposes that game tester feedback moderates the effect of Sprint planning on game quality. A field study was conducted using a pair-matched questionnaire in which 102 game development projects participated. Results showed that Sprint planning has a positive effect on game quality. The results also revealed that iterative feedback has a moderating effect on the relationship between Sprint planning and game quality. Theoretical and practical implications are discussed.},
	language = {en},
	urldate = {2020-11-04},
	journal = {Journal of Systems and Software},
	author = {Liu, Jing-Wei and Ho, Chia-Yu and Chang, Jamie Y. T. and Tsai, Jacob Chia-An},
	month = aug,
	year = {2019},
	keywords = {Feedback, Game development project, Game quality, Game tester, Sprint planning},
	pages = {79--91},
	file = {ScienceDirect Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/4PSTA4LU/Liu et al. - 2019 - The role of Sprint planning and feedback in game d.pdf:application/pdf;ScienceDirect Snapshot:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/TYJA665A/S0164121219300974.html:text/html}
}

@inproceedings{daneva_play-testing_2015,
	title = {Play-{Testing} and {Requirements} {Engineering}: {Implications} for {Research} and {Teaching}},
	shorttitle = {Play-{Testing} and {Requirements} {Engineering}},
	doi = {10.1109/RET.2015.10},
	abstract = {In Requirements Engineering (RE) for large scale game systems, play-testing is an important activity that is used to validate requirements from players' perspective. Play-testers are not professionals that are involved in the process of RE. They are not professional testers, either. Yet, their feedback in terms of perceptions and experiences of the early prototypes of a game, have a decisive impact on what the RE-professionals do next in the RE process. This position paper presents a qualitative study that sought to discover who takes the role of play-testers and what kind of feedback play-testers generate in the early stages of RE for games. The case study responds to the observation that no textbook on RE or software engineering addresses play-testing as a phenomenon, and that classic Computer Science programs at universities teach testing techniques mostly in the context of embedded systems, hence students often are left with little opportunity to develop testing skills that build upon play-testing practices happening in the game development sector. The study therefore was aimed at identifying important implications that play-testing may have for research and teaching.},
	booktitle = {2015 {IEEE}/{ACM} 2nd {International} {Workshop} on {Requirements} {Engineering} and {Testing}},
	author = {Daneva, M.},
	month = may,
	year = {2015},
	keywords = {Blogs, classic computer science programs, computer games, computer science education, Education, embedded systems, Empirical research method, feedback play-testers, game development sector, Games, large scale game systems, Play-testers, Play-testing, Prototypes, Qualitative study, RE process, RE-professionals, requirements engineering, requirements Engineering, Software, software engineering, Software engineering, systems analysis, teaching, Testing, universities},
	pages = {9--12},
	file = {IEEE Xplore Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/YBTKHINR/Daneva - 2015 - Play-Testing and Requirements Engineering Implica.pdf:application/pdf}
}

@inproceedings{mozgovoy_multiplatform_2019,
	title = {Multiplatform {Automated} {Software} {Testing}: {Personal} {Experience} of a {Maintainer}},
	shorttitle = {Multiplatform {Automated} {Software} {Testing}},
	doi = {10.1109/ICRAIE47735.2019.9037751},
	abstract = {Automated testing is an essential part of modern software development pipeline. The extent of functionality to be tested varies a lot from project to project, but at least some basic testing capabilities are built into many current development instruments, and automated testing practices are encouraged in most guidelines. The goal of this paper is to share some personal experience with automated smoke testing of a cross-platform game application. Unlike works dedicated to the general picture of testing tools and practices, this paper focuses on specific details and challenges associated with setting up and maintenance of day-to-day automated testing activities.},
	booktitle = {2019 4th {International} {Conference} and {Workshops} on {Recent} {Advances} and {Innovations} in {Engineering} ({ICRAIE})},
	author = {Mozgovoy, M.},
	month = nov,
	year = {2019},
	keywords = {agile development, automated smoke testing, automated testing, automated testing practices, basic testing capabilities, computer games, cross-platform game application, current development instruments, day-to-day automated testing activities, Games, maintainer personal experience, Mobile handsets, modern software development pipeline, multiplatform automated software testing, Pipelines, program testing, quality assurance, Servers, smoke testing, Software, software engineering, Testing, testing tools, Universal Serial Bus},
	pages = {1--4},
	file = {IEEE Xplore Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/STXT7E86/Mozgovoy - 2019 - Multiplatform Automated Software Testing Personal.pdf:application/pdf}
}

@article{mozgovoy_quality_2018,
	title = {{QUALITY} {ASSURANCE} {IN} {A} {MOBILE} {GAME} {PROJECT}: {A} {CASE} {STUDY}},
	abstract = {Quality assurance is an integral part of the software development process. Game projects possess their own distinctive traits that affect all stages of work, including quality assurance. The goal of this paper is to share the lessons learned during a three year-long mobile game development project. I will discuss the techniques that turned out to be most efficient for us: manual testing, automated and manual runtime bug reporting, Crashlytics crash analysis, and automated smoke testing. I will outline how these types of testing address typical game-specific issues, and why they can be recommended for a wide range of game projects.},
	language = {en},
	author = {Mozgovoy, Maxim},
	year = {2018},
	pages = {3},
	file = {Mozgovoy - QUALITY ASSURANCE IN A MOBILE GAME PROJECT A CASE.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/XMPVAA5F/Mozgovoy - QUALITY ASSURANCE IN A MOBILE GAME PROJECT A CASE.pdf:application/pdf}
}

@inproceedings{de_oliveira_neto_is_2019,
	address = {Salvador, Brazil},
	title = {Is there time for {Software} {Testing} in the {Indie} {Games} {Development}?: {A} survey with practitioners of the game industry},
	isbn = {978-1-4503-7651-8},
	shorttitle = {Is there time for {Software} {Testing} in the {Indie} {Games} {Development}?},
	url = {http://dl.acm.org/citation.cfm?doid=3350768.3350787},
	doi = {10.1145/3350768.3350787},
	abstract = {In 2018, the game industry made about 137,9 billion dollars worldwide in a very competitive market, since each day new games are launched. Games can be created by large development companies; or by small teams with few resources, which pursue innovation and originality in games, commonly referred to as indie games. Regardless of the size of the organization and/or team, the complexity of the development related to the production of such software is similar. In order to deliver high quality games, the practitioners carry out software tests during the production of their indie games. These tests aim to analyze the speciﬁc characteristics of this type of software, such as the degree of entertainment and playability aspects. However, there still no consensus about how the test activities are performed during the development process of indie games. This paper presents a survey to identify the test practices during the development of indie games, aiming to understand how these activities are performed. As a result, we identiﬁed that developers worry about the execution of tests during the development of indie games, focusing on techniques that consider more than one inherent aspects of the game. Within the aspects that these developers focus on, we can name: the identiﬁcation of bugs, veriﬁcation of playability aspects and degree of entertainment of the game.},
	language = {pt},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the {XXXIII} {Brazilian} {Symposium} on {Software} {Engineering}  - {SBES} 2019},
	publisher = {ACM Press},
	author = {de Oliveira Neto, José Nunes and Viana, Davi and Sá, Eveline and Rivero, Luis and Lopes, Rafael Fernandes and Silva, Francisco},
	year = {2019},
	pages = {37--46},
	file = {de Oliveira Neto et al. - 2019 - Is there time for Software Testing in the Indie Ga.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/FIKZ28N4/de Oliveira Neto et al. - 2019 - Is there time for Software Testing in the Indie Ga.pdf:application/pdf}
}

@inproceedings{borrelli_detecting_2020,
	address = {Seoul Republic of Korea},
	title = {Detecting {Video} {Game}-{Specific} {Bad} {Smells} in {Unity} {Projects}},
	isbn = {978-1-4503-7517-7},
	url = {https://dl.acm.org/doi/10.1145/3379597.3387454},
	doi = {10.1145/3379597.3387454},
	abstract = {The growth of the video game market, the large proportion of games targeting mobile devices or streaming services, and the increasing complexity of video games trigger the availability of video gamespecific tools to assess performance and maintainability problems. This paper proposes UnityLinter, a static analysis tool that supports Unity video game developers to detect seven types of bad smells we have identified as relevant in video game development. Such smell types pertain to performance, maintainability and incorrect behavior problems. After having defined the smells by analyzing the existing literature and discussion forums, we have assessed their relevance with a survey involving 68 participants. Then, we have analyzed the occurrence of the studied smells in 100 opensource Unity projects, and also assessed UnityLinter’s accuracy. Results of our empirical investigation indicate that developers wellreceived performance- and behavior-related issues, while some maintainability issues are more controversial. UnityLinter is, in general, accurate enough in detecting smells (86\%-100\% precision and 50\%-100\% recall), and our study shows that the studied smell types occur in 39\%-97\% of the analyzed projects.},
	language = {en},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the 17th {International} {Conference} on {Mining} {Software} {Repositories}},
	publisher = {ACM},
	author = {Borrelli, Antonio and Nardone, Vittoria and Di Lucca, Giuseppe A. and Canfora, Gerardo and Di Penta, Massimiliano},
	month = jun,
	year = {2020},
	pages = {198--208},
	file = {Borrelli et al. - 2020 - Detecting Video Game-Specific Bad Smells in Unity .pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/KGKIS8AP/Borrelli et al. - 2020 - Detecting Video Game-Specific Bad Smells in Unity .pdf:application/pdf}
}

@phdthesis{hooper_automated_2017,
	type = {Thesis},
	title = {Automated {Testing} and {Validation} of {Computer} {Graphics} {Implementations} for {Cross}-platform {Game} {Development}},
	copyright = {OpenAccess},
	url = {https://openrepository.aut.ac.nz/handle/10292/11017},
	abstract = {Commercially released cross-platform video games often feature graphical defects, which negatively impact on the reputations of developers and publishers, as well as on the experience of the players. Game industry testing practices often rely on human testers to assure the quality of a game prior to release. 
 
This thesis investigates the question of whether the testing and validation of computer graphics implementations for cross-platform game development can be automated to reduce the burden on human testers, accelerate the testing phase, and improve the quality of games. Using Design Science Research methods and patterns, iterative development and evaluation is undertaken to construct artefacts, drawing upon prior research and industrial works in related fields such as film and television, as well as proprietary game development insight. Elements of existing automated testing systems and image comparison techniques are combined with industry standard cross-platform development tools and methods to create a reusable and generalisable model of an automated test system, featuring image comparison methods, and record and playback techniques for cross-platform game implementations. 
 
In conclusion, this thesis shows that it is possible to create a novel system that is able to detect graphical defects in output from a cross-platform game implementation.},
	language = {en},
	urldate = {2020-11-04},
	school = {Auckland University of Technology},
	author = {Hooper, Steffan},
	year = {2017},
	note = {Accepted: 2017-11-23T21:02:38Z},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/6EZ7Y4IW/Hooper - 2017 - Automated Testing and Validation of Computer Graph.pdf:application/pdf}
}

@article{wallner_visualization-based_2013,
	title = {Visualization-based analysis of gameplay data – {A} review of literature},
	volume = {4},
	issn = {1875-9521},
	url = {http://www.sciencedirect.com/science/article/pii/S1875952113000049},
	doi = {10.1016/j.entcom.2013.02.002},
	abstract = {As video games are becoming more and more complex and are reaching a broader audience, there is an increasing interest in procedures to analyze player behavior and the impact of design decisions. Game companies traditionally relied on user-testing methods, like playtesting, surveys or videotaping, to obtain player feedback. However, these qualitative methods for data collection are time-consuming and the obtained data is often incomplete or subjective. Therefore, instrumentation became popular in recent years to unobtrusively obtain the detailed data required to thoroughly evaluate player behavior. To make sense of the large amount of data, appropriate tools and visualizations have been developed. This article reviews literature on visualization-based analysis of game metric data in order to give an overview of the current state of this emerging field of research. We discuss issues related to gameplay analysis, propose a broad categorization of visualization techniques and discuss their characteristics. Furthermore, we point out open problems to promote future research in this area.},
	language = {en},
	number = {3},
	urldate = {2020-11-04},
	journal = {Entertainment Computing},
	author = {Wallner, G. and Kriglstein, S.},
	month = aug,
	year = {2013},
	keywords = {Evaluation, Gameplay analysis, Games, Visualization},
	pages = {143--155},
	file = {ScienceDirect Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/NC9FMN2Q/Wallner and Kriglstein - 2013 - Visualization-based analysis of gameplay data – A .pdf:application/pdf}
}

@inproceedings{mirza-babaei_unified_2014,
	address = {Toronto, Ontario, Canada},
	title = {Unified visualization of quantitative and qualitative playtesting data},
	isbn = {978-1-4503-2474-8},
	url = {http://dl.acm.org/citation.cfm?doid=2559206.2581224},
	doi = {10.1145/2559206.2581224},
	abstract = {A major challenge in studying player experience is tying together the results of quantitative and qualitative games user research (GUR) data. For example, combining data from players’ physiological measures with questionnaire or interview results and in-game movement data into a single report is not straightforward because the underlying data is often in different formats. Visualization techniques can facilitate the understanding of relationships among these data sets. Although various visualization techniques have already been introduced in GUR, most of these techniques only focus on displaying large amounts of data captured directly via telemetry without integrating qualitative or contextual data on players’ emotional experience. Hence, here we propose a novel visualization approach to triangulate the above mentioned mixed data sources.},
	language = {en},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the extended abstracts of the 32nd annual {ACM} conference on {Human} factors in computing systems - {CHI} {EA} '14},
	publisher = {ACM Press},
	author = {Mirza-Babaei, Pejman and Wallner, Günter and McAllister, Graham and Nacke, Lennart E.},
	year = {2014},
	pages = {1363--1368},
	file = {Mirza-Babaei et al. - 2014 - Unified visualization of quantitative and qualitat.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/EQVFQ93E/Mirza-Babaei et al. - 2014 - Unified visualization of quantitative and qualitat.pdf:application/pdf}
}

@inproceedings{wallner_aggregated_2019,
	address = {Glasgow, Scotland Uk},
	title = {Aggregated {Visualization} of {Playtesting} {Data}},
	isbn = {978-1-4503-5970-2},
	url = {http://dl.acm.org/citation.cfm?doid=3290605.3300593},
	doi = {10.1145/3290605.3300593},
	abstract = {Playtesting is a key component in the game development process aimed at improving the quality of games through the collection of gameplay data and identification of design issues. Visualization techniques are currently being employed to help integrate quantitative and qualitative data. Despite that, two existing challenges are to determine the level of detail to be presented to developers based on their needs and to effectively communicate the collected data so that informed design changes can be reached. In this paper, we first propose an aggregated visualization technique that makes use of clustering, territory tessellation, and trajectory aggregation to simultaneously display mixed playtesting data. Secondly, to assess the usefulness of our technique we evaluate it through interviews with professional game developers and compare it to a non-aggregated visualization. The results of this study also provide an important contribution towards identifying areas of improvement in the portrayal of gameplay data.},
	language = {en},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the 2019 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}  - {CHI} '19},
	publisher = {ACM Press},
	author = {Wallner, Günter and Halabi, Nour and Mirza-Babaei, Pejman},
	year = {2019},
	pages = {1--12},
	file = {Wallner et al. - 2019 - Aggregated Visualization of Playtesting Data.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/5FD3RD7K/Wallner et al. - 2019 - Aggregated Visualization of Playtesting Data.pdf:application/pdf}
}

@article{bastos_evaluating_2019,
	title = {Evaluating the {Use} of {Affordable} {User} {Testing} and {Visualization} {Techniques} in {Level} {Design} of a {Hardcore} {2D} {Platform} {Game}},
	abstract = {As the videogame industry evolves, with more diverse and demanding players, making games becomes an increasingly complex task. Modern developers apply Games User Research (GUR) methods to make informed game design decisions based on their target audience. Traditional methods include observation, interview, and questionnaires. In order to obtain detailed user or gameplay information, complementary methods might be required. We analyze the inclusion of two affordable complementary methods, namely webcam-based eye-tracking and telemetry, along with data visualization in a playtesting routine. By developing three versions of a hardcore 2D platform game that demands multitasking abilities using different GUR methods, we were able to ﬁnd that the chosen complementary methods cover a signiﬁcant amount of gameplay issues. The metrics and eye-tracking data visualization provided insights about multitasking and level design. Furthermore, we discuss the challenges of evaluating prototypes regarding a more enjoyable experience when frustration is a desirable gameplay element.},
	language = {en},
	author = {Bastos, Arthur Silva and Santos, Emanuele and Gomes, George Allan Menezes and Mourao, Marcos Arruda},
	year = {2019},
	pages = {10},
	file = {Bastos et al. - 2019 - Evaluating the Use of Affordable User Testing and .pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/G7CZUHR3/Bastos et al. - 2019 - Evaluating the Use of Affordable User Testing and .pdf:application/pdf}
}

@inproceedings{agarwal_visualizing_2020,
	title = {Visualizing {AI} {Playtesting} {Data} of {2D} {Side}-scrolling {Games}},
	doi = {10.1109/CoG47356.2020.9231915},
	abstract = {Human playtesting is a useful step in the game development process, but involves high economic costs and is time-consuming. While playtesting through artificial intelligence is gaining attention, it is challenging to analyze the collected data. We address the challenge by proposing visualizations to derive insights about level design in 2D side-scrolling games. To focus on the navigation behavior in the level design, we study the trajectories of computer agents trained using artificial intelligence. We demonstrate the effectiveness of our approach by implementing a web-based prototype and presenting the insights gained from the visualizations for the game Sonic the Hedgehog 2. We highlight lessons learned and directions to customize the approach for other analysis goals of playtesting.},
	booktitle = {2020 {IEEE} {Conference} on {Games} ({CoG})},
	author = {Agarwal, S. and Herrmann, C. and Wallner, G. and Beck, F.},
	month = aug,
	year = {2020},
	note = {ISSN: 2325-4289},
	keywords = {artificial intelligence, playtesting, visualization},
	pages = {572--575},
	file = {IEEE Xplore Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/EG2CWFQN/Agarwal et al. - 2020 - Visualizing AI Playtesting Data of 2D Side-scrolli.pdf:application/pdf}
}

@inproceedings{halabi_assessing_2019,
	address = {Barcelona Spain},
	title = {Assessing the {Impact} of {Visual} {Design} on the {Interpretation} of {Aggregated} {Playtesting} {Data} {Visualization}},
	isbn = {978-1-4503-6688-5},
	url = {https://dl.acm.org/doi/10.1145/3311350.3347164},
	doi = {10.1145/3311350.3347164},
	abstract = {Making effective use of data generated from players interacting with games (often via playtesting to improve game quality) is a challenging task since the datasets are often mixed and very large. To address this, various visualization techniques have been introduced to help game developers cope with the data. However, there is a gap in research concerning the impact of different visual designs on the interpretation of gameplay data. In this paper, we propose four alternative visual designs of an aggregated visualization and assess how professional game developers interpret the data differently due to changes in the visual designs. Our results provide an understanding and a supporting argument about the impact of the visual properties transparency and shading (both positive and negative) on the interpretation of the represented data. This is an important contribution to the ﬁeld of Games User Research given the current move towards data-informed decision making and the popularity of data visualizations.},
	language = {en},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the {Annual} {Symposium} on {Computer}-{Human} {Interaction} in {Play}},
	publisher = {ACM},
	author = {Halabi, Nour and Wallner, Günter and Mirza-Babaei, Pejman},
	month = oct,
	year = {2019},
	pages = {639--650},
	file = {Halabi et al. - 2019 - Assessing the Impact of Visual Design on the Inter.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/6XU2EB2V/Halabi et al. - 2019 - Assessing the Impact of Visual Design on the Inter.pdf:application/pdf}
}

@incollection{wallner_introduction_2015,
	address = {Pittsburgh, PA, USA},
	title = {An introduction to gameplay data visualization},
	isbn = {978-1-312-88473-1},
	abstract = {The prevalence of internet-enabled gaming devices enables game developers nowadays to remotely and unobtrusively monitor every aspect of a game, allowing them to accumulate large amounts of data of the player-game interaction over extended time periods. This data has become a viable source for developers to guide decision-making throughout the game design process and even after the game has been released, for example, to identify balancing issues (Kim, et al., 2008; Zoeller, 2010), to understand player movement (Moura, El-Nasr and Shaw, 2011), to reduce production costs (Hullett, et al., 2011), or to uncover bugs (Zoeller, 2010), to name but a few. At the same time, the increasing popularity of online multiplayer gaming has attached great importance to in-game statistics to allow players to recap their performance and to compare it with others. This growing interest in game telemetry data is reflected by the emergence of the new field of game analytics--concerned with the discovery and communication of meaningful patterns in data as applied in the context of game development and game research (cf. El-Nasr, Drachen and Canossa, 2013). Game analytics heavily relies on visualization techniques to assist developers and players alike to understand, analyze, and explore the data (cf. Wallner and Kriglstein, 2013). Visualizations in game research can be helpful to discover unexpected paths which have been taken by the players, to identify possible design and balancing problems, or to find common patterns in the behavior of the players. Moreover, since the rich interaction possibilities provided by a game can give rise to emergent behavior which is hard to anticipate, visualizations can assist in exploratory data analysis helping the analyst to discover potentially interesting structures, trends, and anomalies not thought of beforehand.},
	urldate = {2020-11-04},
	booktitle = {Game {Research} {Methods}},
	publisher = {ETC Press},
	author = {Wallner, Günter and Kriglstein, Simone},
	month = jan,
	year = {2015},
	pages = {231--250},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/X3FKX585/Wallner and Kriglstein - 2015 - An introduction to gameplay data visualization.pdf:application/pdf}
}

@inproceedings{pirker_how_2016,
	address = {Cham},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {How {Playstyles} {Evolve}: {Progression} {Analysis} and {Profiling} in {Just} {Cause} 2},
	isbn = {978-3-319-46100-7},
	shorttitle = {How {Playstyles} {Evolve}},
	doi = {10.1007/978-3-319-46100-7_8},
	abstract = {Evaluating progression of players in a game can take a variety of forms, but ideally combines playstyle or performance analysis with one or more aspects of progression, e.g. through a level- or mission-based structure. Furthermore, visualization of the results of analysis are essential to ensure that action can be taken on them. In this paper behavioral profiling through Archetype Analysis is combined with progression analysis, expanding on previous work in the area, and extending it into the context of Open-World Games. The proposed methodological framework is applied to the case of the action-adventure title Just Cause 2, focusing on the main storyline. The results show how players navigate the content of the title, and how some playstyles remain constant throughout the game, whereas others emerge or disappear with player progress. Additionally, player performance as a function of progression is evaluated across a number of key metrics.},
	language = {en},
	booktitle = {Entertainment {Computing} - {ICEC} 2016},
	publisher = {Springer International Publishing},
	author = {Pirker, Johanna and Griesmayr, Simone and Drachen, Anders and Sifa, Rafet},
	editor = {Wallner, Günter and Kriglstein, Simone and Hlavacs, Helmut and Malaka, Rainer and Lugmayr, Artur and Yang, Hyun-Seung},
	year = {2016},
	keywords = {Cluster analysis, Game analytics, Player behavior, Playstyle, Progression, Visualization},
	pages = {90--101},
	file = {Springer Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/SNP72T8H/Pirker et al. - 2016 - How Playstyles Evolve Progression Analysis and Pr.pdf:application/pdf}
}

@inproceedings{birk_metric_2015,
	address = {New York, NY, USA},
	series = {{AcademicMindTrek} '15},
	title = {A metric for automatically flagging problem levels in games from prototype walkthrough data},
	isbn = {978-1-4503-3948-3},
	url = {http://doi.org/10.1145/2818187.2818281},
	doi = {10.1145/2818187.2818281},
	abstract = {Playtesting early and often is important for all game developers, but especially for the growing number of indie teams producing commercial games; however, playtesting game prototypes remains an expensive and time-consuming process. In this paper, we present a new game metric, automatically generated from prototype walkthrough data, which flags problematic levels so that developers know where to invest their effort in fixing the game. Created during the development of the commercial game Angus Hates Aliens, in collaboration with indie developer Team Stendec, our death-related problem level likelihood indicator (DPLI) is interpretable and actionable, i.e., it easily allowed the developer to know where to fix the game levels. Finally, DPLI correlated to enjoyment ratings for the game levels, suggesting that it was a good indicator of problems in the context of our prototype evaluation.},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the 19th {International} {Academic} {Mindtrek} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Birk, Max V. and Lürig, Christoph and Mandryk, Regan L.},
	month = sep,
	year = {2015},
	keywords = {game metrics, heat maps, indie, level design, playtesting},
	pages = {33--40},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/SYBX4NFN/Birk et al. - 2015 - A metric for automatically flagging problem levels.pdf:application/pdf}
}

@inproceedings{paranthaman_arapid_2019,
	address = {New York, NY, USA},
	series = {{CHI} {PLAY} '19},
	title = {{ARAPID}: {Towards} {Integrating} {Crowdsourced} {Playtesting} into the {Game} {Development} {Environment}},
	isbn = {978-1-4503-6688-5},
	shorttitle = {{ARAPID}},
	url = {http://doi.org/10.1145/3311350.3347163},
	doi = {10.1145/3311350.3347163},
	abstract = {Iterative playtesting of games is crucial, but remains a time consuming and ad-hoc process. In this work, we streamlined and systematized the playtesting process by adding support for crowdsourced, on-demand playtesting directly into a game development environment to test and evaluate platform games. Our system, called ARAPID (As Rapid As Possible Iterative Design), manages playtesting from a control panel in Unity and recruits players from Mechanical Turk. With this system, game designers can launch playtests and visualize results directly in the editor. To better understand and evaluate this approach, we ran three studies on two basic platform games. First, a game designer used ARAPID to playtest and rapidly iterate on the design of the games; we found the games were improved toward specific design goals. Second, we analyzed the impact of different forms of recruitment on playtesting speed; we found that pre-recruitment and over-recruitment of players can reduce the time needed to run playtests. Third, we analyzed the impact of players' familiarity with the game on the precision of playtest results; we found that whether or not players are allowed to replay the game can impact results.},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the {Annual} {Symposium} on {Computer}-{Human} {Interaction} in {Play}},
	publisher = {Association for Computing Machinery},
	author = {Paranthaman, Pratheep Kumar and Cooper, Seth},
	month = oct,
	year = {2019},
	keywords = {crowdsourcing, iterative design, playtesting, rapid iteration},
	pages = {121--133},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/76GMADJD/Paranthaman and Cooper - 2019 - ARAPID Towards Integrating Crowdsourced Playtesti.pdf:application/pdf}
}

@article{godinho-paiva_game_2019,
	title = {Game testing and evaluation on real devices: {Exploring} in the case of the {Open} {Device} {Lab} community},
	copyright = {Copyright (c) 2019 First Monday},
	issn = {1396-0466},
	shorttitle = {Game testing and evaluation on real devices},
	url = {https://firstmonday.org/ojs/index.php/fm/article/view/9525},
	doi = {10.5210/fm.v24i8.9525},
	abstract = {Game testing and evaluation (T\&E) still have no standards to ensure quality. T\&E on real devices instead of only using a software solution (e.g., emulators) has become a basic procedure for mobile software design and development, including games. This study presents the Open Device Lab community (ODL), a grassroots movement helping the Web and app community to have free access to device labs. The findings reveal how the open community can benefit the game industry.},
	language = {en},
	urldate = {2020-11-04},
	journal = {First Monday},
	author = {Godinho-Paiva, Raquel and Contreras-Espinosa, Ruth Sofia},
	month = aug,
	year = {2019},
	keywords = {game development life cycle, game testing and evaluation, HCI, Open Device Lab community, real device},
	file = {View of Game testing and evaluation on real devices\: Exploring in the case of the Open Device Lab community | First Monday:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/UMDP2I69/8059.html:text/html}
}

@inproceedings{chen_game_2016,
	address = {Cham},
	series = {Studies in {Computational} {Intelligence}},
	title = {A {Game} {Framework} {Supporting} {Automatic} {Functional} {Testing} for {Games}},
	isbn = {978-3-319-26396-0},
	doi = {10.1007/978-3-319-26396-0_2},
	abstract = {When developing a computer (mobile) game, testing the game is an important task and takes a large share of the development cost. So far, testing a game’s functional features relies mainly on human testers, who personally plays the game, and is thus labor intensive. This paper proposes a method that automates game testing. Since games are usually built on top of game frameworks, the idea is to enhance a game framework with a testing layer, which can execute (playback) test scripts that perform user events and assert the correctness of the game. We design an HTML5 game framework with such a support. In addition, a case study is performed to compare the testing cost of three different methods: writing a test script directly, recording a test script, and testing the game directly by a human tester. The results showed that when repeated testings are necessary, an automatic testing (either writing or recording test scripts) can reduce human cost. Among these three testing methods, recording scripts was the most favored method.},
	language = {en},
	booktitle = {Applied {Computing} \& {Information} {Technology}},
	publisher = {Springer International Publishing},
	author = {Chen, Woei-Kae and Liu, Chien-Hung and Chen, Ping-Hung and Hsu, Chia-Sheng},
	editor = {Lee, Roger},
	year = {2016},
	keywords = {Game Developer, Human Tester, Human Time, Mobile Game, Testing Cost},
	pages = {13--26},
	file = {Springer Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/JU4NKHSR/Chen et al. - 2016 - A Game Framework Supporting Automatic Functional T.pdf:application/pdf}
}

@article{albaghajati_video_2020,
	title = {Video {Game} {Automated} {Testing} {Approaches}: {An} {Assessment} {Framework}},
	issn = {2475-1510},
	shorttitle = {Video {Game} {Automated} {Testing} {Approaches}},
	doi = {10.1109/TG.2020.3032796},
	abstract = {The video-game industry has recently grown from focused markets to mainstream. The advancements the industry has been enjoying motivated researches to propose techniques and tools to support the activities across the different phases of the game development lifecycle. Game testing is one of the crucial activities within the game development process. Due to the nature of game testing, many automated game testing techniques have been proposed in the literature. However, there is no framework that could be used to aid practitioners in selecting appropriate techniques suitable for their particular development efforts. In this paper we present an attribute-based framework to classify and compare these techniques and provide such aid to practitioners. The framework is also meant to guide researchers interested in proposing new game testing techniques. The paper discusses a number of prominent techniques against the framework. Analysis of the discussion reveals gaps and suggests open points for future research.},
	journal = {IEEE Transactions on Games},
	author = {Albaghajati, A. M. and Ahmed, M. A. K.},
	year = {2020},
	note = {Conference Name: IEEE Transactions on Games},
	keywords = {Assessment Framework, Data mining, Evolutionary computation, Game Development, Game Testing, Games, Industries, Playtesting, Search engines, Software, Software Testing, Testing},
	pages = {1--1},
	file = {IEEE Xplore Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/B5BSWQJ6/Albaghajati and Ahmed - 2020 - Video Game Automated Testing Approaches An Assess.pdf:application/pdf}
}

@inproceedings{choi_playtesting_2016,
	address = {New York, NY, USA},
	series = {{CHI} {PLAY} '16},
	title = {Playtesting with a {Purpose}},
	isbn = {978-1-4503-4456-2},
	url = {http://doi.org/10.1145/2967934.2968103},
	doi = {10.1145/2967934.2968103},
	abstract = {Playtesting, or using play to guide game design, gives designers feedback about whether their game is meeting their goals and the player's expectations. We report a case study of designing, deploying, and iterating on a series of playtesting workshops for novice game designers. We identify common missteps made by novice designers and address these missteps through the concept of purposefulness, understanding why you are playtesting as well as how to playtest. We ground our workshops in the development of rich player experience goals, which inform playtest design, data collection and iteration. We show that by applying methods taught in our workshops, novice game designers leveraged playtest methods and tools, employed playtesting and data collection methods appropriate for their goals, and effectively applied playtest data in iterative design. We conclude with lessons learned and next steps in our research on playtesting.},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the 2016 {Annual} {Symposium} on {Computer}-{Human} {Interaction} in {Play}},
	publisher = {Association for Computing Machinery},
	author = {Choi, Judeth Oden and Forlizzi, Jodi and Christel, Michael and Moeller, Rachel and Bates, MacKenzie and Hammer, Jessica},
	month = oct,
	year = {2016},
	keywords = {game design, game design education, game user research, playtesting},
	pages = {254--265},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/47IFLS2L/Choi et al. - 2016 - Playtesting with a Purpose.pdf:application/pdf}
}

@inproceedings{mirza-babaei_postmortem_2020,
	address = {New York, NY, USA},
	series = {{CHI} '20},
	title = {A {Postmortem} on {Playtesting}: {Exploring} the {Impact} of {Playtesting} on the {Critical} {Reception} of {Video} {Games}},
	isbn = {978-1-4503-6708-0},
	shorttitle = {A {Postmortem} on {Playtesting}},
	url = {http://doi.org/10.1145/3313831.3376831},
	doi = {10.1145/3313831.3376831},
	abstract = {Game studios aim to develop titles that deliver a fun and engaging experience for players. Playtesting promises to help identify opportunities to improve player experience and assist developers in achieving their design intent. However, a lack of research on the added value of playtesting means that many studios are still uncertain about its commercial viability and impact on product success. This gap in understanding is further complicated by the vague definition of "success" afforded by sales figures and review scores. In this paper, we assess reported feature quality of three commercial titles by analyzing playtesting reports and game reviews. By comparing themes and design issues expressed in game reviews to the results of pre-release playtesting for each game, we aim to highlight the value of playtesting and propose a set of guidelines for selecting playtest methods based on the needs of a given game evaluation. Through the real-world case studies presented, this paper contributes to the growing domain of games user research and highlights the value of playtesting in game development.},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the 2020 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Mirza-Babaei, Pejman and Stahlke, Samantha and Wallner, Günter and Nova, Atiya},
	month = apr,
	year = {2020},
	keywords = {game reviews, games user research, playtesting},
	pages = {1--12},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/PUWMZ2MJ/Mirza-Babaei et al. - 2020 - A Postmortem on Playtesting Exploring the Impact .pdf:application/pdf}
}

@article{ling_using_2020,
	title = {Using {Deep} {Convolutional} {Neural} {Networks} to {Detect} {Rendered} {Glitches} in {Video} {Games}},
	volume = {16},
	copyright = {Copyright (c) 2020 Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment},
	issn = {2334-0924},
	url = {https://www.aaai.org/ojs/index.php/AIIDE/article/view/7409},
	abstract = {In this paper, we present a method using Deep Convolutional Neural Networks (DCNNs) to detect common glitches in video games. The problem setting consists of an image (800x800 RGB) as input to be classified into one of five defined classes, normal image, or one of four different kinds of glitches (stretched, low resolution, missing and placeholder textures). Using a supervised approach, we train a ShuffleNetV2 using generated data. This work focuses on detecting texture graphical anomalies achieving arguably good performance with an accuracy of 86.8\%, detecting 88\% of the glitches with a false positive rate of 8.7\%, and with the models being able to generalize and detect glitches even in unseen objects. We apply a confidence measure as well to tackle the issue with false positives as well as an effective way of aggregating images to achieve better detection in production. The main use of this work is the partial automatization of graphical testing in the final stages of video game development.},
	language = {en},
	number = {1},
	urldate = {2020-10-30},
	journal = {Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment},
	author = {Ling, Carlos and Tollmar, Konrad and Gisslén, Linus},
	month = oct,
	year = {2020},
	pages = {66--73},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/BRTWHQAL/Ling et al. - 2020 - Using Deep Convolutional Neural Networks to Detect.pdf:application/pdf}
}

@inproceedings{wilkins_metric_2020,
	address = {Osaka, Japan},
	title = {A {Metric} {Learning} {Approach} to {Anomaly} {Detection} in {Video} {Games}},
	isbn = {978-1-72814-533-4},
	url = {https://ieeexplore.ieee.org/document/9231700/},
	doi = {10.1109/CoG47356.2020.9231700},
	abstract = {With the aim of designing automated tools that assist in the video game quality assurance process, we frame the problem of identifying bugs in video games as an anomaly detection (AD) problem. We develop State-State Siamese Networks (S3N) as an efﬁcient deep metric learning approach to AD in this context and explore how it may be used as part of an automated testing tool. Finally, we show by empirical evaluation on a series of Atari games, that S3N is able to learn a meaningful embedding, and consequently is able to identify various common types of video game bugs.},
	language = {en},
	urldate = {2020-10-30},
	booktitle = {2020 {IEEE} {Conference} on {Games} ({CoG})},
	publisher = {IEEE},
	author = {Wilkins, Benedict and Watkins, Chris and Stathis, Kostas},
	month = aug,
	year = {2020},
	pages = {604--607},
	file = {Wilkins et al. - 2020 - A Metric Learning Approach to Anomaly Detection in.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/KVIJ7XVV/Wilkins et al. - 2020 - A Metric Learning Approach to Anomaly Detection in.pdf:application/pdf}
}

@article{justesen_deep_2020,
	title = {Deep {Learning} for {Video} {Game} {Playing}},
	volume = {12},
	issn = {2475-1510},
	doi = {10.1109/TG.2019.2896986},
	abstract = {In this paper, we review recent deep learning advances in the context of how they have been applied to play different types of video games such as first-person shooters, arcade games, and real-time strategy games. We analyze the unique requirements that different game genres pose to a deep learning system and highlight important open challenges in the context of applying these machine learning methods to video games, such as general game playing, dealing with extremely large decision spaces and sparse rewards.},
	number = {1},
	journal = {IEEE Transactions on Games},
	author = {Justesen, N. and Bontrager, P. and Togelius, J. and Risi, S.},
	month = mar,
	year = {2020},
	keywords = {Algorithms, arcade games, artificial intelligence, computer games, Deep learning, deep learning system, first-person shooters, Games, learning, learning (artificial intelligence), machine learning algorithms, Mathematical model, multilayer neural network, Neural networks, real-time strategy games, Reinforcement learning, Unsupervised learning, video game playing, video games},
	pages = {1--20},
	file = {Submitted Version:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/VUY8XI2F/Justesen et al. - 2020 - Deep Learning for Video Game Playing.pdf:application/pdf}
}

@book{arbon_ai_2020,
	title = {{AI} for {Testing} {Games}},
	url = {https://medium.com/@jarbon/ai-for-testing-games-c5bd90c3153},
	abstract = {I used to tell my team that “games are just too hard to tackle right now” and would tell potential investors “we don’t test games…” Today…},
	language = {en},
	urldate = {2020-11-04},
	author = {arbon, jason},
	month = feb,
	year = {2020},
	note = {Publication Title: Medium},
	file = {case:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/P9XKGFIP/arbon - 2020 - AI for Testing Games.pdf:application/pdf}
}

@article{sironi_self-adaptive_2020,
	title = {Self-{Adaptive} {Monte} {Carlo} {Tree} {Search} in {General} {Game} {Playing}},
	volume = {12},
	issn = {2475-1510},
	doi = {10.1109/TG.2018.2884768},
	abstract = {Many enhancements for Monte Carlo tree search (MCTS) have been applied successfully in general game playing (GGP). MCTS and its enhancements are controlled by multiple parameters that require extensive and time-consuming offline optimization. Moreover, as the played games are unknown in advance, offline optimization cannot tune parameters specifically for single games. This paper proposes a self-adaptive MCTS strategy (SA-MCTS) that integrates within the search a method to automatically tune search-control parameters online per game. It presents five different allocation strategies that decide how to allocate available samples to evaluate parameter values. Experiments with 1 s play-clock on multiplayer games show that for all the allocation strategies the performance of SA-MCTS that tunes two parameters is at least equal to or better than the performance of MCTS tuned offline and not optimized per-game. The allocation strategy that performs the best is N-Tuple Bandit Evolutionary Algorithm (NTBEA). This strategy also achieves a good performance when tuning four parameters. SA-MCTS can be considered as a successful strategy for domains that require parameter tuning for every single problem, and it is also a valid alternative for domains where offline parameter tuning is costly or infeasible.},
	number = {2},
	journal = {IEEE Transactions on Games},
	author = {Sironi, C. F. and Liu, J. and Winands, M. H. M.},
	month = jun,
	year = {2020},
	keywords = {adaptive Monte Carlo tree search, allocation strategy, Combinatorial multi-armed bandit (CMAB), computer games, evolutionary algorithms, evolutionary computation, Evolutionary computation, Games, general game playing, general game playing (GGP), Monte Carlo methods, multiplayer games, multiple parameters, N-tuple bandit evolutionary algorithm, N-tuple systems, offline parameter tuning, on-line parameter tuning, Optimization, parameter values, played games, Resource management, SA-MCTS, search-control parameters, self-adaptive MCTS strategy, single games, time-consuming offline optimization, tree searching, Tuners},
	pages = {132--144},
	file = {IEEE Xplore Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/WA7D85ZD/Sironi et al. - 2020 - Self-Adaptive Monte Carlo Tree Search in General G.pdf:application/pdf}
}

@article{roohi_predicting_2020,
	title = {Predicting {Game} {Difficulty} and {Churn} {Without} {Players}},
	url = {http://arxiv.org/abs/2008.12937},
	doi = {10.1145/3410404.3414235},
	abstract = {We propose a novel simulation model that is able to predict the per-level churn and pass rates of Angry Birds Dream Blast, a popular mobile free-to-play game. Our primary contribution is to combine AI gameplay using Deep Reinforcement Learning (DRL) with a simulation of how the player population evolves over the levels. The AI players predict level difficulty, which is used to drive a player population model with simulated skill, persistence, and boredom. This allows us to model, e.g., how less persistent and skilled players are more sensitive to high difficulty, and how such players churn early, which makes the player population and the relation between difficulty and churn evolve level by level. Our work demonstrates that player behavior predictions produced by DRL gameplay can be significantly improved by even a very simple population-level simulation of individual player differences, without requiring costly retraining of agents or collecting new DRL gameplay data for each simulated player.},
	urldate = {2020-11-05},
	journal = {Proceedings of the Annual Symposium on Computer-Human Interaction in Play},
	author = {Roohi, Shaghayegh and Relas, Asko and Takatalo, Jari and Heiskanen, Henri and Hämäläinen, Perttu},
	month = nov,
	year = {2020},
	keywords = {Computer Science - Artificial Intelligence, I.2.6, I.6.0},
	pages = {585--593},
	file = {arXiv Fulltext PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/6J7ZWKWX/Roohi et al. - 2020 - Predicting Game Difficulty and Churn Without Playe.pdf:application/pdf}
}

@phdthesis{sriram_automated_2019,
	type = {{PhD} {Thesis}},
	title = {Automated playtesting of platformer games using reinforcement learning},
	url = {http://hdl.handle.net/2047/D20335186},
	language = {en},
	urldate = {2020-11-05},
	school = {Northeastern University},
	author = {Sriram, Varun},
	year = {2019},
	doi = {10.17760/D20335186},
	file = {Sriram - 2019 - Automated playtesting of platformer games using re.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/3F85J4N4/Sriram - 2019 - Automated playtesting of platformer games using re.pdf:application/pdf}
}

@inproceedings{paduraru_automatic_2019,
	title = {Automatic {Difficulty} {Management} and {Testing} in {Games} using a {Framework} {Based} on {Behavior} {Trees} and {Genetic} {Algorithms}},
	doi = {10.1109/ICECCS.2019.00026},
	abstract = {The diversity of agent behaviors is an important topic for the quality of video games and virtual environments in general. Offering the most compelling experience for users with different skills is a difficult task, and usually needs important manual human effort for tuning existing code. This can get even harder when dealing with adaptive difficulty systems. Our paper's main purpose is to create a framework that can automatically create behaviors for game agents of different difficulty classes and enough diversity. In parallel with this, a second purpose is to create more automated tests for showing defects in the source code or possible logic exploits with less human effort.},
	booktitle = {2019 24th {International} {Conference} on {Engineering} of {Complex} {Computer} {Systems} ({ICECCS})},
	author = {Paduraru, C. and Paduraru, M.},
	month = nov,
	year = {2019},
	keywords = {agent behaviors, Artificial intelligence, automated tests, automatic difficulty management, behavior tree, behavior trees, computer games, functional testing, game agents, Games, genetic algorithms, Genetic algorithms, learning, learning (artificial intelligence), Manuals, program testing, Robots, source code, source code (software), Testing, trees (mathematics), Tuning, video games, virtual environments},
	pages = {170--179},
	file = {IEEE Xplore Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/BCZHM9YY/Paduraru and Paduraru - 2019 - Automatic Difficulty Management and Testing in Gam.pdf:application/pdf}
}

@inproceedings{song_automated_2020,
	address = {Seoul South Korea},
	title = {An automated framework for gaming platform to test multiple games},
	isbn = {978-1-4503-7122-3},
	url = {https://dl.acm.org/doi/10.1145/3377812.3382171},
	doi = {10.1145/3377812.3382171},
	abstract = {Game testing is a necessary but challenging task for gaming platforms. Current game testing practice requires significant manual effort. In this paper, we proposed an automated game testing framework combining adversarial inverse reinforcement learning algorithm with evolutionary multi-objective optimization. This framework aims to help gaming platform to assure market-wide game qualities as the framework is suitable to test different games with minimum manual customization for each game.},
	language = {en},
	urldate = {2020-11-04},
	booktitle = {Proceedings of the {ACM}/{IEEE} 42nd {International} {Conference} on {Software} {Engineering}: {Companion} {Proceedings}},
	publisher = {ACM},
	author = {Song, Zihe},
	month = jun,
	year = {2020},
	pages = {134--136},
	file = {Song - 2020 - An automated framework for gaming platform to test.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/E2RXFF9D/Song - 2020 - An automated framework for gaming platform to test.pdf:application/pdf}
}

@inproceedings{lovreto_automated_2018,
	address = {Foz do Iguaçu, Brazil},
	title = {Automated {Tests} for {Mobile} {Games}: {An} {Experience} {Report}},
	isbn = {978-1-5386-9605-7},
	shorttitle = {Automated {Tests} for {Mobile} {Games}},
	url = {https://ieeexplore.ieee.org/document/8636923/},
	doi = {10.1109/SBGAMES.2018.00015},
	abstract = {As mobile gaming is an ever-growing, competitive and proﬁtable market, there has been an increasing demand for better quality in video game software. While manual testing is still a common practice among mobile game developers, some repetitive and error-prone tasks could beneﬁt from test automation. For instance, test scripts that perform sanity checks of the proper functioning of a mobile game would be desirable in an ecosystem with constant hotﬁxes and updates, as well as a diverse set of conﬁgurations (e.g., device hardware, screensizes, and platforms). In this context, this paper reports an experience on developing automated test scripts for mobile games. To this end, we randomly selected 16 mobile games, from different genres, among the popular ones from the Google Play Store. For each game, test scripts were developed using the Appium testing framework and the OpenCV library. Based on our results, we provide an in-depth discussion on the challenges and lessons learned.},
	language = {en},
	urldate = {2020-11-04},
	booktitle = {2018 17th {Brazilian} {Symposium} on {Computer} {Games} and {Digital} {Entertainment} ({SBGames})},
	publisher = {IEEE},
	author = {Lovreto, Gabriel and Endo, Andre T. and Nardi, Paulo and Durelli, Vinicius H. S.},
	month = oct,
	year = {2018},
	pages = {48--488},
	file = {Lovreto et al. - 2018 - Automated Tests for Mobile Games An Experience Re.pdf:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/4HAQ728W/Lovreto et al. - 2018 - Automated Tests for Mobile Games An Experience Re.pdf:application/pdf}
}

@phdthesis{loubos_automated_2018,
	title = {Automated {Testing} in {Virtual} {Worlds}},
	copyright = {Open Access (free)},
	url = {http://localhost/handle/1874/366211},
	abstract = {In this study we train an agent in the video game Minecraft, to gather items in the world space and combine them to automatically test the functionality of the crafting system of the game. We are inspired by the ideas of reinforcement learning to teach the agent a certain behavior based solely on previous experience, while we test his ability to correctly predict the exact recipe for crafting specific items. We perform experiments with different test cases to explore the success of such process and the time needed to test the crafting feature. Keeping in mind that our main purpose is to explore functional testing in virtual worlds, we conclude that such an automation process can certainly ease the workload of testing.},
	language = {en},
	urldate = {2020-11-04},
	author = {Loubos, D.},
	year = {2018},
	note = {Type: Master thesis},
	file = {Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/QLWWWZH2/Loubos - 2018 - Automated Testing in Virtual Worlds.pdf:application/pdf}
}

@inproceedings{kazmi_adaptive_2018,
	title = {Adaptive {Usage} {Statistical} {Testing} for {3D} {Gaming} {Applications}},
	doi = {10.1109/ICECUBE.2018.8610975},
	abstract = {3D applications have travelled great lengths over the past few years as users are more accustomed towards visual environment and interactive media such as 3D games. One of the major concerns of 3D mobile game development is to provide interactive source of entertainment. Testing a 3D gaming is more complex and subjective then general mobile applications. A bug in general mobile application can be compromised in its first release but this might not work for a 2D or 3D gaming application. Any deficit in performance, graphics, logic and compatibility is simply rejected in the current saturated market. The testing approaches used for 3D visualization applications are either manual based or using automated testing tools, although one needs to be fully equipped with the domain knowledge and working of the automated tool for it to be useful. In this paper, we have proposed an adaptive usage based statistical testing (A-UBST) that adapts with the user experiences. This technique enables the quality engineers and testers to focus on the frequently accessed parts of SUT (software under test). We have used Markov Models to represent usage models. We demonstrated our approach with respect to 3D game. Our comparison results show the suitability of the approach for 3D gaming applications by reducing testing effort, time and cost metrics.},
	booktitle = {2018 {International} {Conference} on {Computing}, {Electronic} and {Electrical} {Engineering} ({ICE} {Cube})},
	author = {Kazmi, A. and Fatima, A. and Idris, A. and Hussain, S.},
	month = nov,
	year = {2018},
	keywords = {2D gaming application, 3D gaming application, 3D Gaming Applications, 3D mobile game development, 3D visualization applications, A-UBST, Adaptation models, adaptive usage based statistical testing, Adaptive Usage Based Statistical Testing, automated testing tools, computer games, data visualisation, Data visualization, Games, general mobile application, Markov Model, Markov models, Markov processes, mobile computing, program testing, Software, software under test, statistical testing, SUT, Testing, Three-dimensional displays, user experiences, Visualization},
	pages = {1--6},
	file = {IEEE Xplore Full Text PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/B8YTA6WK/Kazmi et al. - 2018 - Adaptive Usage Statistical Testing for 3D Gaming A.pdf:application/pdf}
}

@article{prasetya_navigation_2020,
	title = {Navigation and {Exploration} in {3D}-{Game} {Automated} {Play} {Testing}},
	url = {http://arxiv.org/abs/2009.07015},
	doi = {10.1145/3412452.3423570},
	abstract = {To enable automated software testing, the ability to automatically navigate to a state of interest and to explore all, or at least sufficient number of, instances of such a state is fundamental. When testing a computer game the problem has an extra dimension, namely the virtual world where the game is played on. This world often plays a dominant role in constraining which logical states are reachable, and how to reach them. So, any automated testing algorithm for computer games will inevitably need a layer that deals with navigation on a virtual world. Unlike e.g. navigating through the GUI of a typical web-based application, navigating over a virtual world is much more challenging. This paper discusses how concepts from geometry and graph-based path finding can be applied in the context of game testing to solve the problem of automated navigation and exploration. As a proof of concept, the paper also briefly discusses the implementation of the proposed approach.},
	urldate = {2020-11-04},
	journal = {arXiv:2009.07015 [cs]},
	author = {Prasetya, I. S. W. B. and Voshol, Maurin and Tanis, Tom and Smits, Adam and Smit, Bram and van Mourik, Jacco and Klunder, Menno and Hoogmoed, Frank and Hinlopen, Stijn and van Casteren, August and van de Berg, Jesse and Prasetya, Naraenda G. W. Y. and Shirzadehhajimahmood, Samira and Ansari, Saba Gholizadeh},
	month = sep,
	year = {2020},
	keywords = {Computer Science - Software Engineering, D.2.5},
	file = {arXiv Fulltext PDF:/home/pol4ko/snap/zotero-snap/common/Zotero/storage/QT8C4KXS/Prasetya et al. - 2020 - Navigation and Exploration in 3D-Game Automated Pl.pdf:application/pdf}
}
