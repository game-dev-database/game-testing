"Key","Item Type","Publication Year","Author","Title","Publication Title","ISBN","ISSN","DOI","Url","Abstract Note","Date","Date Added","Date Modified","Access Date","Pages","Num Pages","Issue","Volume","Number Of Volumes","Journal Abbreviation","Short Title","Series","Series Number","Series Text","Series Title","Publisher","Place","Language","Rights","Type","Archive","Archive Location","Library Catalog","Call Number","Extra","Notes","File Attachments","Link Attachments","Manual Tags","Automatic Tags","Editor","Series Editor","Translator","Contributor","Attorney Agent","Book Author","Cast Member","Commenter","Composer","Cosponsor","Counsel","Interviewer","Producer","Recipient","Reviewed Author","Scriptwriter","Words By","Guest","Number","Edition","Running Time","Scale","Medium","Artwork Size","Filing Date","Application Number","Assignee","Issuing Authority","Country","Meeting Name","Conference Name","Court","References","Reporter","Legal Status","Priority Numbers","Programming Language","Version","System","Code","Code Number","Section","Session","Committee","History","Legislative Body"
"VPBQICQJ","journalArticle","2018","Mozgovoy, Maxim; Pyshkin, Evgeny","A Comprehensive Approach to Quality Assurance in a Mobile Game Project","","","","10.1145/3290621.3290835","","","2018","2020-11-04 15:34:27","2020-11-04 15:34:27","","1–8","","","","","","","","","","","","","","","","","","","","ISBN: 9781450361767","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/D2WGPZYA/Mozgovoy and Pyshkin - 2018 - A Comprehensive Approach to Quality Assurance in a.pdf","","quality assurance; continuou; Software development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YG4L8Y2C","journalArticle","2015","Callele, David; Dueck, Philip; Wnuk, Krzysztof; Hynninen, Peitsa","Experience requirements in video games: Definition and testability","2015 IEEE 23rd International Requirements Engineering Conference, RE 2015 - Proceedings","","","10.1109/RE.2015.7320449","","© 2015 IEEE. A properly formed requirement is testable, a necessity for ensuring that design goals are met. While challenging in productivity applications, entertainment applications such as games compound the problem due to their subjective nature. We report here on our efforts to create testable experience requirements, the associated scope challenges and challenges with test design and result interpretation. We further report on issues experienced when performing focus group testing and provide practitioner guidance.","2015","2020-11-04 15:34:27","2020-11-04 15:34:27","","324–333","","","","","","","","","","","","","","","","","","","","ISBN: 9781467369053 Publisher: IEEE","","","","design goal; Experience requirements; testing; user experience; validation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SFNPBJ8P","journalArticle","2014","Ramadan, Rido; Hendradjaya, Bayu","Development of game testing method for measuring game quality","Proceedings of 2014 International Conference on Data and Software Engineering, ICODSE 2014","","","10.1109/ICODSE.2014.7062694","","? 2014 IEEE.The quality of game is one of the factors that may stop the release of a game. Game testing can be used to measure the game quality. Unfortunately, most game testing use user-centric approach to test the quality of the game. In this paper, we propose a game testing method, which is developed from the existing game testing approach supplemented with software testing approach to measure the game quality. The game quality was derived from software engineering quality model standards and game quality model. The proposed game testing method is applied to several case studies. The case studies have demonstrated how to assess the games in order to obtain the meaningful results. The research found that the game quality results can be used by game developers to improve the game.","2014","2020-11-04 15:34:27","2020-11-04 15:34:27","","1–6","","","","","","","","","","","","","","","","","","","","ISBN: 9781479979967 Publisher: IEEE","","","","game; testing; measurement; quality","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UBYCA76K","journalArticle","2013","Kasurinen, Jussi; Strandén, Jukka-Pekka; Smolander, Kari","What do game developers expect from development and design tools?","Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering - EASE '13","","","10.1145/2460999.2461004","http://dl.acm.org/citation.cfm?doid=2460999.2461004","","2013","2020-11-04 15:34:27","2020-11-04 15:34:27","","36","","","","","","","","","","","","","","","","","","","","ISBN: 9781450318488","","","","game industry; software development; technical infrastructure","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"94DYYPXV","conferencePaper","2011","Lewis, C; Whitehead, J","The whats and the whys of games and software engineering","1st International Workshop on Games and Software Engineering","978-1-4503-0578-5","","10.1145/1984674.1984676","http://dl.acm.org/citation.cfm?id=1984676","The intersection of video games and software engineering is not yet well understood. This paper highlights the varied and exciting opportunities available at the intersection of these two disciplines. We investigate four main areas: the development of games, how they are designed, how middleware supports the creative process and how games are tested. We hope that it inspires readers to take on the challenges available in games and software engineering, and join together to create a vibrant community.","2011","2020-11-04 15:34:28","2020-11-04 15:34:28","","1–4","","","","","","","","","","","","","","","","","","","","ISSN: 02705257","","","","software engineering; survey; video games; gameprocess","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XG39LS5K","journalArticle","2011","Hullett, Kenneth; Nagappan, Nachiappan; Schuh, Eric; Hopson, John","Data analytics for game development","","","","10.1145/1985793.1985952","","The software engineering community has had seminal papers on data analysis for software productivity, quality, reliability, performance etc. Analyses have involved software systems ranging from desktop software to telecommunication switching systems. Little work has been done on the emerging digital game industry. In this paper we explore how data can drive game design and production decisions in game development. We define a mixture of qualitative and quantitative data sources, broken down into three broad categories: internal testing, external testing, and subjective evaluations. We present preliminary results of a case study of how data collected from users of a released game can inform subsequent development.","2011","2020-11-04 15:34:28","2020-11-04 15:34:28","","940","","","80","","","","","","","","","","","","","","","","","ISBN: 9781450304450","","","","game development; game design; game metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PQZ4XLLZ","journalArticle","2009","Kanode, Christopher M.; Haddad, Hisham M.","Software engineering challenges in game development","ITNG 2009 - 6th International Conference on Information Technology: New Generations","","","10.1109/ITNG.2009.74","","In software engineering (SE), video game development is unique yet similar to other software endeavors. It is unique in that it combines the work of teams covering multiple disciplines (art, music, acting, programming, etc.), and that engaging game play is sought after through the use of prototypes and iterations. With that, game development is faced with challenges that can be addressed using traditional SE practices. The industry needs to adopt sound SE practices for their distinct needs such as managing multimedia assets and finding the ldquofunrdquo in game play. The industry must take on the challenges by evolving SE methods to meet their needs. This work investigates these challenges and highlights engineering practices to mitigate these challenges.","2009","2020-11-04 15:34:28","2020-11-04 15:34:28","","260–265","","","","","","","","","","","","","","","","","","","","ISBN: 9780769535968 Publisher: IEEE","","","","Process; Challenges; Diverse assets; Project management; Project scope; Publishing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JNBXY8GK","conferencePaper","2014","Murphy-Hill, Emerson; Zimmermann, Thomas; Nagappan, Nachiappan","Cowboys, ankle sprains, and keepers of quality: how is video game development different from software development?","Proceedings of the 36th International Conference on Software Engineering - ICSE 2014","978-1-4503-2756-5","","10.1145/2568225.2568226","http://dl.acm.org/citation.cfm?doid=2568225.2568226","Video games make up an important part of the software industry, yet the software engineering community rarely studies video games. This imbalance is a problem if video game development differs from general software development, as some game experts suggest. In this paper we describe a study with 14 interviewees and 364 survey respondents. The study elicited substantial differences between video game development and other software development. For example, in game development, “cowboy coders” are necessary to cope with the continuous interplay between creative desires and technical constraints. Consequently, game developers are hesitant to use automated testing because of these tests’ rapid obsolescence in the face of shifting creative desires of game designers. These differences between game and non-game development have implications for research, industry, and practice. For instance, as a starting point for impacting game development, researchers could create testing tools that enable game developers to create tests that assert flexible behavior with little up-front investment.","2014","2020-11-04 15:48:06","2020-11-04 15:48:06","2020-11-04 15:48:06","1-11","","","","","","Cowboys, ankle sprains, and keepers of quality","","","","","ACM Press","Hyderabad, India","en","","","","","DOI.org (Crossref)","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/52V3QCBA/Murphy-Hill et al. - 2014 - Cowboys, ankle sprains, and keepers of quality ho.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the 36th International Conference","","","","","","","","","","","","","","",""
"VK8DZACN","conferencePaper","2015","Daneva, M.","Play-Testing and Requirements Engineering: Implications for Research and Teaching","2015 IEEE/ACM 2nd International Workshop on Requirements Engineering and Testing","","","10.1109/RET.2015.10","","In Requirements Engineering (RE) for large scale game systems, play-testing is an important activity that is used to validate requirements from players' perspective. Play-testers are not professionals that are involved in the process of RE. They are not professional testers, either. Yet, their feedback in terms of perceptions and experiences of the early prototypes of a game, have a decisive impact on what the RE-professionals do next in the RE process. This position paper presents a qualitative study that sought to discover who takes the role of play-testers and what kind of feedback play-testers generate in the early stages of RE for games. The case study responds to the observation that no textbook on RE or software engineering addresses play-testing as a phenomenon, and that classic Computer Science programs at universities teach testing techniques mostly in the context of embedded systems, hence students often are left with little opportunity to develop testing skills that build upon play-testing practices happening in the game development sector. The study therefore was aimed at identifying important implications that play-testing may have for research and teaching.","2015-05","2020-11-04 15:51:34","2020-11-04 15:51:34","","9-12","","","","","","Play-Testing and Requirements Engineering","","","","","","","","","","","","IEEE Xplore","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/KTS9B6UH/Daneva - 2015 - Play-Testing and Requirements Engineering Implica.pdf","","","software engineering; Software engineering; computer games; Software; Testing; Games; Blogs; classic computer science programs; computer science education; Education; embedded systems; Empirical research method; feedback play-testers; game development sector; large scale game systems; Play-testers; Play-testing; Prototypes; Qualitative study; RE process; RE-professionals; requirements engineering; requirements Engineering; systems analysis; teaching; universities","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2015 IEEE/ACM 2nd International Workshop on Requirements Engineering and Testing","","","","","","","","","","","","","","",""
"H2QEH9TT","journalArticle","2016","Bingamawa, Muhammad Tosan; Ahmad, Sabrina","A Review on Requirement Engineering Process in Game Development","","","","10.13140/RG.2.2.32494.00329","http://rgdoi.net/10.13140/RG.2.2.32494.00329","With rapid development of technology, game development is also follow the improvement of technology. Many choices of game application is available in application store for people to play. However, people will be selective to choose which game that they want to play. This is becoming a new challenge for game developer to provide a game application that fulfill the market needs and trends. By applying requirement engineering technique in game development, it may help the developers to provide a game that can satisfy and fulfil the user requirement. In this paper, the author discuss a general requirement engineering phase, technique and also other requirement that proposed by previous researcher. The aims of this paper is to give a review on the requirement engineering technique implemented in game development.","2016","2020-11-04 15:52:18","2020-11-04 15:52:18","2020-11-04 15:52:18","","","","","","","","","","","","","","en","","","","","DOI.org (Datacite)","","Publisher: Unpublished","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/B5CDPBZT/Bingamawa and Ahmad - 2016 - A Review on Requirement Engineering Process in Gam.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VLVAWU8U","conferencePaper","2019","Mozgovoy, M.","Multiplatform Automated Software Testing: Personal Experience of a Maintainer","2019 4th International Conference and Workshops on Recent Advances and Innovations in Engineering (ICRAIE)","","","10.1109/ICRAIE47735.2019.9037751","","Automated testing is an essential part of modern software development pipeline. The extent of functionality to be tested varies a lot from project to project, but at least some basic testing capabilities are built into many current development instruments, and automated testing practices are encouraged in most guidelines. The goal of this paper is to share some personal experience with automated smoke testing of a cross-platform game application. Unlike works dedicated to the general picture of testing tools and practices, this paper focuses on specific details and challenges associated with setting up and maintenance of day-to-day automated testing activities.","2019-11","2020-11-04 16:00:03","2020-11-04 16:00:03","","1-4","","","","","","Multiplatform Automated Software Testing","","","","","","","","","","","","IEEE Xplore","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/T4E3AXYI/Mozgovoy - 2019 - Multiplatform Automated Software Testing Personal.pdf","","","program testing; software engineering; computer games; Software; Testing; agile development; Games; quality assurance; automated testing; Servers; automated smoke testing; automated testing practices; basic testing capabilities; cross-platform game application; current development instruments; day-to-day automated testing activities; maintainer personal experience; Mobile handsets; modern software development pipeline; multiplatform automated software testing; Pipelines; smoke testing; testing tools; Universal Serial Bus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2019 4th International Conference and Workshops on Recent Advances and Innovations in Engineering (ICRAIE)","","","","","","","","","","","","","","",""
"Z4T3LTS4","journalArticle","","Mozgovoy, Maxim","QUALITY ASSURANCE IN A MOBILE GAME PROJECT: A CASE STUDY","","","","","","Quality assurance is an integral part of the software development process. Game projects possess their own distinctive traits that affect all stages of work, including quality assurance. The goal of this paper is to share the lessons learned during a three year-long mobile game development project. I will discuss the techniques that turned out to be most efficient for us: manual testing, automated and manual runtime bug reporting, Crashlytics crash analysis, and automated smoke testing. I will outline how these types of testing address typical game-specific issues, and why they can be recommended for a wide range of game projects.","","2020-11-04 16:00:12","2020-11-04 16:00:14","","3","","","","","","","","","","","","","en","","","","","Zotero","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/UGRGAKAU/Mozgovoy - QUALITY ASSURANCE IN A MOBILE GAME PROJECT A CASE.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"62J4BC7N","journalArticle","","Engström, Henrik","GDC vs. DiGRA: Gaps in Game","","","","","","Previous studies have revealed a gap between game research and industry game production. This article presents an analysis of this research gap using the tracks and summits at the Game Developers Conference (GDC) as a point of reference. The result shows that there are several areas where there exists very little research. The DiGRA conference is no exception – since 2006, only a handful of papers present empirics from game production. Studies are in particular rare for content producing areas, such as audio, visual arts, and narrative. There are plenty of opportunities for researchers to extract experiences and knowledge from game professionals and to identify problems to be addressed. To do this, collaboration models need to be established that endure non-disclosure agreements and crunch cultures.","","2020-11-04 16:02:44","2020-11-04 16:02:44","","19","","","","","","","","","","","","","en","","","","","Zotero","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/9PKCSCM9/Engström - GDC vs. DiGRA Gaps in Game.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5FBFIP7G","conferencePaper","2019","McKenzie, Timothy; Trujillo, Miguel Morales; Hoermann, Simon","Software Engineering Practices and Methods in the Game Development Industry","Extended Abstracts of the Annual Symposium on Computer-Human Interaction in Play Companion Extended Abstracts  - CHI PLAY '19 Extended Abstracts","978-1-4503-6871-1","","10.1145/3341215.3354647","http://dl.acm.org/citation.cfm?doid=3341215.3354647","Applying current software engineering practices in the game development industry is a rapidly growing but under researched area. Whether game development studios align to traditional software engineering practices such as agile methodologies to develop their games is not known. It is also unknown how studios perceive their own adherence to such agile development practices. Furthermore, struggling start-up studios could beneﬁt from implementing development practices based on the experiences of established studios. Hence, an exploratory survey was conducted to determine the practice of, and perception of agile game development in New Zealand. The results show that while studios universally state and perceive that they use the agile framework Scrum and sometimes Kanban, their actual practices often differ from these frameworks in key areas. Furthermore, studios collectively overestimated their level of adherence with Scrum. This has general implications for related academic studies as well as for the game industry’s own evaluation and improvement of their practices.","2019","2020-11-04 16:03:27","2020-11-04 16:03:27","2020-11-04 16:03:27","181-193","","","","","","","","","","","ACM Press","Barcelona, Spain","en","","","","","DOI.org (Crossref)","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/W53TB5VK/McKenzie et al. - 2019 - Software Engineering Practices and Methods in the .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extended Abstracts of the Annual Symposium","","","","","","","","","","","","","","",""
"GQ7VD8T9","conferencePaper","2019","de Oliveira Neto, José Nunes; Viana, Davi; Sá, Eveline; Rivero, Luis; Lopes, Rafael Fernandes; Silva, Francisco","Is there time for Software Testing in the Indie Games Development?: A survey with practitioners of the game industry","Proceedings of the XXXIII Brazilian Symposium on Software Engineering  - SBES 2019","978-1-4503-7651-8","","10.1145/3350768.3350787","http://dl.acm.org/citation.cfm?doid=3350768.3350787","In 2018, the game industry made about 137,9 billion dollars worldwide in a very competitive market, since each day new games are launched. Games can be created by large development companies; or by small teams with few resources, which pursue innovation and originality in games, commonly referred to as indie games. Regardless of the size of the organization and/or team, the complexity of the development related to the production of such software is similar. In order to deliver high quality games, the practitioners carry out software tests during the production of their indie games. These tests aim to analyze the speciﬁc characteristics of this type of software, such as the degree of entertainment and playability aspects. However, there still no consensus about how the test activities are performed during the development process of indie games. This paper presents a survey to identify the test practices during the development of indie games, aiming to understand how these activities are performed. As a result, we identiﬁed that developers worry about the execution of tests during the development of indie games, focusing on techniques that consider more than one inherent aspects of the game. Within the aspects that these developers focus on, we can name: the identiﬁcation of bugs, veriﬁcation of playability aspects and degree of entertainment of the game.","2019","2020-11-04 16:05:12","2020-11-04 16:05:13","2020-11-04 16:05:12","37-46","","","","","","Is there time for Software Testing in the Indie Games Development?","","","","","ACM Press","Salvador, Brazil","pt","","","","","DOI.org (Crossref)","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/I4479UKS/de Oliveira Neto et al. - 2019 - Is there time for Software Testing in the Indie Ga.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the XXXIII Brazilian Symposium","","","","","","","","","","","","","","",""
"UGN7GR67","conferencePaper","2020","Borrelli, Antonio; Nardone, Vittoria; Di Lucca, Giuseppe A.; Canfora, Gerardo; Di Penta, Massimiliano","Detecting Video Game-Specific Bad Smells in Unity Projects","Proceedings of the 17th International Conference on Mining Software Repositories","978-1-4503-7517-7","","10.1145/3379597.3387454","https://dl.acm.org/doi/10.1145/3379597.3387454","The growth of the video game market, the large proportion of games targeting mobile devices or streaming services, and the increasing complexity of video games trigger the availability of video gamespecific tools to assess performance and maintainability problems. This paper proposes UnityLinter, a static analysis tool that supports Unity video game developers to detect seven types of bad smells we have identified as relevant in video game development. Such smell types pertain to performance, maintainability and incorrect behavior problems. After having defined the smells by analyzing the existing literature and discussion forums, we have assessed their relevance with a survey involving 68 participants. Then, we have analyzed the occurrence of the studied smells in 100 opensource Unity projects, and also assessed UnityLinter’s accuracy. Results of our empirical investigation indicate that developers wellreceived performance- and behavior-related issues, while some maintainability issues are more controversial. UnityLinter is, in general, accurate enough in detecting smells (86%-100% precision and 50%-100% recall), and our study shows that the studied smell types occur in 39%-97% of the analyzed projects.","2020-06-29","2020-11-04 16:07:45","2020-11-04 16:07:46","2020-11-04 16:07:45","198-208","","","","","","","","","","","ACM","Seoul Republic of Korea","en","","","","","DOI.org (Crossref)","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/Z6H4ZX8A/Borrelli et al. - 2020 - Detecting Video Game-Specific Bad Smells in Unity .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","MSR '20: 17th International Conference on Mining Software Repositories","","","","","","","","","","","","","","",""
"5VQPX7PQ","thesis","2017","Hooper, Steffan","Automated Testing and Validation of Computer Graphics Implementations for Cross-platform Game Development","","","","","https://openrepository.aut.ac.nz/handle/10292/11017","Commercially released cross-platform video games often feature graphical defects, which negatively impact on the reputations of developers and publishers, as well as on the experience of the players. Game industry testing practices often rely on human testers to assure the quality of a game prior to release.    This thesis investigates the question of whether the testing and validation of computer graphics implementations for cross-platform game development can be automated to reduce the burden on human testers, accelerate the testing phase, and improve the quality of games. Using Design Science Research methods and patterns, iterative development and evaluation is undertaken to construct artefacts, drawing upon prior research and industrial works in related fields such as film and television, as well as proprietary game development insight. Elements of existing automated testing systems and image comparison techniques are combined with industry standard cross-platform development tools and methods to create a reusable and generalisable model of an automated test system, featuring image comparison methods, and record and playback techniques for cross-platform game implementations.    In conclusion, this thesis shows that it is possible to create a novel system that is able to detect graphical defects in output from a cross-platform game implementation.","2017","2020-11-04 16:08:23","2020-11-04 16:08:23","2020-11-04 16:08:23","","","","","","","","","","","","Auckland University of Technology","","en","OpenAccess","Thesis","","","openrepository.aut.ac.nz","","Accepted: 2017-11-23T21:02:38Z","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/HKFDXSLN/Hooper - 2017 - Automated Testing and Validation of Computer Graph.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K6HTA4KF","journalArticle","2016","Zhang, Iris","Why Are We Permanently Stuck in an Elevator? A Software Engineering Perspective on Game Bugs","","","","10.7916/D8416XJ7","https://doi.org/10.7916/D8416XJ7","In the past decade, the complexity of video games have increased dramatically and so have the complexity of software systems behind them. The difficulty in designing and testing games invariably leads to bugs that manifest themselves across funny video reels on graphical glitches and millions of submitted support tickets. This paper presents an analysis of game developers and their teams who have knowingly released bugs to see what factors may motivate them in doing so. It examines different development environments as well as inquiring into varied types of game platforms and play-style. Above all, it seeks out how established research on software development best practices and challenges should inform understanding of these bugs. These findings may lead to targeted efforts to mitigate some of the factors leading to glitches, tailored to the specific needs of the game development team.","2016","2020-11-04 16:11:18","2020-11-04 16:11:18","2020-11-04 16:11:18","","","","","","","Why Are We Permanently Stuck in an Elevator?","","","","","","","en","","","","","academiccommons.columbia.edu","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/FYPMHZEP/Zhang - 2016 - Why Are We Permanently Stuck in an Elevator A Sof.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/DQHYAC95/D8416XJ7.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YAVWDJPB","journalArticle","2013","Wallner, G.; Kriglstein, S.","Visualization-based analysis of gameplay data – A review of literature","Entertainment Computing","","1875-9521","10.1016/j.entcom.2013.02.002","http://www.sciencedirect.com/science/article/pii/S1875952113000049","As video games are becoming more and more complex and are reaching a broader audience, there is an increasing interest in procedures to analyze player behavior and the impact of design decisions. Game companies traditionally relied on user-testing methods, like playtesting, surveys or videotaping, to obtain player feedback. However, these qualitative methods for data collection are time-consuming and the obtained data is often incomplete or subjective. Therefore, instrumentation became popular in recent years to unobtrusively obtain the detailed data required to thoroughly evaluate player behavior. To make sense of the large amount of data, appropriate tools and visualizations have been developed. This article reviews literature on visualization-based analysis of game metric data in order to give an overview of the current state of this emerging field of research. We discuss issues related to gameplay analysis, propose a broad categorization of visualization techniques and discuss their characteristics. Furthermore, we point out open problems to promote future research in this area.","2013-08-01","2020-11-04 16:22:13","2020-11-04 16:22:13","2020-11-04 16:22:13","143-155","","3","4","","Entertainment Computing","","","","","","","","en","","","","","ScienceDirect","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/ZAJW7329/Wallner and Kriglstein - 2013 - Visualization-based analysis of gameplay data – A .pdf","","","Visualization; Games; Evaluation; Gameplay analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XCP9LB7C","conferencePaper","2014","Mirza-Babaei, Pejman; Wallner, Günter; McAllister, Graham; Nacke, Lennart E.","Unified visualization of quantitative and qualitative playtesting data","Proceedings of the extended abstracts of the 32nd annual ACM conference on Human factors in computing systems - CHI EA '14","978-1-4503-2474-8","","10.1145/2559206.2581224","http://dl.acm.org/citation.cfm?doid=2559206.2581224","A major challenge in studying player experience is tying together the results of quantitative and qualitative games user research (GUR) data. For example, combining data from players’ physiological measures with questionnaire or interview results and in-game movement data into a single report is not straightforward because the underlying data is often in different formats. Visualization techniques can facilitate the understanding of relationships among these data sets. Although various visualization techniques have already been introduced in GUR, most of these techniques only focus on displaying large amounts of data captured directly via telemetry without integrating qualitative or contextual data on players’ emotional experience. Hence, here we propose a novel visualization approach to triangulate the above mentioned mixed data sources.","2014","2020-11-04 16:22:59","2020-11-04 16:22:59","2020-11-04 16:22:59","1363-1368","","","","","","","","","","","ACM Press","Toronto, Ontario, Canada","en","","","","","DOI.org (Crossref)","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/9R4IJL5U/Mirza-Babaei et al. - 2014 - Unified visualization of quantitative and qualitat.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the extended abstracts of the 32nd annual ACM conference","","","","","","","","","","","","","","",""
"D2VLSUWV","conferencePaper","2019","Wallner, Günter; Halabi, Nour; Mirza-Babaei, Pejman","Aggregated Visualization of Playtesting Data","Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems  - CHI '19","978-1-4503-5970-2","","10.1145/3290605.3300593","http://dl.acm.org/citation.cfm?doid=3290605.3300593","Playtesting is a key component in the game development process aimed at improving the quality of games through the collection of gameplay data and identification of design issues. Visualization techniques are currently being employed to help integrate quantitative and qualitative data. Despite that, two existing challenges are to determine the level of detail to be presented to developers based on their needs and to effectively communicate the collected data so that informed design changes can be reached. In this paper, we first propose an aggregated visualization technique that makes use of clustering, territory tessellation, and trajectory aggregation to simultaneously display mixed playtesting data. Secondly, to assess the usefulness of our technique we evaluate it through interviews with professional game developers and compare it to a non-aggregated visualization. The results of this study also provide an important contribution towards identifying areas of improvement in the portrayal of gameplay data.","2019","2020-11-04 16:33:16","2020-11-04 16:33:16","2020-11-04 16:33:16","1-12","","","","","","","","","","","ACM Press","Glasgow, Scotland Uk","en","","","","","DOI.org (Crossref)","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/2NUT4YCQ/Wallner et al. - 2019 - Aggregated Visualization of Playtesting Data.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the 2019 CHI Conference","","","","","","","","","","","","","","",""
"3YGPC7JG","journalArticle","2019","Bastos, Arthur Silva; Santos, Emanuele; Gomes, George Allan Menezes; Mourao, Marcos Arruda","Evaluating the Use of Affordable User Testing and Visualization Techniques in Level Design of a Hardcore 2D Platform Game","","","","","","As the videogame industry evolves, with more diverse and demanding players, making games becomes an increasingly complex task. Modern developers apply Games User Research (GUR) methods to make informed game design decisions based on their target audience. Traditional methods include observation, interview, and questionnaires. In order to obtain detailed user or gameplay information, complementary methods might be required. We analyze the inclusion of two affordable complementary methods, namely webcam-based eye-tracking and telemetry, along with data visualization in a playtesting routine. By developing three versions of a hardcore 2D platform game that demands multitasking abilities using different GUR methods, we were able to ﬁnd that the chosen complementary methods cover a signiﬁcant amount of gameplay issues. The metrics and eye-tracking data visualization provided insights about multitasking and level design. Furthermore, we discuss the challenges of evaluating prototypes regarding a more enjoyable experience when frustration is a desirable gameplay element.","2019","2020-11-04 16:36:22","2020-11-04 16:36:22","","10","","","","","","","","","","","","","en","","","","","Zotero","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/YQR23V75/Bastos et al. - 2019 - Evaluating the Use of Affordable User Testing and .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"FP3FHN9L","conferencePaper","2020","Agarwal, S.; Herrmann, C.; Wallner, G.; Beck, F.","Visualizing AI Playtesting Data of 2D Side-scrolling Games","2020 IEEE Conference on Games (CoG)","","","10.1109/CoG47356.2020.9231915","","Human playtesting is a useful step in the game development process, but involves high economic costs and is time-consuming. While playtesting through artificial intelligence is gaining attention, it is challenging to analyze the collected data. We address the challenge by proposing visualizations to derive insights about level design in 2D side-scrolling games. To focus on the navigation behavior in the level design, we study the trajectories of computer agents trained using artificial intelligence. We demonstrate the effectiveness of our approach by implementing a web-based prototype and presenting the insights gained from the visualizations for the game Sonic the Hedgehog 2. We highlight lessons learned and directions to customize the approach for other analysis goals of playtesting.","2020-08","2020-11-04 16:36:44","2020-11-04 16:36:44","","572-575","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2325-4289","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/Z8FPL3GI/Agarwal et al. - 2020 - Visualizing AI Playtesting Data of 2D Side-scrolli.pdf","","","artificial intelligence; playtesting; visualization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2020 IEEE Conference on Games (CoG)","","","","","","","","","","","","","","",""
"LFJ97F6U","conferencePaper","2014","Drenikow, B.; Arppe, D.; Mirza-Babaei, P.; Hogue, A.","Interactive 3D visualisation of playtesting data","2014 IEEE Games Media Entertainment","","","10.1109/GEM.2014.7048116","","We present a tool to assist the collection and representation of playtesting data such as players' in-game behaviour (e.g. tracking their movements) and physiological measures (e.g. tracking their arousal state).","2014-10","2020-11-04 16:37:35","2020-11-04 16:37:35","","1-1","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/8QFRE9YU/Drenikow et al. - 2014 - Interactive 3D visualisation of playtesting data.pdf","","","computer games; data visualisation; Abstracts; behavioural sciences computing; Games User Research; interactive 3D visualisation; physiological measures; player in-game behaviour; Playtesting; playtesting data; Visulization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE Games Media Entertainment","","","","","","","","","","","","","","",""
"DSN36B3T","conferencePaper","2019","Halabi, Nour; Wallner, Günter; Mirza-Babaei, Pejman","Assessing the Impact of Visual Design on the Interpretation of Aggregated Playtesting Data Visualization","Proceedings of the Annual Symposium on Computer-Human Interaction in Play","978-1-4503-6688-5","","10.1145/3311350.3347164","https://dl.acm.org/doi/10.1145/3311350.3347164","Making effective use of data generated from players interacting with games (often via playtesting to improve game quality) is a challenging task since the datasets are often mixed and very large. To address this, various visualization techniques have been introduced to help game developers cope with the data. However, there is a gap in research concerning the impact of different visual designs on the interpretation of gameplay data. In this paper, we propose four alternative visual designs of an aggregated visualization and assess how professional game developers interpret the data differently due to changes in the visual designs. Our results provide an understanding and a supporting argument about the impact of the visual properties transparency and shading (both positive and negative) on the interpretation of the represented data. This is an important contribution to the ﬁeld of Games User Research given the current move towards data-informed decision making and the popularity of data visualizations.","2019-10-17","2020-11-04 16:39:07","2020-11-04 16:39:07","2020-11-04 16:39:07","639-650","","","","","","","","","","","ACM","Barcelona Spain","en","","","","","DOI.org (Crossref)","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/9AXZK3BC/Halabi et al. - 2019 - Assessing the Impact of Visual Design on the Inter.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","CHI PLAY '19: The Annual Symposium on Computer-Human Interaction in Play","","","","","","","","","","","","","","",""
"NXYJ38EX","bookSection","2015","Wallner, Günter; Kriglstein, Simone","An introduction to gameplay data visualization","Game Research Methods","978-1-312-88473-1","","","","The prevalence of internet-enabled gaming devices enables game developers nowadays to remotely and unobtrusively monitor every aspect of a game, allowing them to accumulate large amounts of data of the player-game interaction over extended time periods. This data has become a viable source for developers to guide decision-making throughout the game design process and even after the game has been released, for example, to identify balancing issues (Kim, et al., 2008; Zoeller, 2010), to understand player movement (Moura, El-Nasr and Shaw, 2011), to reduce production costs (Hullett, et al., 2011), or to uncover bugs (Zoeller, 2010), to name but a few. At the same time, the increasing popularity of online multiplayer gaming has attached great importance to in-game statistics to allow players to recap their performance and to compare it with others. This growing interest in game telemetry data is reflected by the emergence of the new field of game analytics--concerned with the discovery and communication of meaningful patterns in data as applied in the context of game development and game research (cf. El-Nasr, Drachen and Canossa, 2013). Game analytics heavily relies on visualization techniques to assist developers and players alike to understand, analyze, and explore the data (cf. Wallner and Kriglstein, 2013). Visualizations in game research can be helpful to discover unexpected paths which have been taken by the players, to identify possible design and balancing problems, or to find common patterns in the behavior of the players. Moreover, since the rich interaction possibilities provided by a game can give rise to emergent behavior which is hard to anticipate, visualizations can assist in exploratory data analysis helping the analyst to discover potentially interesting structures, trends, and anomalies not thought of beforehand.","2015-01-01","2020-11-04 16:40:04","2020-11-04 16:40:04","2020-11-04","231–250","","","","","","","","","","","ETC Press","Pittsburgh, PA, USA","","","","","","ACM Digital Library","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/XH4LWSYE/Wallner and Kriglstein - 2015 - An introduction to gameplay data visualization.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KX654866","conferencePaper","2016","Pirker, Johanna; Griesmayr, Simone; Drachen, Anders; Sifa, Rafet","How Playstyles Evolve: Progression Analysis and Profiling in Just Cause 2","Entertainment Computing - ICEC 2016","978-3-319-46100-7","","10.1007/978-3-319-46100-7_8","","Evaluating progression of players in a game can take a variety of forms, but ideally combines playstyle or performance analysis with one or more aspects of progression, e.g. through a level- or mission-based structure. Furthermore, visualization of the results of analysis are essential to ensure that action can be taken on them. In this paper behavioral profiling through Archetype Analysis is combined with progression analysis, expanding on previous work in the area, and extending it into the context of Open-World Games. The proposed methodological framework is applied to the case of the action-adventure title Just Cause 2, focusing on the main storyline. The results show how players navigate the content of the title, and how some playstyles remain constant throughout the game, whereas others emerge or disappear with player progress. Additionally, player performance as a function of progression is evaluated across a number of key metrics.","2016","2020-11-04 16:40:35","2020-11-04 16:40:35","","90-101","","","","","","How Playstyles Evolve","Lecture Notes in Computer Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/4K95BRZ9/Pirker et al. - 2016 - How Playstyles Evolve Progression Analysis and Pr.pdf","","","Visualization; Cluster analysis; Game analytics; Player behavior; Playstyle; Progression","Wallner, Günter; Kriglstein, Simone; Hlavacs, Helmut; Malaka, Rainer; Lugmayr, Artur; Yang, Hyun-Seung","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HFJPBKEI","conferencePaper","2015","Birk, Max V.; Lürig, Christoph; Mandryk, Regan L.","A metric for automatically flagging problem levels in games from prototype walkthrough data","Proceedings of the 19th International Academic Mindtrek Conference","978-1-4503-3948-3","","10.1145/2818187.2818281","http://doi.org/10.1145/2818187.2818281","Playtesting early and often is important for all game developers, but especially for the growing number of indie teams producing commercial games; however, playtesting game prototypes remains an expensive and time-consuming process. In this paper, we present a new game metric, automatically generated from prototype walkthrough data, which flags problematic levels so that developers know where to invest their effort in fixing the game. Created during the development of the commercial game Angus Hates Aliens, in collaboration with indie developer Team Stendec, our death-related problem level likelihood indicator (DPLI) is interpretable and actionable, i.e., it easily allowed the developer to know where to fix the game levels. Finally, DPLI correlated to enjoyment ratings for the game levels, suggesting that it was a good indicator of problems in the context of our prototype evaluation.","2015-09-22","2020-11-04 16:42:25","2020-11-04 16:42:25","2020-11-04","33–40","","","","","","","AcademicMindTrek '15","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/TQSMY3U6/Birk et al. - 2015 - A metric for automatically flagging problem levels.pdf","","","playtesting; game metrics; heat maps; indie; level design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"22G4U238","conferencePaper","2019","Paranthaman, Pratheep Kumar; Cooper, Seth","ARAPID: Towards Integrating Crowdsourced Playtesting into the Game Development Environment","Proceedings of the Annual Symposium on Computer-Human Interaction in Play","978-1-4503-6688-5","","10.1145/3311350.3347163","http://doi.org/10.1145/3311350.3347163","Iterative playtesting of games is crucial, but remains a time consuming and ad-hoc process. In this work, we streamlined and systematized the playtesting process by adding support for crowdsourced, on-demand playtesting directly into a game development environment to test and evaluate platform games. Our system, called ARAPID (As Rapid As Possible Iterative Design), manages playtesting from a control panel in Unity and recruits players from Mechanical Turk. With this system, game designers can launch playtests and visualize results directly in the editor. To better understand and evaluate this approach, we ran three studies on two basic platform games. First, a game designer used ARAPID to playtest and rapidly iterate on the design of the games; we found the games were improved toward specific design goals. Second, we analyzed the impact of different forms of recruitment on playtesting speed; we found that pre-recruitment and over-recruitment of players can reduce the time needed to run playtests. Third, we analyzed the impact of players' familiarity with the game on the precision of playtest results; we found that whether or not players are allowed to replay the game can impact results.","2019-10-17","2020-11-04 16:49:44","2020-11-04 16:49:44","2020-11-04","121–133","","","","","","ARAPID","CHI PLAY '19","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/LIX7CQC7/Paranthaman and Cooper - 2019 - ARAPID Towards Integrating Crowdsourced Playtesti.pdf","","","playtesting; crowdsourcing; iterative design; rapid iteration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"N2Y2R8WF","journalArticle","2019","Godinho-Paiva, Raquel; Contreras-Espinosa, Ruth Sofia","Game testing and evaluation on real devices: Exploring in the case of the Open Device Lab community","First Monday","","1396-0466","10.5210/fm.v24i8.9525","https://firstmonday.org/ojs/index.php/fm/article/view/9525","Game testing and evaluation (T&E) still have no standards to ensure quality. T&E on real devices instead of only using a software solution (e.g., emulators) has become a basic procedure for mobile software design and development, including games. This study presents the Open Device Lab community (ODL), a grassroots movement helping the Web and app community to have free access to device labs. The findings reveal how the open community can benefit the game industry.","2019-08-01","2020-11-04 22:46:29","2020-11-04 22:46:29","2020-11-04 22:46:29","","","","","","","Game testing and evaluation on real devices","","","","","","","en","Copyright (c) 2019 First Monday","","","","firstmonday.org","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/CW8Y9E7P/8059.html","","","game development life cycle; game testing and evaluation; HCI; Open Device Lab community; real device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EMQ75H3G","webpage","","","View of Game testing and evaluation on real devices: Exploring in the case of the Open Device Lab community | First Monday","","","","","https://journals.uic.edu/ojs/index.php/fm/article/view/9525/8059","","","2020-11-04 22:47:05","2020-11-04 22:47:05","2020-11-04 22:47:05","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KMLK5T5P","journalArticle","2017","Ahmed, Faheem; Zia, Muhammad; Mahmood, Hasan; Al Kobaisi, Shayma","Open source computer game application: An empirical analysis of quality concerns","Entertainment Computing","","1875-9521","10.1016/j.entcom.2017.04.001","http://www.sciencedirect.com/science/article/pii/S1875952117300290","A computer game is one of the major sources of entertainment. People nowadays spend a lot of time while playing computer games. Open Source Software (OSS), despite some reservations on the quality, has been steadily increasing its popularity. The uncontrolled change management foresees an increase in the complexity of the methods and classes in an application, which sometimes result in poor quality. The number of OSS projects dealing with computer game development are on the increase, which lead to more research interests in assessing the quality of OSS resulting products. Some studies that deal with the evaluating the OSS quality, concerns use user’s survey approach focusing on the usability aspects. The empirical investigations to evaluate the quality concerns of the design, using internal code attributes, needs attention of researchers. In this study, we aim to investigate the quality concerns of the design complexity of methods in OSS computer game applications using internal code attributes. We use three quality criteria, namely correctness, reliability and maintainability from the set of six factors of ISO 9126 model. We collect data from 55 OSS computer game applications and use various statistical analysis techniques to examine the research question of this study. We conclude that the methods of the OSS computer game applications demonstrate an acceptable level of quality in the three criteria of correctness, reliability and maintainability.","2017-06-01","2020-11-04 22:53:38","2020-11-04 22:53:45","2020-11-04 22:53:37","1-10","","","21","","Entertainment Computing","Open source computer game application","","","","","","","en","","","","","ScienceDirect","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/H7QC85Z5/Ahmed et al. - 2017 - Open source computer game application An empirica.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/VBEZPS4V/S1875952117300290.html","","","Computer game; Empirical study; Maintainability; Open source software; Reliability; Software quality","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CS2HUT4P","conferencePaper","2016","Chen, Woei-Kae; Liu, Chien-Hung; Chen, Ping-Hung; Hsu, Chia-Sheng","A Game Framework Supporting Automatic Functional Testing for Games","Applied Computing & Information Technology","978-3-319-26396-0","","10.1007/978-3-319-26396-0_2","","When developing a computer (mobile) game, testing the game is an important task and takes a large share of the development cost. So far, testing a game’s functional features relies mainly on human testers, who personally plays the game, and is thus labor intensive. This paper proposes a method that automates game testing. Since games are usually built on top of game frameworks, the idea is to enhance a game framework with a testing layer, which can execute (playback) test scripts that perform user events and assert the correctness of the game. We design an HTML5 game framework with such a support. In addition, a case study is performed to compare the testing cost of three different methods: writing a test script directly, recording a test script, and testing the game directly by a human tester. The results showed that when repeated testings are necessary, an automatic testing (either writing or recording test scripts) can reduce human cost. Among these three testing methods, recording scripts was the most favored method.","2016","2020-11-04 23:12:00","2020-11-04 23:12:00","","13-26","","","","","","","Studies in Computational Intelligence","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/G7B577RM/Chen et al. - 2016 - A Game Framework Supporting Automatic Functional T.pdf","","","Game Developer; Human Tester; Human Time; Mobile Game; Testing Cost","Lee, Roger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8H48CJZD","journalArticle","2019","Liu, Jing-Wei; Ho, Chia-Yu; Chang, Jamie Y. T.; Tsai, Jacob Chia-An","The role of Sprint planning and feedback in game development projects: Implications for game quality","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2019.04.057","http://www.sciencedirect.com/science/article/pii/S0164121219300974","Game development projects adopt Scrum to leverage their flexibility, as game concepts and the customer preferences are highly abstract and unpredictable. The most desirable features in an original game will not be easily identified during the first phase of development but will emerge later in a clear pattern as developers and testers continuously playtest the game. Thus, game development projects use feedback from game testers to understand what they think of various features and concepts, to obtain a better understanding of problem spaces. This study proposes that game tester feedback moderates the effect of Sprint planning on game quality. A field study was conducted using a pair-matched questionnaire in which 102 game development projects participated. Results showed that Sprint planning has a positive effect on game quality. The results also revealed that iterative feedback has a moderating effect on the relationship between Sprint planning and game quality. Theoretical and practical implications are discussed.","2019-08-01","2020-11-04 23:15:11","2020-11-04 23:15:11","2020-11-04 23:15:06","79-91","","","154","","Journal of Systems and Software","The role of Sprint planning and feedback in game development projects","","","","","","","en","","","","","ScienceDirect","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/GSZTEDD3/Liu et al. - 2019 - The role of Sprint planning and feedback in game d.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/UD4WAVKB/S0164121219300974.html","","","Feedback; Game development project; Game quality; Game tester; Sprint planning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PH8K7WSF","journalArticle","2020","Albaghajati, A. M.; Ahmed, M. A. K.","Video Game Automated Testing Approaches: An Assessment Framework","IEEE Transactions on Games","","2475-1510","10.1109/TG.2020.3032796","","The video-game industry has recently grown from focused markets to mainstream. The advancements the industry has been enjoying motivated researches to propose techniques and tools to support the activities across the different phases of the game development lifecycle. Game testing is one of the crucial activities within the game development process. Due to the nature of game testing, many automated game testing techniques have been proposed in the literature. However, there is no framework that could be used to aid practitioners in selecting appropriate techniques suitable for their particular development efforts. In this paper we present an attribute-based framework to classify and compare these techniques and provide such aid to practitioners. The framework is also meant to guide researchers interested in proposing new game testing techniques. The paper discusses a number of prominent techniques against the framework. Analysis of the discussion reveals gaps and suggests open points for future research.","2020","2020-11-04 23:28:09","2020-11-04 23:28:09","","1-1","","","","","","Video Game Automated Testing Approaches","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Games","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/758APNKF/Albaghajati and Ahmed - 2020 - Video Game Automated Testing Approaches An Assess.pdf","","","Game Testing; Software; Testing; Data mining; Games; Industries; Evolutionary computation; Playtesting; Assessment Framework; Game Development; Search engines; Software Testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"785Q8X2R","conferencePaper","2016","Choi, Judeth Oden; Forlizzi, Jodi; Christel, Michael; Moeller, Rachel; Bates, MacKenzie; Hammer, Jessica","Playtesting with a Purpose","Proceedings of the 2016 Annual Symposium on Computer-Human Interaction in Play","978-1-4503-4456-2","","10.1145/2967934.2968103","http://doi.org/10.1145/2967934.2968103","Playtesting, or using play to guide game design, gives designers feedback about whether their game is meeting their goals and the player's expectations. We report a case study of designing, deploying, and iterating on a series of playtesting workshops for novice game designers. We identify common missteps made by novice designers and address these missteps through the concept of purposefulness, understanding why you are playtesting as well as how to playtest. We ground our workshops in the development of rich player experience goals, which inform playtest design, data collection and iteration. We show that by applying methods taught in our workshops, novice game designers leveraged playtest methods and tools, employed playtesting and data collection methods appropriate for their goals, and effectively applied playtest data in iterative design. We conclude with lessons learned and next steps in our research on playtesting.","2016-10-15","2020-11-04 23:32:26","2020-11-04 23:32:26","2020-11-04","254–265","","","","","","","CHI PLAY '16","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/4A35G7P7/Choi et al. - 2016 - Playtesting with a Purpose.pdf","","","playtesting; game design; game design education; game user research","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3NFS7QE5","conferencePaper","2020","Mirza-Babaei, Pejman; Stahlke, Samantha; Wallner, Günter; Nova, Atiya","A Postmortem on Playtesting: Exploring the Impact of Playtesting on the Critical Reception of Video Games","Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems","978-1-4503-6708-0","","10.1145/3313831.3376831","http://doi.org/10.1145/3313831.3376831","Game studios aim to develop titles that deliver a fun and engaging experience for players. Playtesting promises to help identify opportunities to improve player experience and assist developers in achieving their design intent. However, a lack of research on the added value of playtesting means that many studios are still uncertain about its commercial viability and impact on product success. This gap in understanding is further complicated by the vague definition of ""success"" afforded by sales figures and review scores. In this paper, we assess reported feature quality of three commercial titles by analyzing playtesting reports and game reviews. By comparing themes and design issues expressed in game reviews to the results of pre-release playtesting for each game, we aim to highlight the value of playtesting and propose a set of guidelines for selecting playtest methods based on the needs of a given game evaluation. Through the real-world case studies presented, this paper contributes to the growing domain of games user research and highlights the value of playtesting in game development.","2020-04-21","2020-11-04 23:34:52","2020-11-04 23:34:52","2020-11-04","1–12","","","","","","A Postmortem on Playtesting","CHI '20","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/ALTVRNK4/Mirza-Babaei et al. - 2020 - A Postmortem on Playtesting Exploring the Impact .pdf","","","playtesting; game reviews; games user research","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CN3HQ6YR","journalArticle","","Garcia-Ruiz, Miguel; Xu, Simon; Console, John","Analyzing Black-box Testing from Classic Game Development Post-mortems","","","","","","Testing is a very important activity in game development projects because it uncovers game user interface, gameplay and programming problems, including game “bugs” (flaws or errors in the game software producing an unexpected or incorrect result). Post-mortems (structured documents describing what went well and wrong in game development projects) are widely read in the gaming industry, covering testing and other game development aspects. This paper summarizes game testing described in post-mortems published by the specialized game development magazine gamasutra.com, analyzing black-box testing (testers analyze game inputs and outputs). In our postmortem analysis methodology, we selected and classified testing aspects from 10 “classic” post-mortems, conducting both qualitative and quantitative data analysis. We found best testing practices described in the post-mortems and useful advice for future gaming development projects.","","2020-11-04 23:44:35","2020-11-04 23:44:35","","4","","","","","","","","","","","","","en","","","","","Zotero","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/8S24Z42Q/Garcia-Ruiz et al. - Analyzing Black-box Testing from Classic Game Deve.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6LT8IWRA","book","","Miyake, Youichiro","AI Technologies in Game Industry (English)","","","","","https://www.slideshare.net/youichiromiyake/ai-technologies-in-game-industry-english?qid=4eefccb6-e748-497f-9d5d-87409d2da37a&v=&b=&from_search=1","AI Technologies in Game Industry (English)","","2020-11-05 00:10:48","2020-11-05 00:10:48","2020-10-30","","","","","","","","","","","","","","","","","","","","","Type: Entertainment & Humor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Z9I45CJ2","journalArticle","2020","Ling, Carlos; Tollmar, Konrad; Gisslén, Linus","Using Deep Convolutional Neural Networks to Detect Rendered Glitches in Video Games","Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment","","2334-0924","","https://www.aaai.org/ojs/index.php/AIIDE/article/view/7409","In this paper, we present a method using Deep Convolutional Neural Networks (DCNNs) to detect common glitches in video games. The problem setting consists of an image (800x800 RGB) as input to be classified into one of five defined classes, normal image, or one of four different kinds of glitches (stretched, low resolution, missing and placeholder textures). Using a supervised approach, we train a ShuffleNetV2 using generated data. This work focuses on detecting texture graphical anomalies achieving arguably good performance with an accuracy of 86.8%, detecting 88% of the glitches with a false positive rate of 8.7%, and with the models being able to generalize and detect glitches even in unseen objects. We apply a confidence measure as well to tackle the issue with false positives as well as an effective way of aggregating images to achieve better detection in production. The main use of this work is the partial automatization of graphical testing in the final stages of video game development.","2020-10","2020-11-05 00:10:51","2020-11-05 00:10:51","2020-10-30","66–73","","1","16","","","","","","","","","","en","Copyright (c) 2020 Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/SU7GM35K/Ling et al. - 2020 - Using Deep Convolutional Neural Networks to Detect.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M8G63QMD","conferencePaper","2020","Wilkins, Benedict; Watkins, Chris; Stathis, Kostas","A Metric Learning Approach to Anomaly Detection in Video Games","2020 IEEE Conference on Games (CoG)","978-1-72814-533-4","","10.1109/CoG47356.2020.9231700","https://ieeexplore.ieee.org/document/9231700/","With the aim of designing automated tools that assist in the video game quality assurance process, we frame the problem of identifying bugs in video games as an anomaly detection (AD) problem. We develop State-State Siamese Networks (S3N) as an efﬁcient deep metric learning approach to AD in this context and explore how it may be used as part of an automated testing tool. Finally, we show by empirical evaluation on a series of Atari games, that S3N is able to learn a meaningful embedding, and consequently is able to identify various common types of video game bugs.","2020-08","2020-11-05 00:10:51","2020-11-05 00:10:51","2020-10-30","604–607","","","","","","","","","","","IEEE","Osaka, Japan","en","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/IK66BXBQ/Wilkins et al. - 2020 - A Metric Learning Approach to Anomaly Detection in.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AZWNE3R4","journalArticle","2020","Justesen, N.; Bontrager, P.; Togelius, J.; Risi, S.","Deep Learning for Video Game Playing","IEEE Transactions on Games","","2475-1510","10.1109/TG.2019.2896986","","In this paper, we review recent deep learning advances in the context of how they have been applied to play different types of video games such as first-person shooters, arcade games, and real-time strategy games. We analyze the unique requirements that different game genres pose to a deep learning system and highlight important open challenges in the context of applying these machine learning methods to video games, such as general game playing, dealing with extremely large decision spaces and sparse rewards.","2020-03","2020-11-05 00:10:52","2020-11-05 00:10:52","","1–20","","1","12","","","","","","","","","","","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/S29Z5XXZ/Justesen et al. - 2020 - Deep Learning for Video Game Playing.pdf","","artificial intelligence; learning (artificial intelligence); Neural networks; computer games; Games; Algorithms; arcade games; Deep learning; deep learning system; first-person shooters; learning; machine learning algorithms; Mathematical model; multilayer neural network; real-time strategy games; Reinforcement learning; Unsupervised learning; video game playing; video games","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UCLJGISQ","book","2020","arbon, jason","AI for Testing Games","","","","","https://medium.com/@jarbon/ai-for-testing-games-c5bd90c3153","I used to tell my team that “games are just too hard to tackle right now” and would tell potential investors “we don’t test games…” Today…","2020-02","2020-11-05 00:10:54","2020-11-05 00:10:54","2020-11-04","","","","","","","","","","","","","","en","","","","","","","Publication Title: Medium","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/C73M95MT/arbon - 2020 - AI for Testing Games.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2W6FD98E","journalArticle","2020","Sironi, C. F.; Liu, J.; Winands, M. H. M.","Self-Adaptive Monte Carlo Tree Search in General Game Playing","IEEE Transactions on Games","","2475-1510","10.1109/TG.2018.2884768","","Many enhancements for Monte Carlo tree search (MCTS) have been applied successfully in general game playing (GGP). MCTS and its enhancements are controlled by multiple parameters that require extensive and time-consuming offline optimization. Moreover, as the played games are unknown in advance, offline optimization cannot tune parameters specifically for single games. This paper proposes a self-adaptive MCTS strategy (SA-MCTS) that integrates within the search a method to automatically tune search-control parameters online per game. It presents five different allocation strategies that decide how to allocate available samples to evaluate parameter values. Experiments with 1 s play-clock on multiplayer games show that for all the allocation strategies the performance of SA-MCTS that tunes two parameters is at least equal to or better than the performance of MCTS tuned offline and not optimized per-game. The allocation strategy that performs the best is N-Tuple Bandit Evolutionary Algorithm (NTBEA). This strategy also achieves a good performance when tuning four parameters. SA-MCTS can be considered as a successful strategy for domains that require parameter tuning for every single problem, and it is also a valid alternative for domains where offline parameter tuning is costly or infeasible.","2020-06","2020-11-05 00:10:54","2020-11-05 00:10:54","","132–144","","2","12","","","","","","","","","","","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/LTQFKP5P/Sironi et al. - 2020 - Self-Adaptive Monte Carlo Tree Search in General G.pdf","","computer games; evolutionary computation; Optimization; Games; adaptive Monte Carlo tree search; allocation strategy; Evolutionary computation; general game playing; Monte Carlo methods; multiplayer games; multiple parameters; N-tuple bandit evolutionary algorithm; offline parameter tuning; parameter values; played games; Resource management; SA-MCTS; search-control parameters; self-adaptive MCTS strategy; single games; time-consuming offline optimization; tree searching; Tuners; Combinatorial multi-armed bandit (CMAB); evolutionary algorithms; general game playing (GGP); N-tuple systems; on-line parameter tuning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RI749VPB","journalArticle","2020","Roohi, Shaghayegh; Relas, Asko; Takatalo, Jari; Heiskanen, Henri; Hämäläinen, Perttu","Predicting Game Difficulty and Churn Without Players","Proceedings of the Annual Symposium on Computer-Human Interaction in Play","","","10.1145/3410404.3414235","http://arxiv.org/abs/2008.12937","We propose a novel simulation model that is able to predict the per-level churn and pass rates of Angry Birds Dream Blast, a popular mobile free-to-play game. Our primary contribution is to combine AI gameplay using Deep Reinforcement Learning (DRL) with a simulation of how the player population evolves over the levels. The AI players predict level difficulty, which is used to drive a player population model with simulated skill, persistence, and boredom. This allows us to model, e.g., how less persistent and skilled players are more sensitive to high difficulty, and how such players churn early, which makes the player population and the relation between difficulty and churn evolve level by level. Our work demonstrates that player behavior predictions produced by DRL gameplay can be significantly improved by even a very simple population-level simulation of individual player differences, without requiring costly retraining of agents or collecting new DRL gameplay data for each simulated player.","2020-11","2020-11-05 00:10:56","2020-11-05 00:10:56","2020-11-05","585–593","","","","","","","","","","","","","","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/KKP7LJP9/Roohi et al. - 2020 - Predicting Game Difficulty and Churn Without Playe.pdf","","Computer Science - Artificial Intelligence; I.2.6; I.6.0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"447ZUDDW","thesis","2019","Sriram, Varun","Automated playtesting of platformer games using reinforcement learning","","","","","http://hdl.handle.net/2047/D20335186","","2019","2020-11-05 00:10:56","2020-11-05 00:10:56","2020-11-05","","","","","","","","","","","","Northeastern University","","en","","PhD Thesis","","","","","DOI: 10.17760/D20335186","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/9258I6MN/Sriram - 2019 - Automated playtesting of platformer games using re.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KRLWXE3V","conferencePaper","2019","Paduraru, C.; Paduraru, M.","Automatic Difficulty Management and Testing in Games using a Framework Based on Behavior Trees and Genetic Algorithms","2019 24th International Conference on Engineering of Complex Computer Systems (ICECCS)","","","10.1109/ICECCS.2019.00026","","The diversity of agent behaviors is an important topic for the quality of video games and virtual environments in general. Offering the most compelling experience for users with different skills is a difficult task, and usually needs important manual human effort for tuning existing code. This can get even harder when dealing with adaptive difficulty systems. Our paper's main purpose is to create a framework that can automatically create behaviors for game agents of different difficulty classes and enough diversity. In parallel with this, a second purpose is to create more automated tests for showing defects in the source code or possible logic exploits with less human effort.","2019-11","2020-11-05 00:13:03","2020-11-05 00:13:03","","170–179","","","","","","","","","","","","","","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/BSCSBIT9/Paduraru and Paduraru - 2019 - Automatic Difficulty Management and Testing in Gam.pdf","","Artificial intelligence; learning (artificial intelligence); program testing; computer games; genetic algorithms; Genetic algorithms; Testing; Games; learning; video games; functional testing; Manuals; agent behaviors; automated tests; automatic difficulty management; behavior trees; game agents; Robots; source code; source code (software); trees (mathematics); Tuning; virtual environments; behavior tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"38LDXKWQ","conferencePaper","2020","Song, Zihe","An automated framework for gaming platform to test multiple games","Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering: Companion Proceedings","978-1-4503-7122-3","","10.1145/3377812.3382171","https://dl.acm.org/doi/10.1145/3377812.3382171","Game testing is a necessary but challenging task for gaming platforms. Current game testing practice requires significant manual effort. In this paper, we proposed an automated game testing framework combining adversarial inverse reinforcement learning algorithm with evolutionary multi-objective optimization. This framework aims to help gaming platform to assure market-wide game qualities as the framework is suitable to test different games with minimum manual customization for each game.","2020-06","2020-11-05 00:13:11","2020-11-05 00:13:11","2020-11-04","134–136","","","","","","","","","","","ACM","Seoul South Korea","en","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/4C93UKER/Song - 2020 - An automated framework for gaming platform to test.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9WRJ96B8","conferencePaper","2018","Lovreto, Gabriel; Endo, Andre T.; Nardi, Paulo; Durelli, Vinicius H. S.","Automated Tests for Mobile Games: An Experience Report","2018 17th Brazilian Symposium on Computer Games and Digital Entertainment (SBGames)","978-1-5386-9605-7","","10.1109/SBGAMES.2018.00015","https://ieeexplore.ieee.org/document/8636923/","As mobile gaming is an ever-growing, competitive and proﬁtable market, there has been an increasing demand for better quality in video game software. While manual testing is still a common practice among mobile game developers, some repetitive and error-prone tasks could beneﬁt from test automation. For instance, test scripts that perform sanity checks of the proper functioning of a mobile game would be desirable in an ecosystem with constant hotﬁxes and updates, as well as a diverse set of conﬁgurations (e.g., device hardware, screensizes, and platforms). In this context, this paper reports an experience on developing automated test scripts for mobile games. To this end, we randomly selected 16 mobile games, from different genres, among the popular ones from the Google Play Store. For each game, test scripts were developed using the Appium testing framework and the OpenCV library. Based on our results, we provide an in-depth discussion on the challenges and lessons learned.","2018-10","2020-11-05 00:13:11","2020-11-05 00:13:11","2020-11-04","48–488","","","","","","Automated Tests for Mobile Games","","","","","IEEE","Foz do Iguaçu, Brazil","en","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/NI2D7JKD/Lovreto et al. - 2018 - Automated Tests for Mobile Games An Experience Re.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NA2BCFAD","thesis","2018","Loubos, D.","Automated Testing in Virtual Worlds","","","","","http://localhost/handle/1874/366211","In this study we train an agent in the video game Minecraft, to gather items in the world space and combine them to automatically test the functionality of the crafting system of the game. We are inspired by the ideas of reinforcement learning to teach the agent a certain behavior based solely on previous experience, while we test his ability to correctly predict the exact recipe for crafting specific items. We perform experiments with different test cases to explore the success of such process and the time needed to test the crafting feature. Keeping in mind that our main purpose is to explore functional testing in virtual worlds, we conclude that such an automation process can certainly ease the workload of testing.","2018","2020-11-05 00:13:11","2020-11-17 21:37:26","2020-11-04","","","","","","","","","","","","","","en","Open Access (free)","","","","","","Type: Master thesis","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/BXXFN3CD/Loubos - 2018 - Automated Testing in Virtual Worlds.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KYW8G2S3","conferencePaper","2018","Kazmi, A.; Fatima, A.; Idris, A.; Hussain, S.","Adaptive Usage Statistical Testing for 3D Gaming Applications","2018 International Conference on Computing, Electronic and Electrical Engineering (ICE Cube)","","","10.1109/ICECUBE.2018.8610975","","3D applications have travelled great lengths over the past few years as users are more accustomed towards visual environment and interactive media such as 3D games. One of the major concerns of 3D mobile game development is to provide interactive source of entertainment. Testing a 3D gaming is more complex and subjective then general mobile applications. A bug in general mobile application can be compromised in its first release but this might not work for a 2D or 3D gaming application. Any deficit in performance, graphics, logic and compatibility is simply rejected in the current saturated market. The testing approaches used for 3D visualization applications are either manual based or using automated testing tools, although one needs to be fully equipped with the domain knowledge and working of the automated tool for it to be useful. In this paper, we have proposed an adaptive usage based statistical testing (A-UBST) that adapts with the user experiences. This technique enables the quality engineers and testers to focus on the frequently accessed parts of SUT (software under test). We have used Markov Models to represent usage models. We demonstrated our approach with respect to 3D game. Our comparison results show the suitability of the approach for 3D gaming applications by reducing testing effort, time and cost metrics.","2018-11","2020-11-05 00:13:12","2020-11-05 00:13:12","","1–6","","","","","","","","","","","","","","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/YFEQPS3Y/Kazmi et al. - 2018 - Adaptive Usage Statistical Testing for 3D Gaming A.pdf","","Visualization; program testing; computer games; Software; Testing; Games; Data visualization; 2D gaming application; 3D gaming application; 3D Gaming Applications; 3D mobile game development; 3D visualization applications; A-UBST; Adaptation models; adaptive usage based statistical testing; Adaptive Usage Based Statistical Testing; automated testing tools; data visualisation; general mobile application; Markov Model; Markov models; Markov processes; mobile computing; software under test; statistical testing; SUT; Three-dimensional displays; user experiences","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SS6SZKHY","journalArticle","2020","Prasetya, I. S. W. B.; Voshol, Maurin; Tanis, Tom; Smits, Adam; Smit, Bram; van Mourik, Jacco; Klunder, Menno; Hoogmoed, Frank; Hinlopen, Stijn; van Casteren, August; van de Berg, Jesse; Prasetya, Naraenda G. W. Y.; Shirzadehhajimahmood, Samira; Ansari, Saba Gholizadeh","Navigation and Exploration in 3D-Game Automated Play Testing","arXiv:2009.07015 [cs]","","","10.1145/3412452.3423570","http://arxiv.org/abs/2009.07015","To enable automated software testing, the ability to automatically navigate to a state of interest and to explore all, or at least sufficient number of, instances of such a state is fundamental. When testing a computer game the problem has an extra dimension, namely the virtual world where the game is played on. This world often plays a dominant role in constraining which logical states are reachable, and how to reach them. So, any automated testing algorithm for computer games will inevitably need a layer that deals with navigation on a virtual world. Unlike e.g. navigating through the GUI of a typical web-based application, navigating over a virtual world is much more challenging. This paper discusses how concepts from geometry and graph-based path finding can be applied in the context of game testing to solve the problem of automated navigation and exploration. As a proof of concept, the paper also briefly discusses the implementation of the proposed approach.","2020-09","2020-11-05 00:13:13","2020-11-05 00:13:13","2020-11-04","","","","","","","","","","","","","","","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/B75CFZTR/Prasetya et al. - 2020 - Navigation and Exploration in 3D-Game Automated Pl.pdf","","Computer Science - Software Engineering; D.2.5","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"45XD7F3P","journalArticle","2009","Huiqun, Zhao; Jing, Sun; Gongzhu, Hu","Study of methodology of testing mobile games based on TTCN-3","10th ACIS Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing, SNPD 2009, In conjunction with IWEA 2009 and WEACR 2009","","","10.1109/SNPD.2009.26","","Systematic software testing plays a critical role in software development. Various approaches have been proposed and developed, but software testing is still far from maturity. A very promising strategy is model-based testing that is aimed to automatically generate test cases and evaluate test results based on the software models that specify the behavior of the software under test. In this paper, we propose a general rule model for mobile games by combining the features of the game software and the Wireless Application Protocol. We also build an adjusted model for generating test cases with the characteristics of mobile game software. A series of patterns are created to facilitate the generation of TTCN-3 test suite and test case. A case study on the Fruit Machine game is discussed to illustrate the use of the proposed model for software testing.","2009","2020-11-05 00:23:04","2020-11-05 00:23:04","","579–584","","","","","","","","","","","","","","","","","","","","ISBN: 9780769536422 Publisher: IEEE","","","","Software testing; Game rule model; Mobile game software; Test case; TTCN-3","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MFXZF3NT","journalArticle","2018","Paydar, Samad; Azamnouri, Aidin","An experimental study on robustness and responsiveness testing of Iranian android games","2018 8th International Conference on Computer and Knowledge Engineering, ICCKE 2018","","","10.1109/ICCKE.2018.8566512","","","2018","2020-11-05 00:23:05","2020-11-05 00:23:05","","27–33","","Iccke","","","","","","","","","","","","","","","","","","ISBN: 9781538695692 Publisher: IEEE","","","","Android; Mobile Application; Monkey Testing; Responsiveness","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M5KUMVQK","journalArticle","2014","Schmalz, Marc; Finn, Aimee; Taylor, Hazel","Risk management in video game development projects","Proceedings of the Annual Hawaii International Conference on System Sciences","","15301605","10.1109/HICSS.2014.534","","The video game software industry has a reputation for volatile, chaotic projects yet, in spite of dramatic growth in global revenues, surprisingly little academic work has examined these projects. This study reports a preliminary investigation into this under-researched area. We interviewed eight video game producers from a range of companies, using a critical incident method to explore risk management practices and risk perceptions. Our results revealed that in lieu of formal risk management practices, these managers relied on prototyping, pre-production decision points, and agile approaches to contain risk on their projects. Among the risk factors mentioned, two are specific to the unique context of video game development. The risk of failing to match the development strategy to the project was identified as a major cause of problems during the development process, and a new risk - the 'fun factor' - was a key element threatening the success of the final game release. © 2014 IEEE.","2014","2020-11-05 00:23:05","2020-11-05 00:23:05","","4325–4334","","","","","","","","","","","","","","","","","","","","ISBN: 9781479925049 Publisher: IEEE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"I6V254QU","journalArticle","2017","Sabahat, Nosheen; Malik, Ali Afzal; Azam, Farooque","A Size Estimation Model for Board-Based Desktop Games","IEEE Access","","21693536","10.1109/ACCESS.2017.2678459","","Software size estimation plays a key role in the planning of projects at the time of project inception. This paper describes the derivation, validation, and usage of a parametric model meant for estimating the size of board-based desktop games. This model is derived using forward stepwise multiple linear regression on a data set comprising over 60 open source board-based games collected from multiple open source repositories. A variety of prediction accuracy metrics (e.g., MMRE, PRED(x), MdMRE, and so on) are used to assess this model and K-fold cross-validation is used to validate this model. Model assessment and validation exercises yield promising results. The utility of this model is demonstrated by presenting a worked-out game size estimation example followed by some size-related what-if analyses. © 2013 IEEE.","2017","2020-11-05 00:23:05","2020-11-05 00:23:05","","4980–4990","","","5","","","","","","","","","","","","","","","","","Publisher: IEEE","","","","Linear regression; model fitting; model validation; open source software; software cost estimation; software games; software project management; software sizing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"P2FMQ9AF","journalArticle","2004","Desurvire, Heather; Blvd, Washington; Rey, Marina; Caplan, Martin","Using Heuristics to Evaluate the Playability of Games","","","","","","","2004","2020-11-05 00:23:05","2020-11-05 00:23:05","","1509–1512","","","","","","","","","","","","","","","","","","","","ISBN: 1581137036","","","","computer games; video games; games; playtesting; design guidelines; evaluation; heuristics; playability; usabil-","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"F3YG5Q3J","journalArticle","2010","Johnson, Jeff","Simplifying the controls of an interactive movie game","","","","10.1145/274644.274655","","Eight months before an interactive movie game was due to be shipped, its developers and funders decided that its user interface had to be radically simplified. The author was given the task of designing a new, simpler control scheme. This paper describes the redesign process, the design issues that arose and how they were resolved, the tests that were conducted to evaluate new design ideas, and concludes with an evaluation of the resulting design, lessons learned, and thoughts on user-interface design vs. game design.","2010","2020-11-05 00:23:05","2020-11-05 00:23:05","","65–72","","April","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RRKNNBBW","journalArticle","2015","Marczak, Raphael; Schott, Gareth; Hanna, Pierre","Postprocessing Gameplay Metrics for Gameplay Performance Segmentation Based on Audiovisual Analysis","IEEE Transactions on Computational Intelligence and AI in Games","","1943068X","10.1109/TCIAIG.2014.2382718","","This paper introduces a new variant of gameplaymetrics that further develops a set of processes that expand user-centered game testing practices capable of quantifying user experiences. The key goal of the method presented here is to widen the appeal and application of game metrics within research relevant to, and representative of the wider field of game studies. In doing so, we acknowledge that the interests of this research community is often focused on player experience and performance with a broad range of off-the-shelf games that have already been released to the public. In order to be able to include any PC game system within research (or audiovideo stream, e.g.,YouTube walkthroughs) our ap- proach comprises of a postprocessing method for analyzing player performance. Through exploiting the audiovisual streams that are transmitted to the player, this approach processes content activated and generated during play and is therefore representative of individual player's encounters with specific games.","2015","2020-11-05 00:23:05","2020-11-05 00:23:05","","279–291","","3","7","","","","","","","","","","","","","","","","","Publisher: IEEE","","","","Audiovisual segmentation; gameplay metrics; gameplay segmentation; player performance; sound analysis; video analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7WR9FCLY","journalArticle","2014","Al-Azawi, R.a; Ayesh, A.b; Al-Masruri, K.A.c; Kenny, I.b","Multi Agent Software Engineering (MaSE) and agile methodology for game development","14th Middle Eastern Simulation and Modelling Multiconference, MESM 2014 - 4th GAMEON-ARABIA Conference, GAMEON-ARABIA 2014","","","","http://www.scopus.com/inward/record.url?eid=2-s2.0-84899018045&partnerID=40&md5=fb8648ee8cceabcfb4e189f731d604e5","Agile software development methodologies has become very common inŋame development methodologies. However, such methodologies must\nbe adapted to different game genres. The purpose of this paper is\nto investigate the existing game development methodologies and provide\na new game development methodology suitable for different game genres.\nFurthermore, the methodology is based on both predictive and adaptive\ndevelopment models. A critical analysis of Agile game development\nmethodology is presented and we identify the weakness of the current\nAgile game development. The Agile Agent Game Development Methodology\n(AAGDM) is introduced as a new hybrid methodology linking the Agent\nand Agile approach to create a generic game development methodology.\n© 2014 EUROSIS-ETI.","2014","2020-11-05 00:23:06","2020-11-05 00:23:06","","116–122","","January","","","","","","","","","","","","","","","","","","","","","","adaptive development model; ag-; agile methodology; game development methodology; mase; model; multi agent software engineering; predictive development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RN59LWPN","journalArticle","2011","Reale, Michael; Liu, Peng; Yin, Lijun","Using eye gaze, head pose, and facial expression for personalized non-player character interaction","IEEE Computer Society Conference on Computer Vision and Pattern Recognition Workshops","","21607508","10.1109/CVPRW.2011.5981691","","True immersion of a user within a game is only possible when the world simulated looks and behaves as close to reality as possible. This implies that the game must ascertain, among other things, the user's focus and his/her attitude towards the object or person focused on. As part of the effort to achieve this goal, we propose an eye gaze, head pose, and facial expression system for use in real-time games. Both the eye gaze and head pose components utilize underlying 3D models, while the expression recognition module uses the effective but efficient LBP-TOP approach. We then demonstrate the utility of this system in a test application wherein the user looks at one of three non-player characters (NPC) and performs one of the 7 prototypic expressions; the NPC responds based on its personality. To increase the speed and efficiency of the system, the eye gaze and expression recognition modules leverage CUDA and GLSL pixel shaders.","2011","2020-11-05 00:23:06","2020-11-05 00:23:06","","13–18","","","","","","","","","","","","","","","","","","","","ISBN: 9781457705298 Publisher: IEEE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"X45NAGRA","journalArticle","","Georgyy, Mola Bogdan; Mozgovoy, Maxim; Ito, Toru; Rikimaru, Tatsuhiro","Believability assessment for fighting game ai","","","","","","","","2020-11-05 00:23:06","2020-11-05 00:23:06","","2–4","","","","","","","","","","","","","","","","","","","","","","","","believability; cosine similarity; game ai; turing test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2PRLYZPU","journalArticle","2010","Ampatzoglou, Apostolos; Stamelos, Ioannis","Software engineering research for computer games: A systematic review","Information and Software Technology","","09505849","10.1016/j.infsof.2010.05.004","http://dx.doi.org/10.1016/j.infsof.2010.05.004","Context: Currently, computer game development is one of the fastest growing industries in the worldwide economy. In addition to that, computer games are rapidly evolving in the sense that newer game versions arrive in a very short interval. Thus, software engineering techniques are needed for game development in order to achieve greater flexibility and maintainability, less cost and effort, better design, etc. In addition, games present several characteristics that differentiate their development from classical software development. Objective: This study aims to assess the state of the art on research concerning software engineering for computer games and discuss possible important areas for future research. Method: We employed a standard methodology for systematic literature reviews using four well known digital libraries. Results: Software engineering for computer games is a research domain that has doubled its research activity during the last 5 years. The dominant research topic has proven to be requirements engineering, while topics such as software verification and maintenance have been neglected up to now. Conclusion: The results of the study suggest that software engineering for computer games is a field that embraces many techniques and methods from conventional software engineering and adapts them so as to fit the specific requirements of game development. In addition to that, the study proposes the employment of more elaborate empirical methods, i.e. controlled experiments and case studies, in game software engineering research, which, have not been extensively used up to now. © 2010 Elsevier B.V. All rights reserved.","2010","2020-11-05 00:23:06","2020-11-05 00:23:06","","888–901","","9","52","","","","","","","","","","","","","","","","","Publisher: Elsevier B.V.","","","","Software engineering; Computer games; Systematic review","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WB54JRI8","journalArticle","2015","Zimmermann, Thomas","Software Analytics for Digital Games","Proceedings - 4th International Workshop on Games and Software Engineering, GAS 2015","","","10.1109/GAS.2015.8","","—Software and its development generates an inordi-nate amount of data. Development activities such as check-ins, work items, bug reports, code reviews, and test executions are recorded in software repositories. User interactions that reflect how customers experience software are recorded in telemetry data, run-time traces, and log files and helps to track application and feature usage and expose performance and reliability. Soft-ware analytics takes this data and turns it into actionable insight to better inform decisions related to software. In this talk, I will summarize our efforts in the area of software analytics with a special focus on digital games. I will present sev-eral examples of games studies, which we have worked on at Mi-crosoft Research such as how players are engaged in Project Go-tham Racing, how skill develops over time in Halo Reach and Forza Motorsports, and the initial experience of game play. I will also point out important differences between games development and traditional software development. The work presented in this talk has been done by Nachi Nagappan, myself, and many others who have visited our group over the past years.","2015","2020-11-05 00:23:06","2020-11-05 00:23:06","","1–2","","","","","","","","","","","","","","","","","","","","ISBN: 9781479919345 Publisher: IEEE","","","","Digital games; Software analytics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CHNKPWUK","journalArticle","2015","Pavapootanont, Sakul; Prompoon, Nakornthip","Defining usability quality metric for mobile game prototype using software attributes","Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS","","23270594","10.1109/ICSESS.2015.7339161","","Quality of software game development is considered to be a key vital part for game software industry which is highly competitive. Unlike other software development, the full requirements of game software cannot always be completely defined upfront. Therefore, defining quality measurement method is a must, especially in the early stage of the game software development which will result in easier bug and software improvement and better cost effectiveness than implementing quality assurance after the game has been fully developed. This study presents the defining usability quality metric for game prototype using software attributes by referring to ISO Standards 9126-3: Software Engineering - Product Quality, with the adaptation for the quality assurance and measurement during game prototyping period. In order to be fully utilized and optimized the effectiveness of the proposed quality metric, it is best to define the development process environment and its application simultaneously.","2015","2020-11-05 00:23:06","2020-11-05 00:23:06","","730–736","","","2015-Novem","","","","","","","","","","","","","","","","","ISBN: 9781479983520 Publisher: IEEE","","","","Mobile Game; Game Prorotype Measurement; Mobile Game Usability; Quality Measurements; Usability Quality Metric","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NQNZHAXR","journalArticle","2017","Miyashita, Shohei; Lian, Xinyu; Zeng, Xiao; Matsubara, Takashi; Uehara, Kuniaki","Developing game AI agent behaving like human by mixing reinforcement learning and supervised learning","Proceedings - 18th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing, SNPD 2017","","","10.1109/SNPD.2017.8022767","","Artificial intelligence (AI) agent created with Deep Q-Networks (DQN) can defeat human agents in video games. Despite its high performance, DQN often exhibits odd behaviors, which could be immersion-breaking against the purpose of creating game AI. Moreover, DQN is capable of reacting to the game environment much faster than humans, making itself invincible (thus not fun to play with) in certain types of games. On the other hand, supervised learning framework trains an AI agent using historical play data of human agents as training data. Supervised learning agent exhibits a more human-like behavior than reinforcement learning agents because of imitating training data. However, its performance is often no better than human agents. The ultimate purpose of AI agents is to entertain human players. A good performance and a human-like behavior are important factors of the AI agents, and both of them should be achieved simultaneously. This study proposes frameworks combining reinforcement learning and supervised learning and we call then separated network model and shared network model. We evaluated their performances by the game scores and behaviors by Turing test. The experimental results demonstrate that the proposed frameworks develop an AI agent of better performance than human agent and natural behavior than reinforcement learning agents.","2017","2020-11-05 00:23:06","2020-11-05 00:23:06","","489–494","","","","","","","","","","","","","","","","","","","","ISBN: 9781509055043","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2KI9Q7RT","journalArticle","2018","Nicolescu, Gabriela","Towards Using DEVS for Modelling Adaptive Storytelling in Virtual Games","","","","10.22360/summersim.2018.scsc.049","","","2018","2020-11-05 00:23:07","2020-11-05 00:23:07","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6BH7RCMK","journalArticle","2011","Jacob, Joo Tiago Pinheiro Neto; Coelho, Antnio Fernando","Issues in the development of location-based games","International Journal of Computer Games Technology","","16877047","10.1155/2011/495437","","As new and more powerful mobile devices arrive, such as smartphones, tablets and PDAs, so do new ways of interaction emerge for the users and developers to explore. These devices allow for the creation of never-before-seen applications, using the broad range of inputs and sensors these devices integrate (such as accelerometers, light sensors, electronic compasses, GPS sensor among others), that allow for more ubiquous and personalized experiences. This paper explores issues that arise during the development and design phases of such games, as well as posible solutions for them. Finally we present, a framework for the development of location-based games that is sensible to these issues. This framework was created and tested thanks to a proof-of-concept location-based game (Geo-Wars).","2011","2020-11-05 00:23:07","2020-11-05 00:23:07","","","","","2011","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BBEV3Z74","journalArticle","2010","Musil, Juergen; Schweda, Angelika; Winkler, Dietmar; Biffl, Stefan","Synthesized Essence: What Game Jams Teach About Prototyping of New Software Products","Icse","","","","","The development of video games comprises engineering teams within various disciplines, e.g., software engineering, game production, and creative arts. Game jams are a promising approach for (software+) development projects to foster on new product development. This paper evaluates the concept of game jam, a community design/development activity, and its positive effects on new software product development with tight schedules in time-oriented, competitive environments. Game jams have received more public attention in recent times, but the concept itself has not been formally discussed so far. A game jam is a composition of design and development strategies: new product development, participatory design, lightweight construction, rapid experience prototyping, product-value focusing, aesthetics and technology, concurrent development and multidisciplinarity. Although game jams are normally used for rapid prototyping of small computer games, the constellation of the mentioned elements provides a powerful technique for rapidly prototyping new product ideas and disruptive innovations.","2010","2020-11-05 00:23:07","2020-11-05 00:23:07","","183–186","","","","","","","","","","","","","","","","","","","","ISBN: 9781605587196","","","","agile; game development; innovation; new product development; participatory design; prototyping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IDEX72M6","journalArticle","2006","Jones, Timothy V. Ballew; S, Keith","DESIGNING ENJOYABLE VIDEOGAMES: DO HEURISTICS DIFFERENTIATE BAD FROM GOOD?","","","","","","","2006","2020-11-05 00:23:07","2020-11-05 00:23:07","","2279–2283","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JC5YEUSQ","journalArticle","2017","Kristo, Teofebano; Maulidevi, Nur Ulfa","Deduction of fighting game countermeasures using Neuroevolution of Augmenting Topologies","Proceedings of 2016 International Conference on Data and Software Engineering, ICoDSE 2016","","","10.1109/ICODSE.2016.7936127","","","2017","2020-11-05 00:23:07","2020-11-05 00:23:07","","","","","","","","","","","","","","","","","","","","","","ISBN: 9781509056712","","","","Artificial intelligence; Artificial neural network; FightingICE; Genetic algorithm; Neuroevolution of augmenting topologies; Opponent modelling; Simulator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TR7X3X6U","journalArticle","2008","Dimitrova, Rayna; Finkbeiner, Bernd","Abstraction Refinement for Games with Incomplete Information ∗","Theoretical Computer Science","","","","","","2008","2020-11-05 00:23:07","2020-11-05 00:23:07","","175–186","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZJ6NK3J7","journalArticle","1995","Subrahmanyam, P. A.; Singh, K. J.; Story, Guy; Schell, William","Quality Assurance in Scripting","IEEE Multimedia","","1070986X","10.1109/93.388208","","Most scripting platforms ignore quality assurance issues for multimedia applications. Our authoring paradigm enables formal analysis, which lets developers explore all the different situations possible during the course of a user session and ensures that the needed responses have indeed been included in the script. We successfully analyzed games from a prototype interactive television (ITV) demonstration script","1995","2020-11-05 00:23:07","2020-11-05 00:23:07","","50–59","","2","2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QK5K4IF8","conferencePaper","2004","Chan, B.; Denzinger, J.; Gates, D.; Loose, K.; Buchanan, J.","Evolutionary behavior testing of commercial computer games","Proceedings of the 2004 Congress on Evolutionary Computation (IEEE Cat. No.04TH8753)","","","10.1109/CEC.2004.1330847","","We present an approach to use evolutionary learning of behavior to improve testing of commercial computer games. After identifying unwanted results or behavior of the game, we propose to develop measures on how near a sequence of game states comes to the unwanted behavior and to use these measures within the fitness function of a GA working on action sequences. This allows to find action sequences that produce the unwanted behavior, if they exist. Our experimental evaluation of the method with the FIFA-99 game and scoring a goal as unwanted behavior shows that the method is able to find such action sequences, allowing for an easy reproduction of critical situations and improvements to the tested game.","2004-06","2020-11-09 23:33:20","2020-11-09 23:33:20","","125-132 Vol.1","","","1","","","","","","","","","","","","","","","IEEE Xplore","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/4NSGC9HL/1330847.html","","","artificial intelligence; Artificial intelligence; computer games; evolutionary computation; Computer science; Games; action sequences; Application software; computer game testing; Computer industry; Computer networks; Electronic equipment testing; evolutionary learning; FIFA-99 game; fitness function; game behavior; genetic algortihm; Humans; Toy industry; Virtual reality","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of the 2004 Congress on Evolutionary Computation (IEEE Cat. No.04TH8753)","","","","","","","","","","","","","","",""
"G6KNHXH5","conferencePaper","2008","Salge, Christoph; Lipski, Christian; Mahlmann, Tobias; Mathiak, Brigitte","Using genetically optimized artificial intelligence to improve gameplaying fun for strategical games","Proceedings of the 2008 ACM SIGGRAPH symposium on Video games - Sandbox '08","978-1-60558-173-6","","10.1145/1401843.1401845","http://portal.acm.org/citation.cfm?doid=1401843.1401845","","2008","2020-11-10 15:39:27","2020-11-10 15:39:27","2020-11-10 15:39:27","7","","","","","","","","","","","ACM Press","Los Angeles, California","en","","","","","DOI.org (Crossref)","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/IZQPG3WM/Salge et al. - 2008 - Using genetically optimized artificial intelligenc.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the 2008 ACM SIGGRAPH symposium","","","","","","","","","","","","","","",""
"QWQ4AELM","webpage","2011","Farid, Adil","An Overview of Game Testing Techniques","","","","","/paper/An-Overview-of-Game-Testing-Techniques-Farid/4361a1882ca8ea296ff6411dbbaa90ca5fbc3ed4","The purpose of this paper is to analyze in general the process of testing, developing video games, and describe in more detail all the aspects of the test phases in a game development process. The game industry has grown significantly in the last decade and many companies have started to use software engineering techniques in the game development process. In game development process the development team is divided into small teams that manage separate aspects of a game. All developing processes and products are subjected to test, for validation and verification. Modern software testing techniques can be easily used in game development as well, however it is not easy to test a game due to its complexity, but customers and managers are putting hard constraints on a game quality more and more frequently. Effective testing techniques can reduce the testing time and improve game quality and production time.","2011","2020-11-10 15:39:38","2020-11-10 15:39:38","2020-11-10 15:39:38","","","","","","","","","","","","","","en","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/5L33JSQN/4361a1882ca8ea296ff6411dbbaa90ca5fbc3ed4.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"P98UXNWY","blogPost","2011","Darci","Testing Video Games Can’t Possibly Be Harder Than an Afternoon With Xbox, Right?","Just Darci","","","","http://justdarci.com/?p=10","","2011-04-30","2020-11-10 15:39:41","2020-11-10 15:39:41","2020-11-10 15:39:41","","","","","","","","","","","","","","en-US","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/CVQY4X3B/justdarci.com.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"C66AH5SE","webpage","","Yarwood, Jack","A look at how different-sized studios approach the challenges of QA","","","","","/view/news/359240/A_look_at_how_differentsized_studios_approach_the_challenges_of_QA.php","We speak to experts from small, medium, and larger game companies to find out how they handle the oft-under-appreciated discipline of quality assurance.","","2020-11-10 15:39:44","2020-11-10 15:39:44","2020-11-10 15:39:44","","","","","","","","","","","","","","en","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/LCWX57XD/A_look_at_how_differentsized_studios_approach_the_challenges_of_QA.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GBBZ57N2","journalArticle","2018","Garca-Snchez, Pablo; Tonda, Alberto; Mora, Antonio M.; Squillero, Giovanni; Merelo, Juan Julin","Automated playtesting in collectible card games using evolutionary algorithms","Knowledge-Based Systems","","0950-7051","10.1016/j.knosys.2018.04.030","http://doi.org/10.1016/j.knosys.2018.04.030","Collectible card games have been among the most popular and profitable products of the entertainment industry since the early days of Magic: The GatheringTM in the nineties. Digital versions have also appeared, with HearthStone: Heroes of WarCraftTM being one of the most popular. In Hearthstone, every player can play as a hero, from a set of nine, and build his/her deck before the game from a big pool of available cards, including both neutral and hero-specific cards. This kind of games offers several challenges for researchers in artificial intelligence since they involve hidden information, unpredictable behaviour, and a large and rugged search space. Besides, an important part of player engagement in such games is a periodical input of new cards in the system, which mainly opens the door to new strategies for the players. Playtesting is the method used to check the new card sets for possible design flaws, and it is usually performed manually or via exhaustive search; in the case of Hearthstone, such test plays must take into account the chosen hero, with its specific kind of cards. In this paper, we present a novel idea to improve and accelerate the playtesting process, systematically exploring the space of possible decks using an Evolutionary Algorithm (EA). This EA creates HearthStone decks which are then played by an AI versus established human-designed decks. Since the space of possible combinations that are play-tested is huge, search through the space of possible decks has been shortened via a new heuristic mutation operator, which is based on the behaviour of human players modifying their decks. Results show the viability of our method for exploring the space of possible decks and automating the play-testing phase of game design. The resulting decks, that have been examined for balancedness by an expert player, outperform human-made ones when played by the AI; the introduction of the new heuristic operator helps to improve the obtained solutions, and basing the study on the whole set of heroes shows its validity through the whole range of decks.","2018-08-01","2020-11-10 15:41:08","2020-11-10 15:41:08","2020-11-10 15:41:08","133–146","","C","153","","Know.-Based Syst.","","","","","","","","","","","","","August 2018","","","","","","","Artificial intelligence; Genetic algorithm; Collectible card games; Hearthstone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U2FHUQGW","conferencePaper","2013","Tan, Tse Guan; Yong, Yung Nan; Chin, Kim On; Teo, Jason; Alfred, Rayner","Automated Evaluation for AI Controllers in Tower Defense Game Using Genetic Algorithm","Soft Computing Applications and Intelligent Systems","978-3-642-40567-9","","10.1007/978-3-642-40567-9_12","","This paper presents the research result of implementing evolutionary algorithms towards computational intelligence in Tower Defense game (TD game). TD game is a game where player(s) need to build tower to prevent the creeps from reaching their based. Penalty will be given if player losses any creeps during gameplays. It is a suitable test bed for planning, designing, implementing and testing either new or modified AI techniques due to the complexity and dynamicity of the game. In this research, Genetic Algorithm (GA) will be implemented to the game with two different neural networks: (1) Feed- forward (FFNN) and (2) Elman Recurrent (ERNN) used as tuner of the weights. ANN will determine the placement of the towers and the fitness score will be calculated at the end of each game. As a result, it is proven that the implementation of GA towards FFNN is better compared to GA towards ERNN.","2013","2020-11-10 15:41:54","2020-11-10 15:41:54","","135-146","","","","","","","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/NTNLBDX6/Tan et al. - 2013 - Automated Evaluation for AI Controllers in Tower D.pdf","","","Artificial Intelligence (AI); Artificial Neural-Network (ANN); Elman Recurrent Neural Network (ERNN); Feedforward Neural Network (FFNN); Genetic Algorithm (GA); Strategy Games; Tower Defense game (TD game)","Noah, Shahrul Azman; Abdullah, Azizi; Arshad, Haslina; Abu Bakar, Azuraliza; Othman, Zulaiha Ali; Sahran, Shahnorbanun; Omar, Nazlia; Othman, Zalinda","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IBJ8EEZ5","conferencePaper","2013","Shaker, Mohammad; Shaker, Noor; Togelius, Julian","Evolving playable content for cut the rope through a simulation-based approach","Proceedings of the Ninth AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment","978-1-57735-607-3","","","","In order to automatically generate high-quality game levels, one needs to be able to automatically verify that the levels are playable. The simulation-based approach to playability testing uses an artificial agent to play through the level, but building such an agent is not always an easy task and such an agent is not always readily available. We discuss this problem in the context of the physics-based puzzle game Cut the Rope, which features continuous time and state space, making several approaches such as exhaustive search and reactive agents inefficient. We show that a deliberative Prolog-based agent can be used to suggest all sensible moves at each state, which allows us to restrict the search space so that depth-first search for solutions become viable. This agent is successfully used to test playability in Ropossum, a level generator based on grammatical evolution. The method proposed in this paper is likely to be useful for a large variety of games with similar characteristics.","2013-10-14","2020-11-10 15:43:31","2020-11-10 15:43:31","2020-11-10","72–78","","","","","","","AIIDE'13","","","","AAAI Press","Boston, MA, USA","","","","","","ACM Digital Library","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"79C3NQSA","journalArticle","2018","Silva, Fernando de Mesentier; Borovikov, Igor; Kolen, John; Aghdaie, Navid; Zaman, Kazi","Exploring Gameplay With AI Agents","arXiv:1811.06962 [cs]","","","","http://arxiv.org/abs/1811.06962","The process of playtesting a game is subjective, expensive and incomplete. In this paper, we present a playtesting approach that explores the game space with automated agents and collects data to answer questions posed by the designers. Rather than have agents interacting with an actual game client, this approach recreates the bare bone mechanics of the game as a separate system. Our agent is able to play in minutes what would take testers days of organic gameplay. The analysis of thousands of game simulations exposed imbalances in game actions, identified inconsequential rewards and evaluated the effectiveness of optional strategic choices. Our test case game, The Sims Mobile, was recently released and the findings shown here influenced design changes that resulted in improved player experience.","2018-11-16","2020-11-10 15:44:16","2020-11-10 15:44:16","2020-11-10 15:44:16","","","","","","","","","","","","","","","","","","","arXiv.org","","arXiv: 1811.06962","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/HNUDHCLS/Silva et al. - 2018 - Exploring Gameplay With AI Agents.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/CI3MMCW5/1811.html","","","Computer Science - Human-Computer Interaction; 68T42; Computer Science - Artificial Intelligence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GNFDKAWN","journalArticle","2019","Hoyt, Andrew; Guzdial, Matthew; Kumar, Yalini; Smith, Gillian; Riedl, Mark O.","Integrating Automated Play in Level Co-Creation","arXiv:1911.09219 [cs]","","","","http://arxiv.org/abs/1911.09219","In level co-creation an AI and human work together to create a video game level. One open challenge in level co-creation is how to empower human users to ensure particular qualities of the final level, such as challenge. There has been significant prior research into automated pathing and automated playtesting for video game levels, but not in how to incorporate these into tools. In this demonstration we present an improvement of the Morai Maker mixed-initiative level editor for Super Mario Bros. that includes automated pathing and challenge approximation features.","2019-11-20","2020-11-10 15:44:56","2020-11-10 15:44:56","2020-11-10 15:44:56","","","","","","","","","","","","","","","","","","","arXiv.org","","arXiv: 1911.09219","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/QXZP7ZWH/Hoyt et al. - 2019 - Integrating Automated Play in Level Co-Creation.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/PJFCJ89S/1911.html","","","Computer Science - Human-Computer Interaction; Computer Science - Artificial Intelligence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7UKFX7RH","conferencePaper","2018","Keehl, O.; Smith, A. M.","Monster Carlo: An MCTS-based Framework for Machine Playtesting Unity Games","2018 IEEE Conference on Computational Intelligence and Games (CIG)","","","10.1109/CIG.2018.8490363","","We describe a Monte Carlo Tree Search (MCTS) powered tool for assessing the impact of various design choices for in-development games built on the Unity platform. MCTS shows promise for playing many games, but the games must be engineered to offer a compatible interface. To circumvent this obstacle, we developed a support library for augmenting Unity games, and Python templates for running machine playtesting experiments. We also propose ways for designers to use this tool to ask and answer designs questions. To illustrate this, we integrated the library with It's Alive!, a game in development by the authors, and 2D Roguelike, an open source game from the Unity asset store. We demonstrate the tool's ability to answer both game design and player modeling questions; and provide the results of system validation experiments.","2018-08","2020-11-10 15:45:28","2020-11-10 15:45:28","","1-8","","","","","","Monster Carlo","","","","","","","","","","","","IEEE Xplore","","ISSN: 2325-4289","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/9W7U3MTI/8490363.html","","","Artificial intelligence; computer games; Tools; Games; Monte Carlo methods; tree searching; game design; Two dimensional displays; Engines; 2D Roguelike; game theory; in-development games; interface; Libraries; machine playtesting; machine playtesting Unity games; MCTS; MCTS-based framework; monster Carlo; Monte Carlo tree search powered tool; open source game; player modeling questions; Python templates; restricted play; support library; Unity; Unity asset store; Unity platform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2018 IEEE Conference on Computational Intelligence and Games (CIG)","","","","","","","","","","","","","","",""
"G3AHTQ32","journalArticle","2019","Zook, Alexander; Harrison, Brent; Riedl, Mark O.","Monte-Carlo Tree Search for Simulation-based Strategy Analysis","arXiv:1908.01423 [cs]","","","","http://arxiv.org/abs/1908.01423","Games are often designed to shape player behavior in a desired way; however, it can be unclear how design decisions affect the space of behaviors in a game. Designers usually explore this space through human playtesting, which can be time-consuming and of limited effectiveness in exhausting the space of possible behaviors. In this paper, we propose the use of automated planning agents to simulate humans of varying skill levels to generate game playthroughs. Metrics can then be gathered from these playthroughs to evaluate the current game design and identify its potential flaws. We demonstrate this technique in two games: the popular word game Scrabble and a collectible card game of our own design named Cardonomicon. Using these case studies, we show how using simulated agents to model humans of varying skill levels allows us to extract metrics to describe game balance (in the case of Scrabble) and highlight potential design flaws (in the case of Cardonomicon).","2019-08-04","2020-11-10 15:45:58","2020-11-10 15:45:58","2020-11-10 15:45:58","","","","","","","","","","","","","","","","","","","arXiv.org","","arXiv: 1908.01423","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/3SAX5SMY/Zook et al. - 2019 - Monte-Carlo Tree Search for Simulation-based Strat.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/33MRZLWF/1908.html","","","Computer Science - Artificial Intelligence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XXEHWA8X","journalArticle","2018","Isaksen, A.; Gopstein, D.; Togelius, J.; Nealen, A.","Exploring Game Space of Minimal Action Games via Parameter Tuning and Survival Analysis","IEEE Transactions on Games","","2475-1510","10.1109/TCIAIG.2017.2750181","","Game designers can use computer-aided game design methods to model how players may experience the perceived difficulty of a game. We present methods to generate and analyze the difficulty of a wide variety of minimal action game variants throughout game space, where each point in this abstract design space represents a unique game variant. Focusing on a parameterized version of Flappy Bird, we predict hazard rates and difficulty curves using automatic playtesting, Monte Carlo simulation, a player model based on human motor skills (precision and actions per second), and survival analysis of score histograms. We demonstrate our techniques using simulated game play and actual game data from over 106 million play sessions of a popular online Flappy Bird variant, showing quantitative reasons why balancing a game for a wide range of player skill can be difficult. Some applications of our techniques include searching for a specific difficulty, game space visualization, computational creativity to find unique variants, and tuning game balance to adjust the difficulty curve even when game parameters are time varying, score dependent, or changing based on game progress.","2018-06","2020-11-10 15:46:22","2020-11-10 15:46:22","","182-194","","2","10","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Games","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/5EA24YPZ/8030128.html","","","computer games; Analytical models; Games; Monte Carlo methods; Mathematical model; Space exploration; abstract design space; actual game data; Automated playtesting; automatic playtesting; Birds; computer-aided game design; difficulty curve; Flappy Bird; game balance tuning; game design methods; game parameters; game space visualization; hazard rates; Hazards; human motor skills; Measurement; minimal action game variants; Monte Carlo simulation; online Flappy Bird variant; parameter tuning; player model; player modeling; player skill; simulated game play; survival analysis; unique game variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UI7L7DYB","conferencePaper","2018","Machado, T.; Gopstein, D.; Nealen, A.; Nov, O.; Togelius, J.","AI-Assisted Game Debugging with Cicero","2018 IEEE Congress on Evolutionary Computation (CEC)","","","10.1109/CEC.2018.8477829","","We present Cicero, a mixed-initiative application for prototyping two-dimensional sprite-based games across different genres such as shooters, puzzles, and action games. Cicero provides a host of features which can offer assistance in different stages of the game development process. Noteworthy features include AI agents for gameplay simulation, a game mechanics recommender system, a playtrace aggregator, heatmap-based game analysis, a sequential replay mechanism, and a query system that allows searching for particular interaction patterns. In order to evaluate the efficacy and usefulness of the different features of Cicero, we conducted a user study in which we compared how users perform in game debugging tasks with different kinds of assistance.","2018-07","2020-11-10 15:46:51","2020-11-10 15:46:51","","1-8","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/GHKL6XPZ/Machado et al. - 2018 - AI-Assisted Game Debugging with Cicero.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/6WLJ4X6V/8477829.html","","","Artificial intelligence; computer games; Tools; Games; software agents; action games; AI agents; AI for Games; AI-assisted game debugging tasks; AI-Assisted Game Design Tools; Cicero; Data visualization; Debugging; Design tools; Game Debugging; Game Design; game development process; game mechanics recommender system; Game Prototyping; gameplay simulation; heatmap-based game analysis; human computer interaction; interaction patterns; mixed-initiative application; playtrace aggregator; program debugging; query processing; query system; recommender systems; sequential replay mechanism; Task analysis; two-dimensional sprite-based games","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2018 IEEE Congress on Evolutionary Computation (CEC)","","","","","","","","","","","","","","",""
"K7E3TCBG","journalArticle","2018","Zhan, Zeping; Aytemiz, Batu; Smith, Adam M.","Taking the Scenic Route: Automatic Exploration for Videogames","arXiv:1812.03125 [cs]","","","","http://arxiv.org/abs/1812.03125","Machine playtesting tools and game moment search engines require exposure to the diversity of a game's state space if they are to report on or index the most interesting moments of possible play. Meanwhile, mobile app distribution services would like to quickly determine if a freshly-uploaded game is fit to be published. Having access to a semantic map of reachable states in the game would enable efficient inference in these applications. However, human gameplay data is expensive to acquire relative to the coverage of a game that it provides. We show that off-the-shelf automatic exploration strategies can explore with an effectiveness comparable to human gameplay on the same timescale. We contribute generic methods for quantifying exploration quality as a function of time and demonstrate our metric on several elementary techniques and human players on a collection of commercial games sampled from multiple game platforms (from Atari 2600 to Nintendo 64). Emphasizing the diversity of states reached and the semantic map extracted, this work makes productive contrast with the focus on finding a behavior policy or optimizing game score used in most automatic game playing research.","2018-12-07","2020-11-10 15:47:19","2020-11-10 15:47:19","2020-11-10 15:47:19","","","","","","","Taking the Scenic Route","","","","","","","","","","","","arXiv.org","","arXiv: 1812.03125","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/IGHI7Y5B/Zhan et al. - 2018 - Taking the Scenic Route Automatic Exploration for.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/3LX4GHG9/1812.html","","","Computer Science - Human-Computer Interaction; Computer Science - Artificial Intelligence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"59RJ3WEK","conferencePaper","2019","Chang, K.; Aytemiz, B.; Smith, A. M.","Reveal-More: Amplifying Human Effort in Quality Assurance Testing Using Automated Exploration","2019 IEEE Conference on Games (CoG)","","","10.1109/CIG.2019.8848091","","Attempting to maximize coverage of a game via human gameplay is laborious and repetitive, introducing delays in the development process. Despite the importance of quality assurance (QA) testing, QA remains an underinvested area in the technical games research community. In this paper, we show that relatively simple automatic exploration techniques can be used to multiplicatively amplify coverage of a game starting from human tester data. Instead of attempting to displace human QA efforts, we seek to grow the impact that a human tester can make. Experiments with two games for the Super Nintendo Entertainment System highlight the qualitative and quantitative differences between isolated human and machine play compared to our hybrid approach called Reveal-More. We contribute a QA testing workflow that scales with the amount of human and machine time allocated to the effort.","2019-08","2020-11-10 15:47:34","2020-11-10 15:47:34","","1-8","","","","","","Reveal-More","","","","","","","","","","","","IEEE Xplore","","ISSN: 2325-4289","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/QFN8PYXC/8848091.html","","","Artificial intelligence; program testing; computer games; Software; Testing; Tools; Games; Quality assurance; software quality; Automation; amplifying human effort; automated exploration; automatic exploration techniques; human gameplay; human machine time; human QA efforts; human tester data; isolated human machine play; multiplicatively amplify coverage; QA testing workflow; qualitative differences; quality assurance testing; quantitative differences; social aspects of automation; Super Nintendo Entertainment System highlight; technical games research community; underinvested area","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2019 IEEE Conference on Games (CoG)","","","","","","","","","","","","","","",""
"7H2FHINY","conferencePaper","2014","Tremblay, J.; Torres, P. A.; Verbrugge, C.","An algorithmic approach to analyzing combat and stealth games","2014 IEEE Conference on Computational Intelligence and Games","","","10.1109/CIG.2014.6932898","","Combat and stealth games give players the option of engaging or avoiding enemy agents at different points. Level-design in this context is complex, however, requiring a designer to understand how different design choices impact difficulty under multiple play-styles. In this work we describe a unified algorithmic approach that can perform abstract analysis of both combat and stealth behaviours. Our proposed solution builds on an existing stealth-level analysis tool, incorporating combat activities into the abstraction in order to allow exploration of level feasibility and difficulty. We demonstrate our approach on a non-trivial example level, showing how such a tool can be used to evaluate and control the player experience.","2014-08","2020-11-10 15:47:53","2020-11-10 15:47:53","","1-8","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2325-4289","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/DR5GGJQT/Tremblay et al. - 2014 - An algorithmic approach to analyzing combat and st.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/ZBTM5KI5/6932898.html","","","computer games; Data mining; Games; multi-agent systems; Data visualization; Three-dimensional displays; abstract analysis; behavioural sciences; combat activities; combat behaviours; combat games; Computational modeling; Data structures; design choices; enemy agents; Heating; level difficulty; level feasibility; level-design; play-styles; player experience; stealth behaviours; stealth games; stealth-level analysis tool; unified algorithmic approach","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE Conference on Computational Intelligence and Games","","","","","","","","","","","","","","",""
"NHUA98RW","conferencePaper","2017","Pfau, Johannes; Smeddinck, Jan David; Malaka, Rainer","Automated Game Testing with ICARUS: Intelligent Completion of Adventure Riddles via Unsupervised Solving","Extended Abstracts Publication of the Annual Symposium on Computer-Human Interaction in Play","978-1-4503-5111-9","","10.1145/3130859.3131439","http://doi.org/10.1145/3130859.3131439","With ICARUS, we introduce a framework for autonomous video game playing, testing, and bug reporting. We report on the design rationale, the practical implementation, and its use in game development industry projects. The underlying solving mechanic is based on discrete reinforcement learning in a dualistic fashion, encompassing volatile short-term memory as well as persistent long-term memory that spans across distinct game iterations. In combination with heuristics that reduce the search space and the possibility to employ pre-defined situation-dependent action choices, the system manages to traverse complete playthrough iterations in roughly the same amount of time that a professional game tester requires for a speedrun. The ICARUS project was developed at Daedalic Entertainment. The software can be used to generically run all adventure games built with the popular Visionaire Engine and is currently used for evaluating daily builds, for large-scale hardware compatibility and performance tests, as well as for semi-supervised quality assurance playthroughs. The supplementary video depicts real-time solving with active control and observation via a web control panel.","2017-10-15","2020-11-10 15:54:17","2020-11-10 15:54:17","2020-11-10","153–164","","","","","","Automated Game Testing with ICARUS","CHI PLAY '17 Extended Abstracts","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/PH23QD43/Pfau et al. - 2017 - Automated Game Testing with ICARUS Intelligent Co.pdf","","","automated game testing; quality assurance; reinforcement learning; automated bug reporting; continuous integration testing; continuous performance analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2JUZJ4LZ","journalArticle","2020","Napolitano, Nicholas","Testing match-3 video games with Deep Reinforcement Learning","arXiv:2007.01137 [cs, stat]","","","","http://arxiv.org/abs/2007.01137","Testing a video game is a critical step for the production process and requires a great effort in terms of time and resources spent. Some software houses are trying to use the artificial intelligence to reduce the need of human resources using systems able to replace a human agent. We study the possibility to use the Deep Reinforcement Learning to automate the testing process in match-3 video games and suggest to approach the problem in the framework of a Dueling Deep Q-Network paradigm. We test this kind of network on the Jelly Juice game, a match-3 video game developed by the redBit Games. The network extracts the essential information from the game environment and infers the next move. We compare the results with the random player performance, finding that the network shows a highest success rate. The results are in most cases similar with those obtained by real users, and the network also succeeds in learning over time the different features that distinguish the game levels and adapts its strategy to the increasing difficulties.","2020-06-30","2020-11-10 15:54:46","2020-11-10 15:54:46","2020-11-10 15:54:46","","","","","","","","","","","","","","","","","","","arXiv.org","","arXiv: 2007.01137","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/7VWKZRFU/Napolitano - 2020 - Testing match-3 video games with Deep Reinforcemen.pdf","","","Computer Science - Machine Learning; Statistics - Machine Learning; Computer Science - Software Engineering; Computer Science - Artificial Intelligence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"P7XJ2IAU","conferencePaper","2020","Bergdahl, Joakim; Gordillo, Camilo; Tollmar, Konrad; Gisslen, Linus","Augmenting Automated Game Testing with Deep Reinforcement Learning","2020 IEEE Conference on Games (CoG)","978-1-72814-533-4","","10.1109/CoG47356.2020.9231552","https://ieeexplore.ieee.org/document/9231552/","General game testing relies on the use of human play testers, play test scripting, and prior knowledge of areas of interest to produce relevant test data. Using deep reinforcement learning (DRL), we introduce a self-learning mechanism to the game testing framework. With DRL, the framework is capable of exploring and/or exploiting the game mechanics based on a user-deﬁned, reinforcing reward signal. As a result, test coverage is increased and unintended game play mechanics, exploits and bugs are discovered in a multitude of game types. In this paper, we show that DRL can be used to increase test coverage, ﬁnd exploits, test map difﬁculty, and to detect common problems that arise in the testing of ﬁrst-person shooter (FPS) games.","2020-08","2020-11-10 15:55:29","2020-11-10 15:55:29","2020-11-10 15:55:29","600-603","","","","","","","","","","","IEEE","Osaka, Japan","en","","","","","DOI.org (Crossref)","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/3AJSDEWL/Bergdahl et al. - 2020 - Augmenting Automated Game Testing with Deep Reinfo.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2020 IEEE Conference on Games (CoG)","","","","","","","","","","","","","","",""
"TN5X6U9K","journalArticle","2020","Shin, Y.; Kim, J.; Jin, K.; Kim, Y. B.","Playtesting in Match 3 Game Using Strategic Plays via Reinforcement Learning","IEEE Access","","2169-3536","10.1109/ACCESS.2020.2980380","","Playtesting is a lifecycle phase in game development wherein the completeness and smooth progress of planned content are verified before release of a new game. Although studies on playtesting in Match 3 games have attempted to utilize Monte Carlo tree search (MCTS) and convolutional neural networks (CNNs), the applicability of these methods are limited because the associated training is time-consuming and data collection is difficult. To address this problem, game playtesting was performed via learning based on strategic play in Match 3 games. Five strategic plays were defined in the Match 3 game under consideration and game playtesting was performed for each situation via reinforcement learning. The proposed agent performed within a 5% margin of human performance on the most complex mission in the experiment. We demonstrate that it is possible for the level designer to measure the difficulty of the level via playtesting various missions. This study also provides level testing standards for several types of missions in Match 3 games.","2020","2020-11-10 15:55:56","2020-11-10 15:55:56","","51593-51600","","","8","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Access","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/SZDT243T/Shin et al. - 2020 - Playtesting in Match 3 Game Using Strategic Plays .pdf","","","artificial intelligence; learning (artificial intelligence); Learning (artificial intelligence); software engineering; computer games; Games; Monte Carlo methods; tree searching; game development; playtesting; reinforcement learning; Automation; MCTS; Actor-critic; agent; CNN; Color; convolutional neural nets; convolutional neural networks; Convolutional neural networks; game mission; game playtesting; game strategy; level designer; level testing standards; Licenses; lifecycle phase; match 3; Match 3 game; Monte Carlo tree search; strategic play","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"A2IDGPPZ","conferencePaper","2017","Silva, Fernando De Mesentier; Lee, Scott; Togelius, Julian; Nealen, Andy","AI as evaluator: Search driven playtesting of modern board games","WS-17-01: Artificial Intelligence and Operations Research for Social Good; WS-17-02: Artificial Intelligence, Ethics, and Society; WS-17-03: Artificial Intelligence for Connected and Automated Vehicles; WS-17-04: Artificial Intelligence for Cyber Security; WS-17-05: Artificial Intelligence for Smart Grids and Buildings; WS-17-06: Computer Poker and Imperfect Information Games; WS-17-07: Crowdsourcing, Deep Learning and Artificial Intelligence Agents; WS-17-08: Distributed Machine Learning; WS-17-09: Joint Workshop on Health Intelligence; WS-17-10: Human-Aware Artificial Intelligence; WS-17-11: Human-Machine Collaborative Learning; WS-17-12: Knowledge-Based Techniques for Problem Solving and Reasoning; WS-17-13: Plan, Activity, and Intent Recognition; WS-17-14: Symbolic Inference and Optimization; WS-17-15: What's Next for AI in Games?","","","","https://nyuscholars.nyu.edu/en/publications/ai-as-evaluator-search-driven-playtesting-of-modern-board-games","","2017","2020-11-10 15:57:36","2020-11-10 15:57:36","2020-11-10 15:57:36","959-966","","","","","","AI as evaluator","","","","","AI Access Foundation","","English (US)","","","","","nyuscholars.nyu.edu","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/MQ3BEXTW/ai-as-evaluator-search-driven-playtesting-of-modern-board-games.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","31st AAAI Conference on Artificial Intelligence, AAAI 2017","","","","","","","","","","","","","","",""
"VREK2FEU","conferencePaper","2017","de Mesentier Silva, Fernando; Lee, Scott; Togelius, Julian; Nealen, Andy","AI-based playtesting of contemporary board games","Proceedings of the 12th International Conference on the Foundations of Digital Games","978-1-4503-5319-9","","10.1145/3102071.3102105","http://doi.org/10.1145/3102071.3102105","Ticket to Ride is a popular contemporary board game for two to four players, featuring a number of expansions with additional maps and tweaks to the core game mechanics. In this paper, four different game-playing agents that embody different playing styles are defined and used to analyze Ticket to Ride. Different playing styles are shown to be effective depending on the map and rule variation, and also depending on how many players play the game. The performance profiles of the different agents can be used to characterize maps and identify the most similar maps in the space of playstyles. Further analysis of the automatically played games reveal which cities on the map are most desirable, and that the relative attractiveness of cities is remarkably consistent across numbers of players. Finally, the automated analysis also reveals two classes of failures states, where the agents find states which are not covered by the game rules; this is akin to finding bugs in the rules. We see the analysis performed here as a possible template for AI-based playtesting of contemporary board games.","2017-08-14","2020-11-10 15:57:59","2020-11-10 15:57:59","2020-11-10","1–10","","","","","","","FDG '17","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/KDYLFZE2/de Mesentier Silva et al. - 2017 - AI-based playtesting of contemporary board games.pdf","","","artificial intelligence; playtesting; board games; contemporary board games; ticket to ride","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M3C389N2","conferencePaper","2012","Jaffe, Alexander; Miller, Alex; Andersen, Erik; Liu, Yun-En; Karlin, Anna; Popović, Zoran","Evaluating competitive game balance with restricted play","Proceedings of the Eighth AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment","","","","","Game balancing is the fine-tuning phase in which a functioning game is adjusted to be deep, fair, and interesting. Balancing is difficult and time-consuming, as designers must repeatedly tweak parameters, and run lengthy playtests to evaluate the effects of these changes. If designers could receive immediate feedback on their designs, they could explore a vast space of variations, and select only the most promising games for playtesting. Such automated design feedback has been difficult to achieve, as there is no mathematical formulation of game balance that unifies many of its forms. We argue for a formulation in which carefully restricted agents are played against standard agents. We develop this restricted-play balance framework, and evaluate its utility by building a tool capable of calculating measures of balance for a large family of games. By applying this tool to an educational card game, we demonstrate how the framework and tool allow designers to rapidly evaluate and iterate on the balance of their games.","2012-10-08","2020-11-10 15:58:23","2020-11-10 15:58:23","2020-11-10","26–31","","","","","","","AIIDE'12","","","","AAAI Press","Stanford, California, USA","","","","","","ACM Digital Library","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WHCVC6RN","conferencePaper","2005","Southey, Finnegan; Xiao, Gang; Holte, Robert C.; Trommelen, Mark; Buchanan, John","Semi-automated gameplay analysis by machine learning","Proceedings of the First AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment","","","","","While presentation aspects like graphics and sound are important to a successful commercial game, it is likewise important that the gameplay, the non-presentational behaviour of the game, is engaging to the player. Considerable effort is invested in testing and refining gameplay throughout the development process. We present an overall view of the game-play management problem and, more concretely, our recent research on the gameplay analysis part of this task. This consists of an active learning methodology, implemented in software tools, for largely automating the analysis of game behaviour in order to augment the abilities of game designers. The SAGA-ML (semi-automated gameplay analysis by machine learning) system is demonstrated in a real commercial context, Electronic Arts' FIFA'99 Soccer title, where it has identified exploitable weaknesses in the game that allow easy scoring by players.","2005-06-01","2020-11-10 16:01:06","2020-11-10 16:01:06","2020-11-10","123–128","","","","","","","AIIDE'05","","","","AAAI Press","Marina del Rey, California","","","","","","ACM Digital Library","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"N9NWQR88","journalArticle","2019","Zook, Alexander; Fruchter, Eric; Riedl, Mark O.","Automatic Playtesting for Game Parameter Tuning via Active Learning","arXiv:1908.01417 [cs]","","","","http://arxiv.org/abs/1908.01417","Game designers use human playtesting to gather feedback about game design elements when iteratively improving a game. Playtesting, however, is expensive: human testers must be recruited, playtest results must be aggregated and interpreted, and changes to game designs must be extrapolated from these results. Can automated methods reduce this expense? We show how active learning techniques can formalize and automate a subset of playtesting goals. Specifically, we focus on the low-level parameter tuning required to balance a game once the mechanics have been chosen. Through a case study on a shoot-`em-up game we demonstrate the efficacy of active learning to reduce the amount of playtesting needed to choose the optimal set of game parameters for two classes of (formal) design objectives. This work opens the potential for additional methods to reduce the human burden of performing playtesting for a variety of relevant design concerns.","2019-08-04","2020-11-10 16:01:33","2020-11-10 16:01:33","2020-11-10 16:01:33","","","","","","","","","","","","","","","","","","","arXiv.org","","arXiv: 1908.01417","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/ECZDQ99D/Zook et al. - 2019 - Automatic Playtesting for Game Parameter Tuning vi.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/QWQWAQ6H/1908.html","","","Computer Science - Artificial Intelligence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2IV39BFV","journalArticle","2020","Zhao, Yunqi; Borovikov, Igor; Silva, Fernando de Mesentier; Beirami, Ahmad; Rupert, Jason; Somers, Caedmon; Harder, Jesse; Kolen, John; Pinto, Jervis; Pourabolghasem, Reza; Pestrak, James; Chaput, Harold; Sardari, Mohsen; Lin, Long; Narravula, Sundeep; Aghdaie, Navid; Zaman, Kazi","Winning Isn't Everything: Enhancing Game Development with Intelligent Agents","arXiv:1903.10545 [cs]","","","","http://arxiv.org/abs/1903.10545","Recently, there have been several high-profile achievements of agents learning to play games against humans and beat them. In this paper, we study the problem of training intelligent agents in service of game development. Unlike the agents built to ""beat the game"", our agents aim to produce human-like behavior to help with game evaluation and balancing. We discuss two fundamental metrics based on which we measure the human-likeness of agents, namely skill and style, which are multi-faceted concepts with practical implications outlined in this paper. We report four case studies in which the style and skill requirements inform the choice of algorithms and metrics used to train agents; ranging from A* search to state-of-the-art deep reinforcement learning. We, further, show that the learning potential of state-of-the-art deep RL models does not seamlessly transfer from the benchmark environments to target ones without heavily tuning their hyperparameters, leading to linear scaling of the engineering efforts and computational cost with the number of target domains.","2020-04-27","2020-11-10 16:01:50","2020-11-10 16:01:50","2020-11-10 16:01:50","","","","","","","Winning Isn't Everything","","","","","","","","","","","","arXiv.org","","arXiv: 1903.10545","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/2CP2D3RT/Zhao et al. - 2020 - Winning Isn't Everything Enhancing Game Developme.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/2MBDHR9R/1903.html","","","Computer Science - Machine Learning; Computer Science - Artificial Intelligence; Computer Science - Multiagent Systems; Computer Science - Neural and Evolutionary Computing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7JE6RUBJ","journalArticle","","Southey, Finnegan; Holte, Robert; Xiao, Gang; Trommelen, Mark; Buchanan, John","Machine Learning for Semi-Automated Gameplay Analysis","","","","","","Compelling gameplay requires constant testing and refinement during the development process, amounting to a considerable investment in time and energy. This article presents an approach to gameplay analysis intended to support and augment the work of game designers, collecting and summarizing gameplay information from the game engine so designers can quickly evaluate the behaviour to make decisions. Using readily available machine learning technologies, a reusable tool has been constructed that can repeatedly choose scenarios to examine, run them through the game engine, and then construct concise and informative summaries of the engine's behaviour for designers. Based on the past scenarios, new scenarios are intelligently chosen to verify uncertain conclusions and refine the analysis. Game designers can examine the summaries produced by the analyzer, typically with a secondary visualization tool, providing the essential human judgement on what constitutes reasonable and entertaining behaviour. The inevitable role of the designer is why we use the term `semi-automated'. The analysis tool, SAGA-ML (Semi-Automated Gampeplay Analysis by Machine Learning), is based on machine learning research known as 'active learning', and has been used to evaluate Electronic Arts' FIFA'99 soccer game, uncovering some interesting anomalies in gameplay. With only minor changes, the tool was interfaced to FIFA 2004, and plays an active, in-house role in the development and testing of the FIFA series. While designed and developed in this context, the analysis tool is general purpose, requiring only a thin interface layer to be written to connect to different game engines. For the specific case of FIFA, a visualization tool, SoccerViz, has also been developed. SAGA-ML and SoccerViz were designed and developed by the University of Alberta GAMES group in cooperation with Electronic Arts.","","2020-11-10 16:02:39","2020-11-10 16:02:39","","16","","","","","","","","","","","","","en","","","","","Zotero","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/7CIKAL93/Southey et al. - Machine Learning for Semi-Automated Gameplay Analy.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RAGWM3VU","conferencePaper","2020","Pfau, J.; Liapis, A.; Volkmar, G.; Yannakakis, G. N.; Malaka, R.","Dungeons Replicants: Automated Game Balancing via Deep Player Behavior Modeling","2020 IEEE Conference on Games (CoG)","","","10.1109/CoG47356.2020.9231958","","Balancing the options available to players in a way that ensures rich variety and viability is a vital factor for the success of any video game, and particularly competitive multiplayer games. Traditionally, this balancing act requires extensive periods of expert analysis, play testing and debates. While automated gameplay is able to predict outcomes of parameter changes, current approaches mainly rely on heuristic or optimal strategies to generate agent behavior. In this paper, we demonstrate the use of deep player behavior models to represent a player population (n = 213) of the massively multiplayer online role-playing game Aion, which are used, in turn, to generate individual agent behaviors. Results demonstrate significant balance differences in opposing enemy encounters and show how these can be regulated. Moreover, the analytic methods proposed are applied to identify the balance relationships between classes when fighting against each other, reflecting the original developers’ design.","2020-08","2020-11-10 16:02:57","2020-11-10 16:02:57","","431-438","","","","","","Dungeons Replicants","","","","","","","","","","","","IEEE Xplore","","ISSN: 2325-4289","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/RRNQY3AG/Pfau et al. - Dungeons & Replicants Automated Game Balancing vi.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/FMAJRAJZ/9231958.html","","","video games; Automated game testing; balancing; deep learning; generative player modeling; imitation learning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2020 IEEE Conference on Games (CoG)","","","","","","","","","","","","","","",""
"QEGIYPHW","conferencePaper","2018","Gudmundsson, S. F.; Eisen, P.; Poromaa, E.; Nodet, A.; Purmonen, S.; Kozakowski, B.; Meurling, R.; Cao, L.","Human-Like Playtesting with Deep Learning","2018 IEEE Conference on Computational Intelligence and Games (CIG)","","","10.1109/CIG.2018.8490442","","We present an approach to learn and deploy human-like playtesting in computer games based on deep learning from player data. We are able to learn and predict the most ""human"" action in a given position through supervised learning on a convolutional neural network. Furthermore, we show how we can use the learned network to predict key metrics of new content - most notably the difficulty of levels. Our player data and empirical data come from Candy Crush Saga (CCS) and Candy Crush Soda Saga (CCSS). However, the method is general and well suited for many games, in particular where content creation is sequential. CCS and CCSS are non-deterministic match-3 puzzle games with multiple game modes spread over a few thousand levels, providing a diverse testbed for this technique. Compared to Monte Carlo Tree Search (MCTS) we show that this approach increases correlation with average level difficulty, giving more accurate predictions as well as requiring only a fraction of the computation time.","2018-08","2020-11-10 16:04:45","2020-11-10 16:04:45","","1-8","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2325-4289","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/TLIA4AMM/8490442.html","","","learning (artificial intelligence); Machine learning; computer games; Games; Monte Carlo methods; tree searching; playtesting; deep learning; MCTS; Measurement; Convolutional neural networks; agent simulation; Candy Crush Saga; Candy Crush Soda Saga; CCS; CCSS; convolution; convolutional neural network; feedforward neural nets; human-like playtesting; monte carlo tree search; Monte-Carlo tree search; nondeterministic match-3 puzzle games; player data; supervised learning; Supervised learning; Training","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2018 IEEE Conference on Computational Intelligence and Games (CIG)","","","","","","","","","","","","","","",""
"JW2XAEXP","journalArticle","","Devlin, Sam; Anspoka, Anastasija; Sephton, Nick; Cowling, Peter I; Rollason, Jeff","Combining Gameplay Data with Monte Carlo Tree Search to Emulate Human Play","","","","","","Monte Carlo Tree Search (MCTS) has become a popular solution for controlling non-player characters. Its use has repeatedly been shown to be capable of creating strong game playing opponents. However, the emergent playstyle of agents using MCTS is not necessarily human-like, believable or enjoyable. AI Factory Spades, currently the top rated Spades game in the Google Play store, uses a variant of MCTS to control non-player characters. In collaboration with the developers, we collected gameplay data from 27,592 games and showed in a previous study that the playstyle of human players signiﬁcantly differed from that of the nonplayer characters. This paper presents a method of biasing MCTS using human gameplay data to create Spades playing agents that emulate human play whilst maintaining a strong, competitive performance. The methods of player modelling and biasing MCTS presented in this study are generally applicable to digital games with discrete actions.","","2020-11-10 16:08:36","2020-11-10 16:08:36","","7","","","","","","","","","","","","","en","","","","","Zotero","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/DGC4BJBP/Devlin et al. - Combining Gameplay Data with Monte Carlo Tree Sear.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8969UUGC","journalArticle","2019","Ariyurek, S.; Betin-Can, A.; Surer, E.","Automated Video Game Testing Using Synthetic and Human-Like Agents","IEEE Transactions on Games","","2475-1510","10.1109/TG.2019.2947597","","We present a new methodology that employs tester agents to automate video game testing. We introduce two types of agents —synthetic and human-like. Our agents are derived from Sarsa and MCTS but focus on finding defects while traditional game-playing agents focus on maximizing game scores. The synthetic agent uses test goals generated from game scenarios, and these goals are further modified to examine the effects of unintended game transitions. The human-like agent uses test goals extracted by our proposed multiple greedy-policy inverse reinforcement learning (MGP-IRL) algorithm from tester trajectories. We use our agents to produce test sequences, and run the game with these sequences. At each run, we use an automated test oracle to check for bugs. We compared the success of human-like and synthetic agents in bug finding, and evaluated the similarity between human-like agents and human testers. We collected 427 trajectories from human testers using the GVG-AI framework and created three testbed games with 12 levels that contain 45 bugs. Our experiments reveal that human-like and synthetic agents compete with human testers. We show that MGP-IRL increases human-likeness of agents while improving the bug finding performance.","2019","2020-11-10 16:09:00","2020-11-10 16:09:00","","1-1","","","","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Games","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/CPKMXRTW/Ariyurek et al. - 2019 - Automated Video Game Testing Using Synthetic and H.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/ABBYZ6MS/8869824.html","","","Testing; Games; Monte Carlo methods; Avatars; Automated Game Testing; Computer bugs; Graph Coverage; Inverse Reinforcement Learning; Monte Carlo Tree Search; Reinforcement Learning; Sprites (computer); Water","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RSMSV6WK","journalArticle","2020","Ariyurek, Sinan; Betin-Can, Aysu; Surer, Elif","Enhancing the Monte Carlo Tree Search Algorithm for Video Game Testing","arXiv:2003.07813 [cs]","","","","http://arxiv.org/abs/2003.07813","In this paper, we study the effects of several Monte Carlo Tree Search (MCTS) modifications for video game testing. Although MCTS modifications are highly studied in game playing, their impacts on finding bugs are blank. We focused on bug finding in our previous study where we introduced synthetic and human-like test goals and we used these test goals in Sarsa and MCTS agents to find bugs. In this study, we extend the MCTS agent with several modifications for game testing purposes. Furthermore, we present a novel tree reuse strategy. We experiment with these modifications by testing them on three testbed games, four levels each, that contain 45 bugs in total. We use the General Video Game Artificial Intelligence (GVG-AI) framework to create the testbed games and collect 427 human tester trajectories using the GVG-AI framework. We analyze the proposed modifications in three parts: we evaluate their effects on bug finding performances of agents, we measure their success under two different computational budgets, and we assess their effects on human-likeness of the human-like agent. Our results show that MCTS modifications improve the bug finding performance of the agents.","2020-03-17","2020-11-10 16:09:23","2020-11-10 16:09:23","2020-11-10 16:09:23","","","","","","","","","","","","","","","","","","","arXiv.org","","arXiv: 2003.07813","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/CSJ797MK/Ariyurek et al. - 2020 - Enhancing the Monte Carlo Tree Search Algorithm fo.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/DGNGFDN5/2003.html","","","Computer Science - Artificial Intelligence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GGLANBAS","journalArticle","2019","Mugrai, Luvneesh; Silva, Fernando de Mesentier; Holmgård, Christoffer; Togelius, Julian","Automated Playtesting of Matching Tile Games","arXiv:1907.06570 [cs]","","","","http://arxiv.org/abs/1907.06570","Matching tile games are an extremely popular game genre. Arguably the most popular iteration, Match-3 games, are simple to understand puzzle games, making them great benchmarks for research. In this paper, we propose developing different procedural personas for Match-3 games in order to approximate different human playstyles to create an automated playtesting system. The procedural personas are realized through evolving the utility function for the Monte Carlo Tree Search agent. We compare the performance and results of the evolution agents with the standard Vanilla Monte Carlo Tree Search implementation as well as to a random move-selection agent. We then observe the impacts on both the game's design and the game design process. Lastly, a user study is performed to compare the agents to human play traces.","2019-07-15","2020-11-10 16:09:42","2020-11-10 16:09:42","2020-11-10 16:09:42","","","","","","","","","","","","","","","","","","","arXiv.org","","arXiv: 1907.06570","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/BT8HY4HH/Mugrai et al. - 2019 - Automated Playtesting of Matching Tile Games.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/CU7WA8QN/1907.html","","","Computer Science - Artificial Intelligence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JST5PBX4","conferencePaper","2019","Stahlke, Samantha .; Nova, Atiya; Mirza-Babaei, Pejman","Artificial Playfulness: A Tool for Automated Agent-Based Playtesting","Extended Abstracts of the 2019 CHI Conference on Human Factors in Computing Systems","978-1-4503-5971-9","","10.1145/3290607.3313039","http://doi.org/10.1145/3290607.3313039","Usertesting is commonly employed in games user research (GUR) to understand the experience of players interacting with digital games. However, recruitment and testing with human users can be laborious and resource-intensive, particularly for independent developers. To help mitigate these obstacles, we are developing a framework for simulated testing sessions with agents driven by artificial intelligence (AI). Specifically, we aim to imitate the navigation of human players in a virtual world. By mimicking the tendency of users to wander, explore, become lost, and so on, these agents may be used to identify basic issues with a game's world and level design, enabling informed iteration earlier in the development process. Here, we detail our progress in developing a framework for configurable agent navigation and simple visualization of simulated data. Ultimately, we hope to provide a basis for the development of a tool for simulation-driven usability testing in games.","2019-05-02","2020-11-10 16:10:04","2020-11-10 16:10:04","2020-11-10","1–6","","","","","","Artificial Playfulness","CHI EA '19","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/XNR8NCTC/Stahlke et al. - 2019 - Artificial Playfulness A Tool for Automated Agent.pdf","","","artificial intelligence; game development; human-computer interaction; playtesting; usertesting","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"544X7FKF","journalArticle","2018","Holmgård, Christoffer; Green, Michael Cerny; Liapis, Antonios; Togelius, Julian","Automated Playtesting with Procedural Personas through MCTS with Evolved Heuristics","arXiv:1802.06881 [cs]","","","","http://arxiv.org/abs/1802.06881","This paper describes a method for generative player modeling and its application to the automatic testing of game content using archetypal player models called procedural personas. Theoretically grounded in psychological decision theory, procedural personas are implemented using a variation of Monte Carlo Tree Search (MCTS) where the node selection criteria are developed using evolutionary computation, replacing the standard UCB1 criterion of MCTS. Using these personas we demonstrate how generative player models can be applied to a varied corpus of game levels and demonstrate how different play styles can be enacted in each level. In short, we use artificially intelligent personas to construct synthetic playtesters. The proposed approach could be used as a tool for automatic play testing when human feedback is not readily available or when quick visualization of potential interactions is necessary. Possible applications include interactive tools during game development or procedural content generation systems where many evaluations must be conducted within a short time span.","2018-02-19","2020-11-10 16:21:16","2020-11-10 16:21:16","2020-11-10 16:21:16","","","","","","","","","","","","","","","","","","","arXiv.org","","arXiv: 1802.06881","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/QHL4JCXM/Holmgård et al. - 2018 - Automated Playtesting with Procedural Personas thr.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/A3GA6J97/1802.html","","","Computer Science - Artificial Intelligence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XK8QNVN7","journalArticle","2018","Horn, Britton; Miller, Josh Aaron; Smith, Gillian; Cooper, Seth","A Monte Carlo Approach to Skill-Based Automated Playtesting","Proceedings. AAAI Artificial Intelligence and Interactive Digital Entertainment Conference","","2326-909X","","https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6319931/","In order to create well-crafted learning progressions, designers guide players as they present game skills and give ample time for the player to master those skills. However, analyzing the quality of learning progressions is challenging, especially during the design phase, as content is ever-changing. This research presents the application of Stratabots—automated player simulations based on models of players with varying sets of skills—to the human computation game Foldit. Stratabot performance analysis coupled with player data reveals a relatively smooth learning progression within tutorial levels, yet still shows evidence for improvement. Leveraging existing general gameplaying algorithms such as Monte Carlo Evaluation can reduce the development time of this approach to automated playtesting without losing predicitive power of the player model.","2018-11","2020-11-10 16:22:15","2020-11-10 16:22:15","2020-11-10 16:22:15","166-172","","","2018","","Proc AAAI Artif Intell Interact Digit Enterain Conf","","","","","","","","","","","","","PubMed Central","","PMID: 30613687 PMCID: PMC6319931","","; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/F3N8IMPK/Horn et al. - 2018 - A Monte Carlo Approach to Skill-Based Automated Pl.pdf","https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6319931/","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XZC9LABN","conferencePaper","2019","Keehl, O.; Smith, A. M.","Monster Carlo 2: Integrating Learning and Tree Search for Machine Playtesting","2019 IEEE Conference on Games (CoG)","","","10.1109/CIG.2019.8847989","","We describe a machine playtesting system that combines two paradigms of artificial intelligence - learning and tree search - and intends to place them in the hands of independent game developers. This integration approach has shown great success in Go-playing systems like AlphaGo and AlphaZero, but until now has not been available to those outside of artificial intelligence labs. Our system expands the Monster Carlo machine playtesting framework for Unity games by integrating its tree search capabilities with the behavior cloning features of Unity's Machine Learning Agents Toolkit. Because experience gained in one playthrough may now usefully transfer to other playthroughs via imitation learning, the new system overcomes a serious limitation of the older one with respect to stochastic games (when memorizing a single optimal solution is ineffective). Additionally, learning allows search-based automated play to be bootstrapped from examples of human play styles or even from the best of its own past experiences. In this paper we demonstrate that our framework discovers higher-scoring and more-representative play with minimal need for machine learning or search expertise.","2019-08","2020-11-10 16:22:46","2020-11-10 16:22:46","","1-8","","","","","","Monster Carlo 2","","","","","","","","","","","","IEEE Xplore","","ISSN: 2325-4289","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/WDWTKHIR/8847989.html","","","artificial intelligence; learning (artificial intelligence); Machine learning; Neural networks; machine learning; computer games; Tools; Games; tree searching; imitation learning; Monte Carlo Tree Search; machine playtesting; Training; artificial intelligence labs; behavior cloning; Cloning; human play styles; independent game developers; integration approach; Monster Carlo 2; Monster Carlo machine playtesting framework; search expertise; search-based; stochastic games; tree search capabilities; Unity games; Unity machine learning agents toolkit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2019 IEEE Conference on Games (CoG)","","","","","","","","","","","","","","",""
"S2RM9KEH","journalArticle","2017","Hernández Bécares, Jennifer; Costero Valero, Luis; Gómez Martín, Pedro Pablo","An approach to automated videogame beta testing","Entertainment Computing","","1875-9521","10.1016/j.entcom.2016.08.002","http://www.sciencedirect.com/science/article/pii/S1875952116300234","Videogames developed in the 1970s and 1980s were modest programs created in a couple of months by a single person, who played the roles of designer, artist and programmer. Since then, videogames have evolved to become a multi-million dollar industry. Today, AAA game development involves hundreds of people working together over several years. Management and engineering requirements have changed at the same pace. Although many of the processes have been adapted over time, this is not quite true for quality assurance tasks, which are still done mainly manually by human beta testers due to the specific peculiarities of videogames. This paper presents an approach to automate this beta testing.","2017-01-01","2020-11-10 16:26:06","2020-11-10 16:26:06","2020-11-10 16:26:06","79-92","","","18","","Entertainment Computing","","","","","","","","en","","","","","ScienceDirect","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/YI6BZBH2/Hernández Bécares et al. - 2017 - An approach to automated videogame beta testing.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/9HRQMSBT/S1875952116300234.html","","","Testing; Automatisation; Gameplay testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BVNBW9N4","conferencePaper","2005","Jung, YungWoo; Lim, Bum-Hyun; Sim, Kwang-Hyun; Lee, HunJoo; Park, IlKyu; Chung, JaeYong; Lee, Jihong","VENUS: The Online Game Simulator Using Massively Virtual Clients","Systems Modeling and Simulation: Theory and Applications","978-3-540-30585-9","","10.1007/978-3-540-30585-9_66","","In this paper, we present an efficient method for simulating massively virtual clients in an online game environment. Massively multiplayer online games and other multi-user based networked applications are becoming more attractive to the gamer players. Such kind of technology has long been researched in the area called Networked Virtual Environments. In the game development process, a set of beta tests is used to ensure the stability of online game servers. A set of testing processes consumes a lot of development resources such as cost, time, and etc. The purpose of the VENUS (Virtual Environment Network User Simulator) system is to provide an automated beta test environment to the game developers to efficiently test the online games to reduce development resources.","2005","2020-11-10 16:26:40","2020-11-10 16:26:40","","589-596","","","","","","VENUS","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/L2LIJ2TV/Jung et al. - 2005 - VENUS The Online Game Simulator Using Massively V.pdf","","","Game Developer; Game Player; Login Request; Online Game; Venus System","Baik, Doo-Kwon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VWAW366T","conferencePaper","2010","Chang-Sik Cho; Kang-Min Sohn; Chang-Jun Park; Ji-Hoon Kang","Online game testing using scenario-based control of massive virtual users","2010 The 12th International Conference on Advanced Communication Technology (ICACT)","","","","","The stability and performance of game servers are major issues in online games because the online game servers must be able to handle and verify a large number of connections. Test automation has been used in order to reduce testing time of online game servers. In this paper, we propose the VENUS II system, which supports blackbox testing and scenario-based testing as well as simple load testing. The massive virtual clients automatically generate packet loads to test the stability of game servers like the existing approaches. The main difference, however, is that we used the game grammar and game map to describe the game logics instead of using dummy game client code. So the test client code doesn't need to be re-written when a new game is to be tested. And the complex scenarios such as attack, party play and waypoint movement can be tested and moreover effectively because the scenarios can be flexibly constructed by combining protocols and actions already defined in game grammar. We have applied our tools on the ELMA online game application to verify the effectiveness of our method.","2010-02","2020-11-10 16:27:00","2020-11-10 16:27:00","","1676-1680","","","2","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1738-9445","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/W9ZMEE65/5440352.html","","","computer games; Games; Automation; Automatic testing; blackbox testing; Blackbox Testing; client-server systems; game client code; game grammar; Game Grammar; game logics; High definition video; Large-scale systems; Load Test; load testing; Logic; massive virtual users; Massive Virtual Users; network servers; online game servers; online game testing; Online Game Testing; packet loads; Protocols; scenario based testing; Stability; System testing; Venus; VENUS II system; virtual game map; Virtual Game Map; virtual reality","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 The 12th International Conference on Advanced Communication Technology (ICACT)","","","","","","","","","","","","","","",""
"4HTX358A","conferencePaper","2010","Cho, C.; Lee, D.; Sohn, K.; Park, C.; Kang, J.","Scenario-Based Approach for Blackbox Load Testing of Online Game Servers","2010 International Conference on Cyber-Enabled Distributed Computing and Knowledge Discovery","","","10.1109/CyberC.2010.54","","Simply having a large beta test cannot consistently provide stability and performance to game servers, which are major issues in online game development. Therefore, test automations have been used in order to reduce the testing time of online games by simulating highly repetitive tasks and emulating server loads. However, in previous approaches, black box testing and scenario-based testing are not supported because they use prerecorded packets of real players as templates, or reuse a subset of the main game client for the test client. In this paper, we propose black box testing and scenario-based testing of online games as well as simple load testing. Instead of rewriting the virtual client dummy code, only the game description language and virtual game map are redefined when a new game is to be tested. In addition, an actual testing environment can be mimicked more closely, because complex and various scenarios such as attack, party play, and waypoint movement can be tested through combining actions. We have applied our tools on several online games to verify the effectiveness of our method.","2010-10","2020-11-10 16:27:33","2020-11-10 16:27:33","","259-265","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/3PJDZAXN/5617141.html","","","program testing; computer games; Testing; Games; Servers; Automation; Blackbox Testing; Load Test; Massive Virtual Users; Online Game Testing; Protocols; scenario based testing; Venus; virtual game map; Virtual Game Map; virtual reality; blackbox load testing; formal languages; game client; game description language; Game Description Language; Internet; Load modeling; online game server; prerecorded packet; scenario based approach; Scenario-based Testing; server load; test automation; test client; virtual client dummy code","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 International Conference on Cyber-Enabled Distributed Computing and Knowledge Discovery","","","","","","","","","","","","","","",""
"8E7MQCYG","conferencePaper","2008","Nantes, Alfredo; Brown, Ross; Maire, Frederic","A framework for the semi-automatic testing of video games","Proceedings of the Fourth AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment","","","","","Game environments are complex interactive systems that require extensive analysis and testing to ensure that they are at a high enough quality to be released commercially. In particular, the last build of the product needs an additional and extensive beta test carried out by people that play the game in order to establish its robustness and playability. This entails additional costs from the viewpoint of a company as it requires the hiring of play testers. In the present work we propose a general software framework that integrates Artificial Intelligence (AI) Agents and Computer Vision (CV) technologies to support the test team and help to improve and accelerate the test process. We also present a prototype shadow alias detection algorithm that illustrates the effectiveness of the framework in developing automated visual debugging technology that will ease the heavy cost of beta testing games.","2008-10-22","2020-11-10 16:28:02","2020-11-10 16:28:02","2020-11-10","197–202","","","","","","","AIIDE'08","","","","AAAI Press","Stanford, California","","","","","","ACM Digital Library","","","","","","","Artificial Intelligence (AI); Computer Vision (CV); synthetic image debugging; video game testing; virtual environment testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"49ZWZYJA","conferencePaper","2018","Mozgovoy, Maxim; Pyshkin, Evgeny","Unity Application Testing Automation with Appium and Image Recognition","Tools and Methods of Program Analysis","978-3-319-71734-0","","10.1007/978-3-319-71734-0_12","","This work is dedicated to the problem of integrating simple functional tests (smoke tests) into the automated continuous integration pipeline. While functional testing is typically performed manually by the QA staff members, there is a large number of scenarios that can be automated, and readily available instruments, such as Appium and Calabash, designed for this task. Automated smoke testing is especially challenging for the applications with nonstandard GUI, such as games made with Unity. The only viable option in this case is to analyze screen content as a flat image and identify GUI elements with pattern matching algorithms. This approach is not novel, but its practical applicability and limitations are rarely discussed. We consider a case study of a mobile tennis game project, developed in Unity and covered with a suite of Appium-supported functional tests. We show how image matching capabilities of OpenCV library can be used in Appium tests to build a reliable automated QA pipeline.","2018","2020-11-10 16:28:36","2020-11-10 16:28:36","","139-150","","","","","","","Communications in Computer and Information Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/IIXC6VQF/Mozgovoy and Pyshkin - 2018 - Unity Application Testing Automation with Appium a.pdf","","","Testing; Automation; Computer game; Unity; Appium; GUI; Non-native; OpenCV; Smoke test","Itsykson, Vladimir; Scedrov, Andre; Zakharov, Victor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S2NCA3N6","journalArticle","2019","Tuovenen, J.; Oussalah, M.; Kostakos, P.","MAuto: Automatic Mobile Game Testing Tool Using Image-Matching Based Approach","The Computer Games Journal","","2052-773X","10.1007/s40869-019-00087-z","https://doi.org/10.1007/s40869-019-00087-z","The exponential increase in the speed of the mobile industry has led to a decreasing quality in many associated mobile apps. Besides, the number of distinct Android devices reached thousands. This challenged the development of universally accepted test applications that can run on all devices. This paper focuses on the development of a new mobile game testing framework, referred to, MAuto. MAuto records the user actions in the game and replays the tests on any Android device. MAuto uses image recognition, through AKAZE features, to record the test cases and the Appium framework to replay the user actions automatically. The feasibility of the developed tool has been demonstrated through testing on the Clash of Clans mobile game.","2019-12-01","2020-11-10 16:29:02","2020-11-10 16:29:02","2020-11-10 16:29:02","215-239","","3","8","","Comput Game J","MAuto","","","","","","","en","","","","","Springer Link","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/DIUCTL3V/Tuovenen et al. - 2019 - MAuto Automatic Mobile Game Testing Tool Using Im.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HKILKIDP","conferencePaper","2014","Yessad, Amel; Mounier, Isabelle; Labat, Jean-Marc; Kordon, Fabrice; Carron, Thibault","Have You Found the Error? A Formal Framework for Learning Game Verification","Open Learning and Teaching in Educational Communities","978-3-319-11200-8","","10.1007/978-3-319-11200-8_45","","Specifications of Multi-Player Learning Games (MPLG) are expressed collaboratively by designers who don’t speak the same conceptual language. Often, specifications contain design errors and inconsistencies that are difficult to detect in playtests. In this paper, we present a formal framework to assist designers in modeling and automatic verification of learning games at the design stage of development process.","2014","2020-11-10 16:42:37","2020-11-10 16:42:37","","476-481","","","","","","Have You Found the Error?","Lecture Notes in Computer Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/87QYKJGI/Yessad et al. - 2014 - Have You Found the Error A Formal Framework for L.pdf","","","Game Design; Instructional Design; Learning Game Verification; Model Checking; Multi-Player Learning Game; Symmetric Petri nets","Rensing, Christoph; de Freitas, Sara; Ley, Tobias; Muñoz-Merino, Pedro J.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"882G29SF","journalArticle","","Reuter, Christian; Göbel, Stefan; Steinmetz, Ralf","Detecting structural errors in scene-based Multiplayer Games using automatically generated Petri Nets","","","","","","When building a complex game it is very easy to make small mistakes during design or implementation. These ﬂaws can result in situations where the players cannot continue the game as planned (for example due to dead- or livelocks). In this paper we describe our approach for detecting those structural errors in scene-based single- and multiplayer games. This is done by generating a Petri Net where the individual game elements are mapped to appropriate constructs. We do so not only for high level goals, but for each possible user interaction. Combining this approach with an automatic transformation of the game yields a huge beneﬁt: there is no need to develop a veriﬁcation model in parallel to the game and there is also no margin for inconsistencies that could lead to the model not accurately representing the game.","","2020-11-10 16:43:05","2020-11-10 16:43:05","","9","","","","","","","","","","","","","en","","","","","Zotero","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/LRA3YYTW/Reuter et al. - Detecting structural errors in scene-based Multipl.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K5FXRZB3","conferencePaper","2013","Schaefer, C.; Hyunsook Do; Slator, B. M.","Crushinator: A framework towards game-independent testing","2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)","","","10.1109/ASE.2013.6693143","","Testing game applications relies heavily on beta testing methods. The effectiveness of beta testing depends on how well beta testers represent the common game-application users and if users are willing to participate in the beta test. An automated testing tool framework could reduce the dependence upon beta testing by most companies to analyze their game applications. This paper presents the Crushinator as one such framework. This framework provides a game-independent testing tool that implements multiple testing methods that can assist and possibly replace the use of beta testing.","2013-11","2020-11-10 16:43:35","2020-11-10 16:43:35","","726-729","","","","","","Crushinator","","","","","","","","","","","","IEEE Xplore","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/W8D8S4GZ/6693143.html; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/8ESAIRBU/Schaefer et al. - 2013 - Crushinator A framework towards game-independent .pdf","","","program testing; computer games; Testing; Computer architecture; Games; Unified modeling language; Servers; Engines; Crushinator; event-driven applications; exploratory testing; model-based testing; Load modeling; automated testing tool; beta testing method; game-independent testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)","","","","","","","","","","","","","","",""
"2KTMC7ZI","journalArticle","2012","","Automated verification of state sequence invariants in general game playing","Artificial Intelligence","","0004-3702","10.1016/j.artint.2012.04.003","http://www.sciencedirect.com/science/article/pii/S0004370212000422","A general game player is a system that can play previously unknown games given nothing but their rules. Many of the existing successful approaches to …","2012-08-01","2020-11-10 16:44:15","2020-11-10 16:44:15","2020-11-10 16:44:15","1-30","","","187-188","","","","","","","","","","en","","","","","www-sciencedirect-com.lib-ezproxy.concordia.ca","","Publisher: Elsevier","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/UHY6B29J/S0004370212000422.html; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/KK8P6KMW/2012 - Automated verification of state sequence invariant.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/EJ6WIY6T/S0004370212000422.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4VLAQK6Y","conferencePaper","2014","Varvaressos, S.; Lavoie, K.; Massé, A. B.; Gaboury, S.; Hallé, S.","Automated Bug Finding in Video Games: A Case Study for Runtime Monitoring","Verification and Validation 2014 IEEE Seventh International Conference on Software Testing","","","10.1109/ICST.2014.27","","Runtime verification is the process of observing a sequence of events generated by a running system and comparing it to some formal specification for potential violations. We show how the use of a runtime monitor can greatly speed up the testing phase of a video game under development, by automating the detection of bugs when the game is being played. We take advantage of the fact that a video game, contrarily to generic software, follows a special structure that contains a ""game loop"", this game loop can be used to centralize the instrumentation and generate events based on the game's internal state. We report on experiments made on a sample of five real-world video games of various genres and sizes, by successfully incrementing and efficiently monitoring various temporal properties over their execution-including actual bugs reported in the games' bug tracking database in the course of their development.","2014-03","2020-11-10 16:44:29","2020-11-10 16:44:29","","143-152","","","","","","Automated Bug Finding in Video Games","","","","","","","","","","","","IEEE Xplore","","ISSN: 2159-4848","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/B67ALVJF/Varvaressos et al. - 2017 - Automated Bug Finding in Video Games A Case Study.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/R9F279GL/6823876.html","","","program testing; computer games; Software; Games; video games; formal specification; temporal logic; Computer bugs; program debugging; automated bug finding; data flow analysis; Instruments; Monitoring; program verification; Runtime; runtime monitoring; runtime verification; video game testing phase; XML","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verification and Validation 2014 IEEE Seventh International Conference on Software Testing","","","","","","","","","","","","","","",""
"ZVEIQ8SX","conferencePaper","2017","Schatten, M.; Tomičić, I.; Đurić, B. O.; Ivković, N.","Towards an agent-based automated testing environment for massively multi-player role playing games","2017 40th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)","","","10.23919/MIPRO.2017.7973597","","Automated testing in massively multi-player on-line role playing games (MMORPG) is a challenging task due to the complexity of such games and their large numbers of mutually distributed but interacting components. Large-scale multi-agent systems (LSMAS) provide us with a suitable formalism to address such complex problems. Herein a first step towards an automated game testing environment, built for the open source Mana World MMORPG, will be presented that allows the implementation of software agents and agent organizations and provide the developers with valuable game-play and testing data.","2017-05","2020-11-10 16:44:51","2020-11-10 16:44:51","","1149-1154","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/RD2CBV2K/Schatten et al. - 2017 - Towards an agent-based automated testing environme.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/83K4P7SY/7973597.html","","","software; program testing; computer games; Testing; Tools; Games; agent-based automated testing environment; automated game testing environment; automated testing; Context modeling; games; Knowledge based systems; large-scale multiagent systems; LSMAS; massively multi-player online role playing games; massively multi-player role playing games; MMORPG; multi-agent systems; open source Mana World MMORPG; organization; Organizations; public domain software; Servers; software agents","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2017 40th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)","","","","","","","","","","","","","","",""
"Y75SL8P8","conferencePaper","2017","Schatten, Markus; Đurić, Bogdan Okreaša; Tomičič, Igor; Ivkovič, Nikola","Automated MMORPG Testing – An Agent-Based Approach","Advances in Practical Applications of Cyber-Physical Multi-Agent Systems: The PAAMS Collection","978-3-319-59930-4","","10.1007/978-3-319-59930-4_38","","A work-in-progress agent-based framework for automated testing of an open-source massively multi-player on-line role playing game (MMORPG) called The Mana World is presented. The implemented system, in its current state, allows for model-driven development of tests using a graphical user interface (GUI), implementation of automated artificial players (bots) and their use in testing the quests (player tasks) of the game. The system is implemented using Python, SPADE, SWI Prolog and AToM33^3.","2017","2020-11-10 16:45:07","2020-11-10 16:45:07","","359-363","","","","","","","Lecture Notes in Computer Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/SL4A9R8W/Schatten et al. - 2017 - Automated MMORPG Testing – An Agent-Based Approach.pdf","","","MMORPG; Agents; Artificial players; Automated testing; Bots","Demazeau, Yves; Davidsson, Paul; Bajo, Javier; Vale, Zita","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TF43JJML","journalArticle","2017","Núñez-Valdez, Edward Rolando; García-Díaz, Vicente; Lovelle, Juan Manuel Cueva; Achaerandio, Yago Sáez; González-Crespo, Rubén","A model-driven approach to generate and deploy videogames on multiple platforms","Journal of Ambient Intelligence and Humanized Computing","","18685145","10.1007/s12652-016-0404-1","","© 2016, Springer-Verlag Berlin Heidelberg. Currently, videogame development for mobile devices is a highly profitable and competitive industry worldwide. This profitability can be ascribed to the popularity that new technologies such as smartphones and tablets have acquired over the last few years. To increase competitiveness, we use a model driven engineering (MDE) approach to develop multi-platform videogames in a quick and easy manner. MDE helps us to reduce the number of errors, the amount of time required and the development costs and favors a productivity increment. The aim of this work is to present an approach for the agile development of multi-platform videogames by using high-level abstraction models. We offer a feasible solution supported by a tool that allows the development of videogames in a simple and agile way. An empirical validation is presented through a use case where the viability of our approach is shown in comparison with that of other tools. Finally, a survey shows the users' perception of the solution with the objective of validating the use case results. The given use case indicates that our approach is suitable for improving videogame development. The survey indicates that users think that it is possible to model videogames and generate the corresponding applications with our approach.","2017","2020-11-10 23:21:40","2020-11-10 23:21:40","","435–447","","3","8","","","","","","","","","","","","","","","","","","","","","Model-driven engineering; Software generation; User interface; Videogames","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2E2V86WL","journalArticle","2017","Cappellini, Giacomo; Maggiorini, Dario; Ripamonti, Laura Anna","Supporting Team Work in Game Design","Computers in Entertainment","","","10.1145/2644829","","Developing a video game is a costly activity, not only from an economic perspective, but also in terms of the time devoted to researching innovative solutions and managing interfaces between the creative and technical team members. In this article, we explore the possibility to use an approach rooted into AI techniques (namely Behaviour Trees) to help establish a lingua franca between these two different functions, in order to optimize both the development time and the quality of the final product. In particular, we have developed BETTER, a middleware which can be easily embedded into any game engine, and tested it during the design and development of Crazy-Hill, a commercial video game for iOS-based mobile devices.","2017","2020-11-10 23:21:40","2020-11-10 23:21:40","","1–19","","1","15","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6F6V6FHU","book","2018","Hyrynsalmi, Sami; Klotins, Eriks; Unterkalmsteiner, Michael; Gorschek, Tony; Tripathi, Nirnaya; Pompermaier, Leandro Bento; Prikladnicki, Rafael","What is a Minimum Viable (Video) Game?","","978-3-030-02130-6","","","http://link.springer.com/10.1007/978-3-030-02131-3","This study tries to address the literature gap of what blockchain can offer to businesses in relation to consumers (B2C), businesses (B2B) and governments (B2G) through systematic literature review on blockchain. The review covers 40 articles from business, management and accounting peer review journals recognized by Scopus database. The review highlights how blockchain will facilitate instant payments, trusted interfaces and traceability of goods for the consumers. Businesses can use blockchain for snapshot sharing, machine-to-machine transactions, accounting, business process management and provenance traceability. Blockchain technology creating new business opportunities in government sector such as digital storage, authentication and maintenance of records; smart trust codification; new market for digital payment services and global commerce.","2018","2020-11-10 23:21:41","2020-11-10 23:21:41","","","217–231","","11195","","","","","","","","Springer International Publishing","","","","","","","","","DOI: 10.1007/978-3-030-02131-3","","","","Game bu; Minimum viable game; minimum viable product; Minimum viable product","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"523S9QF2","journalArticle","2017","Kasurinen, Jussi; Palacin-Silva, Maria; Vanhala, Erno","What Concerns Game Developers? A Study on Game Development Processes, Sustainability and Metrics","International Workshop on Emerging Trends in Software Metrics, WETSoM","","23270969","10.1109/WETSoM.2017.3","","It can be argued, that software development and game development share a number of features in their process models, such as the need to design, develop and test software functionalities. However, while the software engineering (SE) models work successfully supporting the software development, their practical application for game development is frequently unsuccessful. To understand this problem and number of other aspects such as Green IT and business models, we conducted a survey with the game industry organizations. Based on our observations on the SE practices, the game industry applies mostly the agile process models or nothing at all, their major concerns for business were mobile development, digital marketing, employees with specific abilities and keeping innovation in their business, and their minor concerns were eco-impact elements, software reusability and financing. Based on our results, we identified areas which would warrant more studies to support the game industry practices, eco-aspects and business.","2017","2020-11-10 23:21:41","2020-11-10 23:21:41","","15–21","","","","","","","","","","","","","","","","","","","","ISBN: 9781538628072 Publisher: IEEE","","","","software engineering; quantitative study; game business; games as software; marketing; process models; sustainability","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RTRE9DZA","journalArticle","2017","Lin, Dayi; Bezemer, Cor Paul; Hassan, Ahmed E.","Studying the urgent updates of popular games on the Steam platform","Empirical Software Engineering","","15737616","10.1007/s10664-016-9480-2","","© 2016, Springer Science+Business Media New York. The steadily increasing popularity of computer games has led to the rise of a multi-billion dollar industry. This increasing popularity is partly enabled by online digital distribution platforms for games, such as Steam. These platforms offer an insight into the development and test processes of game developers. In particular, we can extract the update cycle of a game and study what makes developers deviate from that cycle by releasing so-called urgent updates. An urgent update is a software update that fixes problems that are deemed critical enough to not be left unfixed until a regular-cycle update. Urgent updates are made in a state of emergency and outside the regular development and test timelines which causes unnecessary stress on the development team. Hence, avoiding the need for an urgent update is important for game developers. We define urgent updates as 0-day updates (updates that are released on the same day), updates that are released faster than the regular cycle, or self-admitted hotfixes. We conduct an empirical study of the urgent updates of the 50 most popular games from Steam, the dominant digital game delivery platform. As urgent updates are reflections of mistakes in the development and test processes, a better understanding of urgent updates can in turn stimulate the improvement of these processes, and eventually save resources for game developers. In this paper, we argue that the update strategy that is chosen by a game developer affects the number of urgent updates that are released. Although the choice of update strategy does not appear to have an impact on the percentage of updates that are released faster than the regular cycle or self-admitted hotfixes, games that use a frequent update strategy tend to have a higher proportion of 0-day updates than games that use a traditional update strategy.","2017","2020-11-10 23:21:41","2020-11-10 23:21:41","","2095–2126","","4","22","","","","","","","","","","","","","","","","","Publisher: Empirical Software Engineering","","","","Computer games; Steam; Update cycle; Update strategy; Urgent update","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IHNFP886","journalArticle","2018","Politowski, Cristiano; Fontoura, Lisandra M.; Petrillo, Fabio; Guéhéneuc, Yann Gaël","Learning from the past: A process recommendation system for video game projects using postmortems experiences","Information and Software Technology","","09505849","10.1016/j.infsof.2018.04.003","https://doi.org/10.1016/j.infsof.2018.04.003","Context: The video game industry is a billion dollar industry that faces problems in the way games are developed. One method to address these problems is using developer aid tools, such as Recommendation Systems. These tools assist developers by generating recommendations to help them perform their tasks. Objective: This article describes a systematic approach to recommend development processes for video game projects, using postmortem knowledge extraction and a model of the context of the new project, in which “postmortems” are articles written by video game developers at the end of projects, summarizing the experience of their game development team. This approach aims to provide reflections about development processes used in the game industry as well as guidance to developers to choose the most adequate process according to the contexts they're in. Method: Our approach is divided in three separate phases: in the first phase, we manually extracted the processes from the postmortems analysis; in the second one, we created a video game context and algorithm rules for recommendation; and finally in the third phase, we evaluated the recommended processes by using quantitative and qualitative metrics, game developers feedback, and a case study by interviewing a video game development team. Contributions: This article brings three main contributions. The first describes a database of developers' experiences extracted from postmortems in the form of development processes. The second defines the main attributes that a video game project contain, which it uses to define the contexts of the project. The third describes and evaluates a recommendation system for video game projects, which uses the contexts of the projects to identify similar projects and suggest a set of activities in the form of a process.","2018","2020-11-10 23:24:32","2020-11-10 23:24:32","","103–118","","March","100","","","","","","","","","","","","","","","","","Publisher: Elsevier","","","","Recommendation system; Software development process; Video game development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KQGHEGU7","journalArticle","2016","Kasurinen, Jussi","Games as Software – Similarities and Differences between the Implementation Projects Jussi","Proceedings of the 17th International Conference on Computer Systems and Technologies 2016 - CompSysTech '16","","","10.1145/2983468.2983501","http://dl.acm.org/citation.cfm?doid=2983468.2983501","The game development in principle is not different from the traditional software development. In this study, the aim is to assess the video game development from the viewpoint of software engineering, assessing which software development activities are similar, and which incompatible within the game industry context. We interviewed 11 companies and conducted a survey to understand these differences; the project management and development tasks are similar, but the detailed activities, such as requirements engineering practices, are noticeably different. ©2016 ACM.","2016","2020-11-10 23:24:32","2020-11-10 23:24:32","","33–40","","June","","","","","","","","","","","","","","","","","","ISBN: 9781450341820","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/MAJP3TPI/Kasurinen - 2016 - Games as Software Similarities and Differences be.pdf","","software engineering; game development; software development; development process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RVT99YTT","journalArticle","2014","Kasurinen, Jussi; Risto Laine","Games from the Viewpoint of Software Engineering","Proceeding of the Federated Computer Science Event","","","","","","2014","2020-11-10 23:24:32","2020-11-10 23:24:32","","23–26","","","","","","","","","","","","","","","","","","","","","","","","software engineering; game development; development process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JQ2BHH39","conferencePaper","2010","Godoy, André; Barbosa, Ellen F","Game-Scrum: An Approach to Agile Game Development","SBCGames","","","","http://www.sbgames.org/sbgames2010/proceedings/computing/short/Computing_short19.pdf","The use of agile methodologies for developing games has become very common. However, such methodologies must be adapted to the team reality and to the particularities of the game development. Since there are few agile methodologies that specifically address the problems found in game development, this paper aims at inves- tigating some alternatives and suggests an approach to guide people who are starting in this area. The proposed methodology, named Game-Scrum, has been applied in the development of a game for teaching software engineering. The results from its application are also discussed in the paper.","2010","2020-11-10 23:24:32","2020-11-10 23:24:32","","292–295","","","","","","","","","","","","","","","","","","","","","","","","scrum; game development; gameprocess; agile methodologies; educational game; xp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RC9LDSVP","journalArticle","2016","Carmona, O Tobar","Game development-From the vision to the final product","","","","","http://upcommons.upc.edu/handle/2117/83419","","2016","2020-11-10 23:24:33","2020-11-10 23:24:33","","1–32","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"J86HIS89","journalArticle","2018","Annanperä, Elina; Yli-Kantola, Jani; Sauvola, Tanja; Heinonen, Samuli; Siira, Erkki","Testing methods for mobile game development: A case study on user feedback in different development phases","2018 IEEE 6th International Conference on Serious Games and Applications for Health, SeGAH 2018","","","10.1109/SeGAH.2018.8401372","","Mobile games are relatively new industry, and their relevance on the game markets are rising. At the same time, it is very competitive market, as new games are coming out by hundreds every day. The challenges for the new game development come from the creative process and the human factors on how to make the game appealing. In this research, we study the use of test groups as part of new mobile game and concept development process in the early phases. They were used to complement the testing automation at the development phases when use of analytics was not yet possible. Six separate feedback collection sessions were arranged using different methods. The paper presents the main learnings of each used method, the perceived usefulness of the methods for the entire development process. We also contribute to the growing knowledge for mobile game development, focusing on methods for the testing with test user approaches. We conclude that testing with user groups can help clarify the mobile game design to create a more appealing game, but choosing the right groups and right moments in the game development phase can be difficult, as can be the interpretation of the feedback for decision making.","2018","2020-11-10 23:24:33","2020-11-10 23:24:33","","1–8","","","","","","","","","","","","","","","","","","","","ISBN: 9781538662984","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/DHAT58SA/Annanperä et al. - 2018 - Testing methods for mobile game development a case.pdf","","game testing; development process; methods; mobile games; users","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Y6UNC7CF","journalArticle","2018","Santos, R E S; Magalhes, C V C; Capretz, L F; Correia-Neto, J S; Da Silva, F Q B; Saher, A","Computer games are serious business and so is their quality: Particularities of software testing in game development from the perspective of practitioners","International Symposium on Empirical Software Engineering and Measurement","","","10.1145/3239235.3268923","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85061499891&doi=10.1145%2F3239235.3268923&partnerID=40&md5=80bb105d155dbee4b24ff3b9d92b13cf","Context. Over the last several decades, computer games started to have a significant impact on society. However, although a computer game is a type of software, the process to conceptualize, produce and deliver a game could involve unusual features. In software testing, for instance, studies demonstrated the hesitance of professionals to use automated testing techniques with games, due to the constant changes in requirements and design, and pointed out the need for creating testing tools that take into account the flexibility required for the game development process. Goal. This study aims to improve the current body of knowledge regarding these theme and point out the existing particularities observed in software testing considering the development of a computer game. Method. A mixed-method approach based on a case study and a survey was applied to collect quantitative and qualitative data from practitioners regarding the particularities of software testing in game development. Results. We analyzed over 70 messages posted on three well-established network of question-and-answer communities and received answers of 38 practitioners, and identified important aspects to be observed in the process of planning, performing and reporting tests games. Conclusion. Considering computer games, software testing must focus not only on the common aspects of a general software, but also, track and investigate issues that could be related to game balance, game physics and entertainment related-aspects to guarantee the quality of computer games and a successful testing process. © 2018 ACM.","2018","2020-11-10 23:24:33","2020-11-10 23:24:33","","","","","","","","","","","","","","","","","","","","","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/IFUQKGQF/Santos et al. - 2018 - Computer games are serious business and so is thei.pdf","","Software testing; Computer games; Automated testing; Body of knowledge; Established; Software design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PIXG3UAW","journalArticle","2014","Al-Azawi, Rula; Ayesh, Aladdin; Al-Obaidy, Mohaned","Towards Agent-based Agile approach for Game Development Methodology","2014 World Congress on Computer Applications and Information Systems, WCCAIS 2014","","","10.1109/WCCAIS.2014.6916626","","? 2014 IEEE.Game development is very complex and the success of the game is based on the game development methods. The purpose of this paper is to investigate on the existing game development methods and provide an upcoming game development method that is based on predictive and adaptive development models. A critical analysis to Agile method which are mostly used in modern game development methods is presented. We identified the weakness of Agile game development and solve it by creating a cooperation with Agent Oriented Software Engineering (AOSE) to introduce a new hybrid methodology named as Agent Agile Game Development Methodology (AAGDM) that combines both predictive and adaptive models.","2014","2020-11-10 23:24:33","2020-11-10 23:24:33","","1–6","","","","","","","","","","","","","","","","","","","","ISBN: 9781479933518 Publisher: IEEE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"J4HUBHZ2","journalArticle","2017","Wang, Yiran; Che, Xiaoping","How to Keep People Playing Mobile Games: An Experience Requirements Testing Approach","Proceedings - 13th IEEE International Conference on Ubiquitous Intelligence and Computing, 13th IEEE International Conference on Advanced and Trusted Computing, 16th IEEE International Conference on Scalable Computing and Communications, IEEE Internationa","","","10.1109/UIC-ATC-ScalCom-CBDCom-IoP-SmartWorld.2016.0130","","© 2016 IEEE. The smartphones continues to revolutionize daily activities, how people perform them. However, with a huge market, defining, testing experience requirements in mobile games is still vague, challenging. In this paper, we raise some new emotional experience requirements that are necessary for playing a mobile game., we propose a testing approach for formally expressing, testing experience requirements in mobile games. We attempted to define requirements for player experiences that were to be induced by the mobile game, then test them to determine whether the implementation satisfies these requirements. According to the test results, the mobile game developers will have more chances to adapt their products to better status before releasing. In order to prove the efficiency of our approach, we perform a real test environment to verify the satisfaction of experience requirements.","2017","2020-11-10 23:24:33","2020-11-10 23:24:33","","815–822","","","","","","","","","","","","","","","","","","","","ISBN: 9781509027705 Publisher: IEEE","","","","Testing; Mobile Game; Experience Requirement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CANZVTCA","journalArticle","2017","Valente, Luis; Feijó, Bruno; Leite, Julio Cesar Sampaio do Prado","Mapping quality requirements for pervasive mobile games","Requirements Engineering","","1432010X","10.1007/s00766-015-0238-y","","? 2015 Springer-Verlag LondonGames have not received the full attention of the requirements engineering community. This scenario is becoming more critical as we move towards newer forms of games, such as pervasive games. Pervasiveness (the quality that distinguishes pervasive games from traditional digital games) holds several meanings, including being ubiquitous, permeating something, or spreading something, somewhere, in a physical space. Pervasiveness can be recognized in by the boundaries of the game expanding every time it is played, from the virtual (or fictional) world to the real world. Pervasive games are a new form of digital entertainment that has evolved in different forms, such as alternate reality games, transmedia games, and crossmedia games. Sensor technologies, networking capabilities, augmented reality systems, computer vision technology, the internet, and, especially, mobile devices have been responsible for the rapid evolution of this new form of digital product. This paper is focused on ?pervasive mobile games?, which we define as context-aware games that use mobile devices. We bear in mind that mobile devices are currently the main driver for fulfilling the promises of pervasive game playing. Our investigations and experiments on this class of games led us to study the quality requirements for pervasive mobile games. Using different information sources, we gathered a set of interrelated characteristics that are crucial to the success of these games. In this paper, we begin to clarify the definition and scope of pervasive mobile games, which are controversial issues in the literature. Using these fundamentals, we propose a two-level conceptual map of non-functional requirements that helps to realize pervasiveness in pervasive mobile games. These non-functional requirements are then associated with a set of questions that help the designers in verifying tasks and operationalizing the requirements of a game. We also propose a dependence matrix for pervasive game qualities that enhances the insight into pervasiveness and reveals important guidelines for the game designers.","2017","2020-11-10 23:24:33","2020-11-10 23:24:33","","137–165","","1","22","","","","","","","","","","","","","","","","","","","","","Requirements engineering; Dependence matrix; Non-functional requirements; Pervasive mobile games","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZAGHEPHW","journalArticle","2013","Koutonen, Jussi; Leppänen, Mauri","How are agile methods and practices deployed in video game development? A survey into finnish game studios","Lecture Notes in Business Information Processing","","18651348","10.1007/978-3-642-38314-4_10","","Adapting software for different languages is required to gain market access by increasing product acceptance and usability, and satisfying legal requirements. This process commonly consists of two steps: Internationalization, i.e. the generalization of any language- and culture-specific properties and elements of the software in question, and localization, i.e. the specialization of said elements for specific languages, cultures and countries [1]. It is a topic with increasing relevance as new technologies enable new software uses and interaction modes, which in turn create new cultural dependencies which need to be localized, and new ways to do it, e.g. crowdsourcing [2] and machine translation [3]. © 2011 Springer-Verlag Berlin Heidelberg.","2013","2020-11-10 23:24:33","2020-11-10 23:24:33","","135–149","","","149","","","","","","","","","","","","","","","","","ISBN: 9783642383137","","","","Video game development; Agile practices; Kanban; Scrum; XP","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CSGD53AB","conferencePaper","2018","Pascarella, Luca; Palomba, Fabio; Di Penta, Massimiliano; Bacchelli, Alberto","How is video game development different from software development in open source?","Proceedings - International Conference on Software Engineering","","","10.1145/3196398.3196418","http://dx.doi.org/10.1145/3196398.3196418","Recent research has provided evidence that, in the industrial con-text, developing video games diverges from developing software systems in other domains, such as office suites and system utilities. In this paper, we consider video game development in the open source system (OSS) context. Specifically, we investigate how de-velopers contribute to video games vs. non-games by working on different kinds of artifacts, how they handle malfunctions, and how they perceive the development process of their projects. To this pur-pose, we conducted a mixed, qualitative and quantitative study on a broad suite of 60 OSS projects. Our results confirm the existence of significant differences between game and non-game development, in terms of how project resources are organized and in the diversity of developers' specializations. Moreover, game developers respond-ing to our survey perceive more difficulties than other developers when reusing code as well as performing automated testing, and they lack a clear overview of their system's requirements.","2018","2020-11-10 23:24:33","2020-11-10 23:24:33","","392–402","","","","","","","","","","","","Gothenburg, Sweden","","","","","","","","ISSN: 02705257","","","","Human computer interaction; Industrial research; Int","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NEEVZMRL","journalArticle","2016","Söbke, Heinrich; Streicher, Alexander","Entertainment Computing and Serious Games","","","","10.1007/978-3-319-46152-6","http://link.springer.com/10.1007/978-3-319-46152-6","Content is a key component for successful computer games and it is also one of the most labour and time intensive tasks a game developer can face. As the scale of contemporary games increases, players come to expect higher standards of fidelity and immersion, thus increasing the need to create large amounts of content. This chapter focuses on the creation of content for serious games, particularly research that can aid designers and game developers in generating large amounts of content quickly and effectively. While game developers have had many tools and methods for creating content for standard computer games, this chapter will concentrate on the types of content specific to serious games.","2016","2020-11-10 23:24:33","2020-11-10 23:24:33","","148–173","","","9970","","","","","","","","","","","","","","","","","ISBN: 978-3-319-46151-9","","","","game engine; development; distributed architecture; game component; schema; serious game; serious games architecture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M9VQR8KY","journalArticle","2016","Aleem, Saiqa; Capretz, Luiz Fernando; Ahmed, Faheem","A Digital Game Maturity Model (DGMM)","Entertainment Computing","","18759521","10.1016/j.entcom.2016.08.004","http://dx.doi.org/10.1016/j.entcom.2016.08.004","Game development is an interdisciplinary concept that embraces artistic, software engineering, management, and business disciplines. This research facilitates a better understanding of important dimensions of digital game development methodology. Game development is considered as one of the most complex tasks in software engineering. The increased popularity of digital games, the challenges faced by game development organizations in developing quality games, and high competition in the digital game industry demand a game development maturity assessment. Consequently, this study presents a Digital Game Maturity Model to evaluate the current development methodology in an organization. The framework of this model consists of assessment questionnaires, a performance scale, and a rating method. The main goal of the questionnaires is to collect information about current processes and practices. In general, this research contributes towards formulating a comprehensive and unified strategy for game development maturity evaluation. Two case studies were conducted and their assessment results reported. These demonstrate the level of maturity of current development practices in two organizations.","2016","2020-11-10 23:24:33","2020-11-10 23:24:33","","55–73","","","17","","","","","","","","","","","","","","","","","Publisher: Elsevier B.V.","","","","Video game; Game development methodology; Game performance; Online game; Process assessment; Software game; Software process improvement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AJQTHZNM","journalArticle","2011","Callele, David; Neufeld, Eric; Schneider, Kevin","A report on select research opportunities in requirements engineering for videogame development","2011 4th Int. Workshop on Multimedia and Enjoyable Requirements Eng. - Beyond Mere Descriptions and with More Fun and Games, MERE'11 - Co-located with the 19th IEEE Int. Requirements Eng. Conf., RE'11","","","10.1109/MERE.2011.6043942","","Requirements engineering research in videogame development is a relatively new field. This paper summarizes our work in the area then reviews the prior academic and trade press. We then present brief overviews of numerous research opportunities in the videogame domain that arose from our research program yet remain open questions with the goal of providing other researchers with a concise directory of interesting research possibilities. ? 2011 IEEE.","2011","2020-11-10 23:24:33","2020-11-10 23:24:33","","26–33","","","","","","","","","","","","","","","","","","","","ISBN: 9781457709340 Publisher: IEEE","","","","games; requirements; Research opportunities; videogames","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8PQZFVAJ","journalArticle","2016","Aleem, Saiqa; Capretz, Luiz Fernando; Ahmed, Faheem","Game development software engineering process life cycle: a systematic review","Journal of Software Engineering Research and Development","","2195-1721","10.1186/s40411-016-0032-7","http://dx.doi.org/10.1186/s40411-016-0032-7","Software game is a kind of application that is used not only for entertainment, but also for serious purposes that can be applicable to different domains such as education, business, and health care. Multidisciplinary nature of the game development processes that combine sound, art, control systems, artificial intelligence (AI), and human factors, makes the software game development practice different from traditional software development. However, the underline software engineering techniques help game development to achieve maintainability, flexibility, lower effort and cost, and better design. The purpose of this study is to assesses the state of the art research on the game development software engineering process and highlight areas that need further consideration by researchers. In the study, we used a systematic literature review methodology based on well-known digital libraries. The largest number of studies have been reported in the production phase of the game development software engineering process life cycle, followed by the pre-production phase. By contrast, the post-production phase has received much less research activity than the pre-production and production phases. The results of this study suggest that the game development software engineering process has many aspects that need further attention from researchers; that especially includes the postproduction phase.","2016","2020-11-10 23:24:33","2020-11-10 23:24:33","","","","1","4","","","","","","","","","","","","","","","","","Publisher: Journal of Software Engineering Research and Development","","","","video game; Video game; Online game; development software engineerong proces; online game; software game; Software Game; Systematic re; systematic review","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"84JJSTVM","journalArticle","2013","Colomo-Palacios, Ricardo; Messnarz, Richard; Biró, Miklós","Systems, software and services process improvement","Computer Standards and Interfaces","","09205489","10.1016/j.csi.2013.08.001","http://www.scopus.com/inward/record.url?eid=2-s2.0-77957574553&partnerID=tZOtx3y1","The role of Systems and Product Architects is increasingly important for the development of modern products and services that are sustainable, innovative, and successful. This paper shows that competences in integration in product and systems design have to be a key part of these architect's competence profiles. Capitalizing on results from extensive research in the optimization of product development, it points out that the integration of all stakeholders from the earliest development phases is a fundamental need to be able to take into account all requirements and constraints imposed on both hardware and software products and systems. It draws the conclusion that the key stakeholders in product and system development processes need to have skills that enable this way of doing integrated development. © 2010 Springer-Verlag Berlin Heidelberg.","2013","2020-11-10 23:24:33","2020-11-10 23:24:33","","1–2","","1","36","","","","","","","","","","","","","","","","","ISBN: 978-3-642-15665-6 _eprint: arXiv:1011.1669v3 PMID: 25246403","","","","gameprocess; Software Development Methods; SPI; SPI Manifesto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VQEEWMH6","journalArticle","2016","Gustafsson, Viktor; Höglund, Gustav","The cooperative future of game development : A phenomenon of collaboration between producers and consumers in the video game industry","","","","","http://www.diva-portal.org/smash/record.jsf?pid=diva2%3A937094&dswid=5819","Independent developers and large-scale development studios - commonly seen as the Davids and Goliaths of the video game industry - are moving closer together. Powerful software frameworks, traditionally reserved for professional developers and only available through expensive licenses, are becoming free to use for consumers. By sharing their tools instead of keeping them for themselves, companies can utilize the combined talent of whole communities and monetize on that talent through royalties and other indirect fees. This paper describes how the video game industry has developed in recent years to allow for this change in business strategy and examines how the industry can continue to evolve because of this. The result of a Delphi study based on interviews with game developers both inside and outside the industry point toward a future of increased intermingling and sharing of knowledge and resources, characterized by more producer-consumer collaborations and closer relationships between companies and their communities. By adopting free-to-use business models and sharing powerful, proprietary software with their consumers, companies are lowering the point of entry for aspiring developers and thereby dissolving the traditional narrative of “we and them” that has existed between independent developers and established studios in the past.","2016","2020-11-10 23:24:34","2020-11-10 23:24:34","","","","","","","","","","","","","","","","","","","","","","","","","","game development; indie; game engine; business model; community platforms; modding; outsourcing innovation; participatory culture; producer-consumer collaboration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"E73937WV","journalArticle","2014","Kasurinen, Jussi; Maglyas, Andrey; Smolander, Kari","Is Requirements Engineering Useless in Game Development?","","","","","","","2014","2020-11-10 23:24:34","2020-11-10 23:24:34","","1–16","","","","","","","","","","","","","","","","","","","","","","","","game development; game design; requirements engineering; requirements; management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZLV6L5LB","journalArticle","2015","Scacchi, Walt; Cooper, Kendra M.","Research Challenges at the Intersection of Computer Games and Software Engineering","Computer Games and Software \ldots","","","","https://books.google.com.br/books?hl=pt-BR&lr=&id=fi2sCQAAQBAJ&oi=fnd&pg=PA261&dq=educational+RPG+serious+RPG+%22history+of+RPG%22+OR+%22serious+Games%22+OR+%22serious+RPG%22+OR+%22RPG+framework%22+OR+%22educational+RPG%22&ots=2KnSFOrmkE&sig=gghlGN4j4rqri","This paper provides an overview and review of R&D studies, findings, and practices that identify important problems that constitute an emerging program of future R&D opportunities relevant to established scholars and new students interested in computer games and software engineering (CGSE). This includes examining how computer games may be used to address long- standing, grand challenge problems in software engineering in new ways. The review also examines other challenges in game software requirements engineering, game software design, game software testing, teamwork processes in CGSE, global CGSE, and other closely related areas for CGSE research. From these results, it becomes possible to identify and outline possible areas for future CGSE research opportunities that may be appropriate for consideration by students, scholars, or research agencies seeking to build up scientific and technological capabilities in CGSE research and educational practice.","2015","2020-11-10 23:24:34","2020-11-10 23:24:34","","","","Fdg","","","","","","","","","","","","","","","","","","","","","","software engineering; computer games; challenges; grand; research; software engineering education","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BUFBLY5A","journalArticle","2014","Paakkanen, Vesa","User Experience of Game Development Environments: Can making games be as fun as playing them?","","","","","","","2014","2020-11-10 23:24:34","2020-11-10 23:24:34","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4QPJN7BM","conferencePaper","2016","Politowski, Cristiano; Fontoura, Lisandra; Petrillo, Fabio; Guéhéneuc, Yann-Gaël","Are the Old Days Gone? A Survey on Actual Software Engineering Processes in Video Game Industry","Gas 2016","978-1-4503-4160-8","","","http://dx.doi.org/10.1145/2896958.2896960","In the past 10 years, several researches studied video game development process who proposed approaches to improve the way how games are developed. These approaches usually adopt agile methodologies because of claims that traditional practices and the waterfall process are gone. However, are the ""old days"" really gone in the game industry? In this paper, we present a survey of software engineering processes in video game industry from postmortem project analyses. We analyzed 20 postmortems from Gamasutra Portal. We extracted their processes and modelled them through using the Business Process Model and Notation (BPMN). This work presents three main contributions. First, a postmortem analysis methodology to identify and extract project processes. Second, the study main result: the ""old days"" are gone, but not completely. Iterative practices are increasing and are applied to at least 65% of projects in which 45% of this projects explicitly adopted Agile practices. However, waterfall process is still applied at least 30% of projects. Finally, we discuss some implications, directions and opportunities for video game development community.","2016","2020-11-10 23:24:34","2020-11-10 23:24:34","","22–28","","","16-May-201","","","","","","","","","Austin, TX, United states","","","","","","","","ISSN: 02705257","","","","game development; postmortem; software engineering process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2ISCUCXI","journalArticle","2016","Jr, Michael Washburn; Sathiyanarayanan, Pavithra; Nagappan, Meiyappan; Zimmermann, Thomas; Bird, Christian","""What Went Right and What Went Wrong"": An Analysis of 155 Postmortems from Game Development","Proceedings of the 38th International Conference on Software Engineering (ICSE 2016 SEIP Track)","","","10.1145/2889160.2889253","http://research.microsoft.com/apps/pubs/default.aspx?id=262301","In game development, software teams often conduct postmortems to reflect on what went well and what went wrong in a project. The postmortems are shared publicly on gaming sites or at developer conferences. In this paper, we present an analysis of 155 postmortems published on the gaming site Gamasutra.com. We identify characteristics of game development, link the characteristics to positive and negative experiences in the postmortems and distill a set of best practices and pitfalls for game development.","2016","2020-11-10 23:24:34","2020-11-10 23:24:34","","","","","","","","","","","","","","","","","","","","","","ISBN: 9781450342056","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/PWT3SGDF/Washburn et al. - 2016 - What went right and what went wrong an analysis o.pdf","","games; postmortems; qualitative analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3RPUNZWC","journalArticle","2014","Osborne O'Hagan, Ann; Coleman, Gerry; O'Connor, Rory V.","Software Development Processes for Games: A Systematic Literature Review","Communications in Computer and Information Science","","18650929","10.1007/978-3-662-43896-1_16","","This paper describes the methodology and results from a Systematic Literature Review (SLR) of the software processes used in game development. A total of 404 papers were analyzed as part of the review and the various process models that are used in industry and academia/research are presented. Software Process Improvement (SPI) initiatives for game development are discussed. The factors that promote or deter the adoption of process models, and implementing SPI in practice are highlighted. Our findings indicate that there is no single model that serves as a best practice process model for game development and it is a matter of deciding which model is best suited for a particular game. Agile models such as Scrum and XP are suited to the knowledge intensive domain of game development where innovation and speed to market are vital. Hybrid approaches such as reuse can also be suitable for game development where the risk of the upfront investment in terms of time and cost is mitigated with a game that has stable requirements and a longer lifespan. © Springer-Verlag Berlin Heidelberg 2014.","2014","2020-11-10 23:24:34","2020-11-10 23:24:34","","182–193","","June","425","","","","","","","","","","","","","","","","","ISBN: 9783662438954","","","","Software Engineering; Game Development; Software Process; Software Process Improvement (SPI); Systematic Literature Review (SLR)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4957GUN5","journalArticle","2016","Kasurinen, Jussi; Smolander, Kari","Defining an Iterative ISO/IEC 29110 Deployment Package for Game Developers","International Journal of Information Technologies and Systems Approach","","1935-570X","10.4018/ijitsa.2017010106","","Software development in a small development team is a challenge, as people have to fulfill several roles, which in larger groups would have dedicated people. To help in this aspect, the ISO/IEC 29110 Lifecycle profiles for Very Small Entities has been developed to help organization and manage the workflow. However, the model presented in the ISO/IEC 29110 is rather abstract, and prominently follows the waterfall approach, even though the documents do amend agile practices as one acceptable approach. In game development this loosely defined approach is problematic, since games industry heavily relies in the agile practices with short cycles of iterations. In this article, the authors present their study of game development organizations, and describe the ISO/IEC 29110 deployment package “Highly Iterative Software Processes” which combines the Entry level model with the industry-specific requirements. In general, the definition of support for the iterative development makes the model feasible for the industry.","2016","2020-11-10 23:24:34","2020-11-10 23:24:34","","107–125","","1","10","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ULC6A9C9","journalArticle","2013","Kasurinen, Jussi; Laine, Risto; Smolander, Kari","How applicable is ISO/IEC 29110 in game software development?","Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)","","03029743","10.1007/978-3-642-39259-7_4","","Software development in a small development team is a challenge, as people have to fulfill several roles, which in larger groups would have separate, dedicated people for the work. To help small development teams to organize their activities, ISO/IEC standardization body has developed the standard ISO/IEC 29110, Lifecycle profiles for Very Small Entities. Our study focuses on the application of this model in the game industry, an industry that develops software. However, the game industry has its own set of unusual features in software development, such as the demand for artistic vision, need for novelty and demand for creative designs. In this study we analyze how the standard would work in seven different game industry companies and identify a set of additions that would help these organizations to apply the standard in practice. Based on our results, the ISO/IEC 29110 should incorporate more support for iterative development to allow easier adaptation to real-life organizations. © 2013 Springer-Verlag.","2013","2020-11-10 23:24:34","2020-11-10 23:24:34","","5–19","","","7983 LNCS","","","","","","","","","","","","","","","","","ISBN: 9783642392580","","","","game industry; game development; gameprocess; empirical study; ISO/IEC 29110; software process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9V7MMTYP","journalArticle","2019","Karre, Sai Anirudh; Mathur, Neeraj; Reddy, Y. Raghu","Is Virtual Reality Product Development different?","Proceedings of the 12th Innovations on Software Engineering Conference (Formerly Known As India Software Engineering Conference)","","","10.1145/3299771.3299772","http://doi.acm.org/10.1145/3299771.3299772","","2019","2020-11-10 23:24:34","2020-11-10 23:24:34","","1–11","","","","","","","","","","","","","","","","","","","","ISBN: 978-1-4503-6215-3","","","","Software Process; Industrial Practices; Quantitative Study; Software Development Methodology; Virtual Reality","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LIQIJDZH","journalArticle","2016","Ruonala, Henna-riikka","Agile Game Development: A Systematic Literature Review","","","","","","","2016","2020-11-10 23:24:34","2020-11-10 23:24:34","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XNP56MUD","journalArticle","2014","Wang, Alf Inge; Nordmark, Nj\aal","Software Architectures and the Creative Processes in Game Development","","","","10.1007/978-3-662-45212-7","http://link.springer.com/10.1007/978-3-662-45212-7","Urban computing systems impact quality of life in densely populated areas. With the widespread availability of wireless networks and portable devices, urban areas are fast becoming a hybrid of the physical environment and the digital datasphere. This paper describes Yasmine's Adventures, a location aware storytelling platform that leverages on urban computing strategies to create an interactive walk through the Mehringplatz area, surrounding the Jewish Museum in Berlin. Yasmine's Adventures (YA) is a mobile application that delivers a sequence of animations clips tailored specifically to the Mehringplatz neighbourhood. The story follows an adventurous local girl as she walks home alone, visiting local landmarks. Yasmine's perceptions of the landmarks, identified by community members in an earlier workshop, reflect the real concerns of the community. This interactive experience was created to engage visitors of the Jewish Museum to explore the relatively neglected streets of the area in which the museum is situated.","2014","2020-11-10 23:24:34","2020-11-10 23:24:34","","272–285","","","8770","","","","","","","","","","","","","","","","","ISBN: 978-3-662-45211-0","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/CY854XNI/Wang and Nordmark - 2015 - Software Architectures and the Creative Processes .pdf","","game development; creative software development; software ar-","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VRL8GNUJ","journalArticle","2016","Aleem, Saiqa; Capretz, Luiz Fernando; Ahmed, Faheem","Critical Success Factors to Improve the Game Development Process from a Developer's Perspective","Journal of Computer Science and Technology","","10009000","10.1007/s11390-016-1673-z","","The growth of the software game development industry is enormous and is gaining importance day by day. This growth imposes severe pressure and a number of issues and challenges on the game development community. Game development is a complex process, and one important game development choice is to consider the developer's perspective to produce good-quality software games by improving the game development process. The objective of this study is to provide a better understanding of the developer's dimension as a factor in software game success. It focuses mainly on an empirical investigation of the effect of key developer's factors on the software game development process and eventually on the quality of the resulting game. A quantitative survey was developed and conducted to identify key developer's factors for an enhanced game development process. For this study, the developed survey was used to test the research model and hypotheses. The results provide evidence that game development organizations must deal with multiple key factors to remain competitive and to handle high pressure in the software game industry. The main contribution of this paper is to investigate empirically the influence of key developer's factors on the game development process.","2016","2020-11-10 23:24:34","2020-11-10 23:24:34","","925–950","","5","31","","","","","","","","","","","","","","","","","","","","","game development process; software game; developer's perspective; empirical investigation; game developer's factor; good-quality game","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QJFCZWVP","book","2013","Shelley, Matthew; Science, Computer","On the Feasibility o f using Use Case Maps for the Prevention o f Sequence Breaking in Video Games","","978-0-494-94637-4","","","","","2013","2020-11-10 23:24:34","2020-11-10 23:24:34","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K3XGRB46","journalArticle","2013","Analytics, Game","An Introduction to Gameplay Data Visualization","","","","","","","2013","2020-11-10 23:24:34","2020-11-10 23:24:34","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PZR4XDSP","journalArticle","2014","Kasurinen, Jussi; Smolander, Kari","What do game developers test in their products?","Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM'14)","","19493770","10.1145/2652524.2652525","","© 2014 ACM. Context: Software projects often have four objectives; to produce the required functionality, in budget and in schedule, with acceptable quality. That statement may be true for most of the ordinary software development projects, but are these objectives enough for game development, where creativity and artistic aspects have a major role? Goal: We analyze how game developing organizations test their products, what are their main test objectives and how they perceive themselves in the software business. Method: We interviewed seven game development teams from different companies and studied how they test their products with grounded theory approach. Results: Our results suggest that game developers focus on soft values such as game content or user experience, instead of more traditional objectives such as reliability or efficiency. Conclusions: Game developers have similar, but not fully comparable to software industry, set of priorities in their software testing and quality assurance approaches.","2014","2020-11-10 23:24:35","2020-11-10 23:24:35","","1–10","","","","","","","","","","","","","","","","","","","","ISBN: 9781450327749","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/AGJSIKRD/Kasurinen and Smolander - 2014 - What do game developers test in their products.pdf","","survey; game development; gameprocess; empirical study; test methods; test process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R7ZP5MGA","journalArticle","2016","Politowski, Cristiano; Vargas, Daniel De; Fontoura, Lisandra M; Foletto, A","Software Engineering Processes in Game Development: a Survey about Developers' Experiences","","","","","","With the increasing participation of digital games in the economy and our society, the attention given to this subject in the academic field has also increased. However, the software engineering field and, more precisely, game development processes seems to be for-gotten by researchers. In addition, game developers and big game companies prefer to keep their processes and methodologies to themselves. Studies and professional reports have shown the "" ugly face "" behind the game industry. Crunch Times and heavy pres-sure during the development are treated as normal practices in a game developer's life. In this work, we surveyed 58 Brazilian game developers about the relations between game development process and problems in a software engineering context. We sought for answers based on empirical data collected from the questionnaire. The goal was to understand the area and provide insights to improve game development, pointing a direction for future researches. As a result, considering the Brazilian context, this paper presents three main contributions. The first shows that, on projects that used sys-tematic approaches, regardless of the type, result in better prod-ucts. The second presents that Delays, Unrealistic scope and Lack of documentation are the most common problems faced by game developers. Finally, we describe insights and considerations gath-ered from developers and literature studies, which may serve as a source of knowledge as well as characterization of the Brazilian game developers.","2016","2020-11-10 23:24:35","2020-11-10 23:24:35","","","","September","","","","","","","","","","","","","","","","","","","","","","survey; game development process; game developer ex-","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5HDAPXDA","journalArticle","2013","Ramadan, Rido; Widyani, Yani","Game development life cycle guidelines","2013 International Conference on Advanced Computer Science and Information Systems, ICACSIS 2013","","","10.1109/ICACSIS.2013.6761558","","Game is a kind of software with goal to provide entertainment. However, during the real game development practice, simply adopting the software development life cycle (SDLC) is not enough, as the developers face several challenges during its life cycle. To address the problem, game development uses a kind of specific approach called game development life cycle (GDLC) to direct the game development. However, none of the existing GDLCs explicitly address how to successfully deliver a good quality game. This paper presents a new game development life cycle model and guidelines to successfully deliver a good quality game. Several quality criterias are explicitly considered at each phase. ? 2013 IEEE.","2013","2020-11-10 23:24:35","2020-11-10 23:24:35","","95–100","","June","","","","","","","","","","","","","","","","","","ISBN: 9789791421195","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R5SHXWUD","journalArticle","2016","Barik, Titus; Murphy-Hill, Emerson; Zimmermann, Thomas","A perspective on blending programming environments and games: Beyond points, badges, and leaderboards","Proceedings of IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC","","19436106","10.1109/VLHCC.2016.7739676","","© 2016 IEEE. Programming environments and game environments share many of the same characteristics, such as requiring their users to understand strategies and solve difficult challenges. Yet, only game designers have been able to capitalize on methods that are consistently able to keep their users engaged. Consequently, software engineers have been increasingly interested in understanding how these game experiences can be transferred to programming experiences, a process termed gamification. In this perspective paper, we offer a formal argument that gamification as applied today is predominately narrow, placing emphasis on the reward aspects of game mechanics at the expense of other important game elements, such as framing. We argue that more authentic game experiences are possible when programming environments are re-conceptualized and assessed as holistic, serious games. This broad gamification enables us to more effectively apply and leverage the breadth of game elements to the construction and understanding of programming environments.","2016","2020-11-10 23:24:35","2020-11-10 23:24:35","","134–142","","","2016-Novem","","","","","","","","","","","","","","","","","ISBN: 9781509002528 Publisher: IEEE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AJ9BVAFJ","journalArticle","","Memon, Atif M","GUI Testing: Pitfalls and Process","","","","","","","","2020-11-10 23:25:01","2020-11-10 23:25:01","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"E2H3A38R","journalArticle","2010","Petrillo, Fabio; Pimenta, Marcelo","Is agility out there?","","","","10.1145/1878450.1878453","","Game development is a very complex and multidisciplinary activity and surely the success of games as one of most profitable areas in entertainment domain could not be incidentally. The goal of this paper is to investigate if (and how) principles and practices from Agile Methods have been adopted in game development, mainly gathering evidences through Postmortem Analysis (PMA). Then we describe how we have conducted PMA in order to identify the good practices adopted in several game development projects. The results are discussed, comparing similarities and differences on how these practices are taken in account in (traditional) software development and game development. Copyright 2010 ACM.","2010","2020-11-10 23:25:01","2020-11-10 23:25:01","","9","","November 2016","","","","","","","","","","","","","","","","","","ISBN: 9781450304030","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MFWYBC6V","book","2005","Schultz, Charles P; Bryant, Robert; Langdell, Tim","Game Testing All in One","","1-59200-373-7","","","","Covering roles and duties of a game tester, this in-depth text reveals how to apply software test engineer methodologies to the game industry. You'll learn how to quickly produce useful test documents, capture important data, and analyze measurements.","2005","2020-11-10 23:25:01","2020-11-10 23:25:01","","","520","","","","","","","","","","","","","","","","","","","PMID: 13950840","","","","1592003737; 9781592003730","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NNQ59KMY","journalArticle","2010","Musil, Juergen; Schweda, Angelika; Winkler, Dietmar; Biffl, Stefan","A Survey on the State of the Practice in Video Game Software Development","","","","","http://qse.ifs.tuwien.ac.at/publication/IFS-QSE-10-04.pdf","Video Game Software Development is a promising area of empirical research because our ?rst observations in industry environment identi?ed a lack of a systematic process and method support and rarely conducted/documented studies. Nevertheless, video games - speci?c types of software products - focus strongly on user interface and game design. Thus, engineering processes, methods for game construction and veri?cation/validation, and best-practices, derived from traditional software engineering, might be applicable in context of video game development. We selected the Austrian games industry as a manageable and promising starting point for systematically capturing the state-of-the practice in Video game development. In this paper we present the survey design and report on the ?rst results of a national survey in the Austrian games industry. The results of the survey showed that the Austrian games industry is organized in a set of small and young studios with the trend to ad-hoc and ?exible development processes and limitations in systematic method support.","2010","2020-11-10 23:25:01","2020-11-10 23:25:01","","13","","March","","","","","","","","","","","","","","","","","","ISBN: QSE-IFS-10/04","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9KW6ABQV","journalArticle","2004","Blow, Jonathan","Game Development Harder Than You Think","Queue","","15427730","10.1145/971564.971590","http://portal.acm.org/citation.cfm?doid=971564.971590","The hardest part of making a game has always been the engineering. In times past, game engineering was mainly about low-level optimization - writing code that would run quickly on the target computer, leveraging clever little tricks whenever possible.","2004","2020-11-10 23:25:01","2020-11-10 23:25:01","","28","","10","1","","","","","","","","","","","","","","","","","ISBN: 9781590598726","","","","gameprocess","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4A6RBB8H","journalArticle","2009","Stacey, Patrick; Nandhakumar, Joe","A temporal perspective of the computer game development process","Information Systems Journal","","13501917","10.1111/j.1365-2575.2007.00273.x","","This paper offers an insight into the games software development process from a time perspective by drawing on an in-depth study in a games development organization. The wider market for computer games now exceeds the annual global revenues of cinema. We have, however, only a limited scholarly understanding of how games studios produce games. Games projects require particular attention because their context is unique. Drawing on a case study, the paper offers a theoretical conceptualization of the development process of creative software, such as games software. We found that the process, as constituted by the interactions of developers, oscillates between two modes of practice: routinized and improvised, which sediment and flux the working rhythms in the context. This paper argues that while we may predeterminately lay down the broad stages of creative software development, the activities that constitute each stage, and the transition criteria from one to the next, may be left to the actors in the moment, to the temporality of the situation as it emerges. If all development activities are predefined, as advocated in various process models, this may leave little room for opportunity and the creative fruits that flow from opportunity, such as enhanced features, aesthetics and learning.","2009","2020-11-10 23:25:01","2020-11-10 23:25:01","","479–497","","5","19","","","","","","","","","","","","","","","","","","","","","Software development process; Computer game; Temporal structure","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K8CLXTAI","journalArticle","2012","Connolly, Thomas M.; Boyle, Elizabeth A.; MacArthur, Ewan; Hainey, Thomas; Boyle, James M.","A systematic literature review of empirical evidence on computer games and serious games","Computers and Education","","03601315","10.1016/j.compedu.2012.03.004","http://dx.doi.org/10.1016/j.compedu.2012.03.004","This paper examines the literature on computer games and serious games in regard to the potential positive impacts of gaming on users aged 14 years or above, especially with respect to learning, skill enhancement and engagement. Search terms identified 129 papers reporting empirical evidence about the impacts and outcomes of computer games and serious games with respect to learning and engagement and a multidimensional approach to categorizing games was developed. The findings revealed that playing computer games is linked to a range of perceptual, cognitive, behavioural, affective and motivational impacts and outcomes. The most frequently occurring outcomes and impacts were knowledge acquisition/content understanding and affective and motivational outcomes. The range of indicators and measures used in the included papers are discussed, together with methodological limitations and recommendations for further work in this area. © 2012 Elsevier Ltd. All rights reserved.","2012","2020-11-10 23:25:01","2020-11-10 23:25:01","","661–686","","2","59","","","","","","","","","","","","","","","","","Publisher: Elsevier Ltd","","","","Computer games; Engagement; Learning; Serious games; Skill enhancement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8LNF9JGV","journalArticle","2010","Lewis, Chris; Whitehead, Jim; Wardrip-Fruin, Noah","What went wrong: a taxonomy of video game bugs","","","","10.1145/1822348.1822363","http://portal.acm.org/citation.cfm?id=1822348.1822363","Video games are complex, emergent systems that are difficult to design and test. This difficulty invariably leads to failures being present in the game, negatively impacting the play experience of some. We present a taxonomy of possible failures, divided into temporal and non-temporal failures. The taxonomy can guide the thinking of designers and testers alike, helping them expose bugs in the game. This will lead to games being better tested and designed, with fewer failures when released.","2010","2020-11-10 23:25:02","2020-11-10 23:25:02","","108–115","","","","","","","","","","","","","","","","","","","","ISBN: 978-1-60558-937-4","","","","bug; video game; 08 where; a failure from tiger; an image of a; error; failure; fault; figure 1; jesus shot; taxonomy; woods; youtube video showing the","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QCZ5EJ3K","journalArticle","2009","Petrillo, Fábio; Pimenta, Marcelo; Trindade, Francisco; Dietrich, Carlos","What went wrong? A survey of problems in game development","Computers in Entertainment","","15443574","10.1145/1486508.1486521","","Despite its growth and profitability, many reports about game projects show that their production is not a simple task, but one beset by common problems and still distant from having a healthy and synergetic work process. The goal of this article is to survey the problems in the development process of electronic games, which are mainly collected from game postmortems, by exploring their similarities and differences to well-known problems in traditional information systems.","2009","2020-11-10 23:25:02","2020-11-10 23:25:02","","1","","1","7","","","","","","","","","","","","","","","","","ISBN: 1544-3574","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R5V7WP7Z","journalArticle","2005","Callele, D.; Neufeld, E.; Schneider, K.","Requirements engineering and the creative process in the video game industry","","","","10.1109/re.2005.58","","The software engineering process in video game development is not clearly understood, hindering the development of reliable practices and processes for this field. An investigation of factors leading to success or failure in video game development suggests that many failures can be traced to problems with the transition from preproduction to production. Three examples, drawn from real video games, illustrate specific problems: 1) how to transform documentation from its preproduction form to a form that can be used as a basis for production, 2) how to identify implied information in preproduction documents, and 3) how to apply domain knowledge without hindering the creative process. We identify 3 levels of implication and show that there is a strong correlation between experience and the ability to identify issues at each level. The accumulated evidence clearly identifies the need to extend traditional requirements engineering techniques to support the creative process in video game development. ? 2005 IEEE.","2005","2020-11-10 23:25:02","2020-11-10 23:25:02","","240–250","","","","","","","","","","","","","","","","","","","","ISBN: 0769524257","","","","video game development; domain-specific terminology; duction; elicitation; game design document; non-functional requirements; prepro-; production; when designing non-player characters; while software engi-","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZAJ2MU4I","journalArticle","2010","Lewis, Chris; Whitehead, Jim","Runtime repair of software faults using event-driven monitoring","","","","10.1145/1810295.1810352","","In software with emergent properties, despite the best efforts to remove faults before execution, there is a high likelihood that faults will occur during runtime. These faults can lead to unacceptable program behavior during execution, even leading to the program terminating unexpectedly. Using a distributed event-driven runtime software-fault monitor to repair faulty states creates an enforceable runtime specification. Using such an architecture can help ensure that emergent systems operate within specification, increasing the reliability of such software.","2010","2020-11-10 23:25:02","2020-11-10 23:25:02","","275","","","","","","","","","","","","","","","","","","","","ISBN: 9781605587196","","","","[Electronic Manuscript]; driven systems; event-; message broker; rule engine; runtime software-fault monitoring; specifications; temporal invariants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KR8J6FGT","journalArticle","2010","Callele, David; Neufeld, Eric; Schneider, Kevin","An introduction to experience requirements","Proceedings of the 2010 18th IEEE International Requirements Engineering Conference, RE2010","","","10.1109/RE.2010.55","","We consider the application of requirements engineering principles and techniques to the elicitation, capture, and representation of the output of the user experience design process. A stimulus-perception-response model is used to motivate experience requirements, defined as descriptions of user experiences that must be met (functional experiences) or are satisfaction goals (non-functional experiences). We identify potential benefits and look at experience requirements in video games. ? 2010 IEEE.","2010","2020-11-10 23:25:02","2020-11-10 23:25:02","","395–396","","","","","","","","","","","","","","","","","","","","ISBN: 9780769541624 Publisher: IEEE","","","","Experience requirements; Non-functional requirements; User experience design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PAP4AZRF","conferencePaper","2019","Zheng, Y.; Xie, X.; Su, T.; Ma, L.; Hao, J.; Meng, Z.; Liu, Y.; Shen, R.; Chen, Y.; Fan, C.","Wuji: Automatic Online Combat Game Testing Using Evolutionary Deep Reinforcement Learning","2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)","","","10.1109/ASE.2019.00077","","Game testing has been long recognized as a notoriously challenging task, which mainly relies on manual playing and scripting based testing in game industry. Even until recently, automated game testing still remains to be largely untouched niche. A key challenge is that game testing often requires to play the game as a sequential decision process. A bug may only be triggered until completing certain difficult intermediate tasks, which requires a certain level of intelligence. The recent success of deep reinforcement learning (DRL) sheds light on advancing automated game testing, without human competitive intelligent support. However, the existing DRLs mostly focus on winning the game rather than game testing. To bridge the gap, in this paper, we first perform an in-depth analysis of 1349 real bugs from four real-world commercial game products. Based on this, we propose four oracles to support automated game testing, and further propose Wuji, an on-the-fly game testing framework, which leverages evolutionary algorithms, DRL and multi-objective optimization to perform automatic game testing. Wuji balances between winning the game and exploring the space of the game. Winning the game allows the agent to make progress in the game, while space exploration increases the possibility of discovering bugs. We conduct a large-scale evaluation on a simple game and two popular commercial games. The results demonstrate the effectiveness of Wuji in exploring space and detecting bugs. Moreover, Wuji found 3 previously unknown bugs, which have been confirmed by the developers, in the commercial games.","2019-11","2020-11-10 23:34:04","2020-11-10 23:34:04","","772-784","","","","","","Wuji","","","","","","","","","","","","IEEE Xplore","","ISSN: 2643-1572","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/JZF27B5A/8952543.html; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/SG6R6KV2/Zheng et al. - 2019 - Wuji Automatic Online Combat Game Testing Using E.pdf","","","learning (artificial intelligence); Artificial Intelligence; automated game testing; automatic game testing; automatic online combat game testing; commercial games; competitive intelligence; computer games; Deep Reinforcement Learning; evolutionary computation; evolutionary deep reinforcement learning; Evolutionary Multi-Objective Optimization; game industry; Game Testing; on-the-fly game; real-world commercial game products; simple game; Wuji; Testing; Games; Reinforcement learning; Manuals; Computer bugs; Sociology; Space exploration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)","","","","","","","","","","","","","","",""
"BXG4MS7X","conferencePaper","2015","Iftikhar, S.; Iqbal, M. Z.; Khan, M. U.; Mahmood, W.","An automated model based testing approach for platform games","2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS)","","","10.1109/MODELS.2015.7338274","","Game development has recently gained a lot of momentum and is now a major software development industry. Platform games are being revived with both their 2D and 3D versions being developed. A major challenge faced by the industry is a lack of automated system-level approaches for game testing. Currently in most game development organizations, games are tested manually or using semi-automated techniques. Such testing techniques do not scale to the industry requirements where more systematic and repeatable approaches are required. In this paper we propose a model-based testing approach for automated black box functional testing of platform games. The paper provides a detailed modeling methodology to support automated system-level game testing. As part of the methodology, we provide guidelines for modeling the platform games for testing using our proposed game test modeling profile. We use domain modeling for representing the game structure and UML state machines for behavioral modeling. We present the details related to automated test case generation, execution, and oracle generation. We demonstrate our model-based testing approach by applying it on two cases studies, a widely referenced and open source implementation of Mario brothers game and an industrial case study of an endless runner game. The proposed approach was able to identify major faults in the open source game implementation. Our results showed that the proposed approach is practical and can be applied successfully on industrial games.","2015-09","2020-11-11 02:28:17","2020-11-11 02:28:17","","426-435","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/QLDBWIJP/Iftikhar et al. - 2015 - An automated model based testing approach for plat.pdf; /home/pol4ko/snap/zotero-snap/common/Zotero/storage/VTBI7KYT/7338274.html","","","program testing; computer games; Testing; Games; Industries; automated black box functional testing; automated model based testing approach; automated system-level game testing; automated test case execution; automated test case generation; Avatars; behavioral modeling; black box testing; domain modeling; endless runner game; faults identification; functional testing; game development; game structure; game test modeling; game testing; industrial games; Manuals; Mario brothers game; Model based testing (MBT); open source game implementation; oracle generation; platform games; software development industry; software fault tolerance; system-level testing; UML state machines; Unified modeling language; Unified Modeling Language; unified modeling language (UML); Usability","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS)","","","","","","","","","","","","","","",""
"GGMXPIRJ","journalArticle","","Udagawa, Hiroto; Narasimhan, Tarun; Lee, Shim-Young","Fighting Zombies in Minecraft With Deep Reinforcement Learning","","","","","","","","2020-11-17 21:55:02","2020-11-17 21:55:02","","6","","","","","","","","","","","","","en","","","","","Zotero","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/ZSI8JSI2/Udagawa et al. - Fighting Zombies in Minecraft With Deep Reinforcem.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UUY9S7YS","conferencePaper","2016","Mirza-Babaei, Pejman; Moosajee, Naeem; Drenikow, Brandon","Playtesting for indie studios","Proceedings of the 20th International Academic Mindtrek Conference","978-1-4503-4367-1","","10.1145/2994310.2994364","http://doi.org/10.1145/2994310.2994364","Creating video games is a lengthy and demanding process. Financial success for games studios often depends on making games that deliver a fun and engaging experience for a diverse audience of players. Therefore, understanding how players interact and behave during gameplay is of vital importance. Playtesting aims to assist developers to achieve their design intent and help to identify and resolve potential problem areas during development. However, playtests are not always feasible or affordable for smaller, independent game developers (indie studios) because they require specialized equipment and expertise. In addition to this, there is a lack of research on the value of playtesting for indie studios, which means most indie developers are not convinced of the value of user research and playtesting. This paper reports on our collaboration with six commercial indie developers conducting eleven rounds of playtesting session. Through these collaborations, our paper contributes to this growing domain by highlighting the value of playtesting for indie developers and discussing the user research process and approaches based on indie developers' needs and budget.","2016-10-17","2020-11-18 23:05:47","2020-11-18 23:05:47","2020-11-18","366–374","","","","","","","AcademicMindtrek '16","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","/home/pol4ko/snap/zotero-snap/common/Zotero/storage/DZ2Y4C5L/Mirza-Babaei et al. - 2016 - Playtesting for indie studios.pdf","","","game development; playtesting; user experience; games user research; case studies; indie developers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6KHRG5F8","document","","","","","","","","https://static1.squarespace.com/static/5fa3332deadd8878ac4cb2cd/t/5fe519f28e6d4012c89c62e1/1608849907222/testai_CaseStudy_Gaming_v1.3.pdf","","","2021-01-08 00:09:05","2021-01-08 00:09:14","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""