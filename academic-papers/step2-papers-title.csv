N,Description,Status,Title,Abstract
38,Lessons learned focused on QA of a mobile game development,ACCEPTED,A comprehensive approach to quality assurance in a mobile game project,"Quality assurance is an integral part of software development process. Game projects possess own distinctive traits that affect all stages of work. In this paper, we share the lessons learned during a three year-long mobile game development project. We discuss the conceptual architecture for mobile game quality assurance through the perspective of techniques that turned out to be most efficient for us, including manual testing, automated and manual runtime bug reporting, Crashlytics-supported crash analysis, automated smoke testing, and playtesting. We analyze how these activities address typical game-specific mobile development and testing issues, and why they can be recommended for game projects, as well as for wider range of mobile applications. © 2018 Association for Computing Machinery."
56,Using a model-driven approach to build multiplatform games. Not sure if has something about testing.,ACCEPTED,A model-driven approach to generate and deploy videogames on multiple platforms,"Currently, videogame development for mobile devices is a highly profitable and competitive industry worldwide. This profitability can be ascribed to the popularity that new technologies such as smartphones and tablets have acquired over the last few years. To increase competitiveness, we use a model driven engineering (MDE) approach to develop multi-platform videogames in a quick and easy manner. MDE helps us to reduce the number of errors, the amount of time required and the development costs and favors a productivity increment. The aim of this work is to present an approach for the agile development of multi-platform videogames by using high-level abstraction models. We offer a feasible solution supported by a tool that allows the development of videogames in a simple and agile way. An empirical validation is presented through a use case where the viability of our approach is shown in comparison with that of other tools. Finally, a survey shows the users' perception of the solution with the objective of validating the use case results. The given use case indicates that our approach is suitable for improving videogame development. The survey indicates that users think that it is possible to model videogames and generate the corresponding applications with our approach."
479,"Not related to game development, but they are assessing open source games and estimating their size. Might be interesting.",ACCEPTED,A Size Estimation Model for Board-Based Desktop Games,"Software size estimation plays a key role in the planning of projects at the time of project inception. This paper describes the derivation, validation, and usage of a parametric model meant for estimating the size of board-based desktop games. This model is derived using forward stepwise multiple linear regression on a data set comprising over 60 open source board-based games collected from multiple open source repositories. A variety of prediction accuracy metrics (e.g., MMRE, PRED(x), MdMRE, and so on) are used to assess this model and K-fold cross-validation is used to validate this model. Model assessment and validation exercises yield promising results. The utility of this model is demonstrated by presenting a worked-out game size estimation example followed by some size-related what-if analyses. © 2013 IEEE."
62,Introduce a process for VV&A for military training games.,ACCEPTED,"A Verification, Validation and Accreditation Framework of Military Training Games","Military training games(MTGs) have been used more and more widely within armed forces all around the world. In contrast to the commercial games, military training is the primary goal of the MTGs rather than entertainment. The application of game within the military training domain brings with it an inherent risk associated with the danger of developing erroneous or unsuitable games and thus may transform erroneous knowledge to the trainees while using the game in the military training. Aiming at this problem, this paper introduced verification, validation and accreditation (VV&A) into the MTG design and development process. By introducing VV&A into the MTG design and development process, the errors which may hidden in the intermediate products such as sponsor needs, MTG requirements specification, MTG design document, ESC can be detected. The MTG accreditation assessment influence factors and the standard accreditation decision options are also put forward in this paper. The intended object of introducing VV&A into the MTG design and development is to ensure that only correct and suitable MTG games are developed for the military training use."
480,New approach for incomplete games. Need investigation.,ACCEPTED,Abstraction refinement for games with incomplete information,"Counterexample-guided abstraction refinement (CEGAR) is used in automated software analysis to find suitable finite-state abstractions of infinite-state systems. In this paper, we extend CEGAR to games with incomplete information, as they commonly occur in controller synthesis and modular verification. The challenge is that, under incomplete information, one must carefully account for the knowledge available to the player: the strategy must not depend on information the player cannot see. We propose an abstraction mechanism for games under incomplete information that incorporates the approximation of the players' moves into a knowledge-based subset construction on the abstract state space. This abstraction results in a perfect-information game over a finite graph. The concretizability of abstract strategies can be encoded as the satisfiability of strategy-tree formulas. Based on this encoding, we present an interpolation-based approach for selecting new predicates and provide sufficient conditions for the termination of the resulting refinement loop. © Dimitrova, Finkbeiner."
81,Approach to predict/measure the difficulty of the game on-the-fly,ACCEPTED,An evaluation of difficulty heuristics in game design using simulated player,"In this paper we present our research in the area of au-thoring tools development. The over arching goal of this work is to provide mechanisms that can be used to measure the design characteristics of games. We aim to develop a framework that can offer designers ongoing informative feedback on the difficulty of a level as they build prototypes, thus allowing them to gauge their designs. We outline a number of measures, which we hypothesise can be useful in predicting the difficulty of a level. In this work we present details of our exemplar game, and the reasons for choosing it as our test bed. We incorporate a naive strategy for simulating a player's performance in any given instance of this game. In order to verify the usefulness of our measures, we undertake an extensive set of experiments using this simulated player. We present the results illustrating the relationship between our measures and the performance of the simulated player. © 2010 EUROSIS-ETI."
82,Experimental study to check the responsiveness and fault tolerance of mobile applications.,ACCEPTED,An Experimental Study on Robustness and Responsiveness Testing of Iranian Android Games,"During the last decade, many Iranian software and game developers have targeted Android as their main development framework, resulting in the availability of a large number of Android applications. Despite the opportunities that Android provides for application developers, it introduces new challenges for the development of high quality applications. In this paper, we have focused on responsiveness and fault-tolerance as two interesting quality attributes of Android applications, lack of which might result in users' dissatisfaction and leaving the application. Hence, we have conducted an experimental study, using monkey testing technique, on a set of Iranian Android games to assess their robustness and responsiveness. The results demonstrate that much more attention needs to be paid by Iranian Android developers to the responsiveness and fault-tolerance of their applications, since about 85% of the analyzed games have shown to have at least one responsiveness or robustness error."
90,Issues of requirements and testing in game development according to S.E.,ACCEPTED,Application of Volere shells as a principled approach to requirements capture and test planning for computer games,"Software Engineering is an issue of increasing importance to the games industry. This paper looks at the linked issues of requirements capture and testing, and argues that an adaptation of a modern requirements method - Volere Shells - is potentially useful to games developers as a lightweight but principled approach to addressing these issues. A simple case study will be used to illustrate the points made in this paper."
96,Methods to analyze player and AI behaviour,ACCEPTED,Believability assessment for fighting game AI,"We describe two methods of analyzing human and AI play style patterns in an arcade fighting game. The first is the application of a Turing test to study game characters' behavior. The second is the calculation of a cosine similarity between 'behavior fingerprints' consisting of sequences of individual actions or combo chains. The main goal of this study is aimed to find an approach that helps to determine the believability of game AI. Our experiments with Universal Fighting Engine environment and its built-in AI system demonstrated that both people and AI agents exhibit different play styles, and AI agents are virtually indistinguishable from human-controlled characters. © 2017 EUROSIS. All rights reserved."
131,Survey about differences on SE and GameDev. ,ACCEPTED,"Cowboys, ankle sprains, and keepers of quality: How is video game development different from software development?","Video games make up an important part of the software industry, yet the software engineering community rarely studies video games. This imbalance is a problem if video game development differs from general software development, as some game experts suggest. In this paper we describe a study with 14 interviewees and 364 survey respondents. The study elicited substantial differences between video game development and other software development. For example, in game development, cowboy coders are necessary to cope with the continuous interplay between creative desires and technical constraints. Consequently, game developers are hesitant to use automated testing because of these tests rapid obsolescence in the face of shifting creative desires of game designers. These differences between game and non-game development have implications for research, industry, and practice. For instance, as a starting point for impacting game development, researchers could create testing tools that enable game developers to create tests that assert flexible behavior with little up-front investment. © 2014 ACM."
488,Framework for automating testing in games,ACCEPTED,Crushinator: A framework towards game-independent testing,Testing game applications relies heavily on beta testing methods. The effectiveness of beta testing depends on how well beta testers represent the common game-application users and if users are willing to participate in the beta test. An automated testing tool framework could reduce the dependence upon beta testing by most companies to analyze their game applications. This paper presents the Crushinator as one such framework. This framework provides a game-independent testing tool that implements multiple testing methods that can assist and possibly replace the use of beta testing. © 2013 IEEE.
133,Reasoning about game's data.,ACCEPTED,Data analytics for game development (NIER track),"The software engineering community has had seminal papers on data analysis for software productivity, quality, reliability, performance etc. Analyses have involved software systems ranging from desktop software to telecommunication switching systems. Little work has been done on the emerging digital game industry. In this paper we explore how data can drive game design and production decisions in game development. We define a mixture of qualitative and quantitative data sources, broken down into three broad categories: internal testing, external testing, and subjective evaluations. We present preliminary results of a case study of how data collected from users of a released game can inform subsequent development. © 2011 ACM."
138,Teaching an AI in a fighting game,ACCEPTED,Deduction of fighting game countermeasures using Neuroevolution of Augmenting Topologies,"Nowadays artificial intelligence (AI) has been applied to many areas, including digital game with various genres. One of them is the fighting game. Implementation of AI in the fighting game aims to make players who are not constrained by the limiting factors which humans possess, such as speed of reflexes and hand gestures. One platform that can be used to make fighting game AI is FightingICE. This platform is official platform used in Computational Intelligence and Games (CIG) conference. One approach that can be used in the process of building the AI in the fighting game is opponent modeling, a method that utilize machine learning to make model based on the behavior of the opponent. There is one AI that utilize k-Nearest Neighbor (kNN) algorithm called MizunoAI. This AI has outstanding performance, but it suffers from inability to adjust its parameter automatically. To solve that problem, in this paper the algorithm used for modelling is changed to Neuroevolution of Augmenting Topologies (NEAT). NEAT is an algorithm with Artificial Neural Network (ANN) as basic architecture and Genetic Algorithm (GA) as the architecture optimizer. In the implementation, NEAT will receive six inputs of distance in the x-axis and y-axis, both players' hitpoints, and both players' stamina. Output of NEAT is the probability of all movements that can be done by the opponent. The entire output will be processed by a simulator to determine the best countermeasure based on the predictions. For testing, the AI made will be faced against four AI winners of CIG 2013, namely MizunoAI, Kaiju, T, and SejongAI. The results showed that the AI is capable to do well in modeling process. Although the performance is still behind the MizunoAI, the learning process can be seen along the match. © 2016 IEEE."
490,Quality model for game prototype (mobile).,ACCEPTED,Defining usability quality metric for mobile game prototype using software attributes,"The rapid growth in the development of mobile games to serve various user needs has result in a high competition of software game development industry. Usability is a major quality of mobile game product which significantly affects the player satisfaction. The usability assessment of mobil e game product which is game prototype developed during the production is result from the need of correction in an earlier stage which may help reduction in cost and time development. This research proposes an approach to define an internal usability quality metric for a mobile game prototype developed in a design phase. The proposed metric, classified from software attributes as content, device, and gameplay is defined based on the general suggested usability metric category in ISO/IEC 9126-3 standard and derived from GQM method (Goal Question Metrics). The structure and elements of the metric description are established from the ISO/IEC 15939 standard. © 2015 IEEE."
150,Evaluating the FUN of a game to assess game design heuristics.,ACCEPTED,Designing enjoyable VI deogames: Do heuristics differentiate bad from good?,"How does one design a fun video game? One way to guide design Is through the use of heuristics. Federoff (2002) compiled a list of design heuristics based on the gaming literature and interviews with game designers. However, these heuristics were not validated. The present study attempted to validate these heuristics by having participants play either a lowly or highly rated FC game. Participants were asked to provide a rating of overall enjoyment and then rate the applicability of each heuristic. Analysis of 133 participants' ratings of overall enjoyment Indicated that non-gamers felt both games were equally enjoyable while moderate and heavy gamers found the highly rated game most enjoyable. Further analyses indicated that participants considered approximately 75% of the heuristics to be more applicable to the highly rated game than the lowly rated one. The Implications for the design of new video game heuristics are discussed."
491,Teaching an AI and assess it against human players.,ACCEPTED,Developing game AI agent behaving like human by mixing reinforcement learning and supervised learning,"Artificial intelligence (AI) agent created with Deep Q-Networks (DQN) can defeat human agents in video games. Despite its high performance, DQN often exhibits odd behaviors, which could be immersion-breaking against the purpose of creating game AI. Moreover, DQN is capable of reacting to the game environment much faster than humans, making itself invincible (thus not fun to play with) in certain types of games. On the other hand, supervised learning framework trains an AI agent using historical play data of human agents as training data. Supervised learning agent exhibits a more human-like behavior than reinforcement learning agents because of imitating training data. However, its performance is often no better than human agents. The ultimate purpose of AI agents is to entertain human players. A good performance and a humanlike behavior are important factors of the AI agents, and both of them should be achieved simultaneously. This study proposes frameworks combining reinforcement learning and supervised learning and we call then separated network model and shared network model. We evaluated their performances by the game scores and behaviors by Turing test. The experimental results demonstrate that the proposed frameworks develop an AI agent of better performance than human agent and natural behavior than reinforcement learning agents. © 2017 IEEE."
159,Software-level testing method to check the quality of the game.,ACCEPTED,Development of game testing method for measuring game quality,"The quality of game is one of the factors that may stop the release of a game. Game testing can be used to measure the game quality. Unfortunately, most game testing use user-centric approach to test the quality of the game. In this paper, we propose a game testing method, which is developed from the existing game testing approach supplemented with software testing approach to measure the game quality. The game quality was derived from software engineering quality model standards and game quality model. The proposed game testing method is applied to several case studies. The case studies have demonstrated how to assess the games in order to obtain the meaningful results. The research found that the game quality results can be used by game developers to improve the game."
183,Checking if traditional software usability heuristics works on games.,ACCEPTED,Evaluating game heuristics for measuring player experience,"Usability evaluation tools in the form of heuristic lists can be very helpful in software development. In recent years, game researchers have developed heuristics aimed at special design issues within computer game design. This article examines if these game heuristics are able to capture and evaluate softer values of computer game interaction, based on the flow, challenges and immersion of game play. The authors suggest that these softer values should be called Gameworld Interaction. An analysis of the existing game heuristics was made, resulting in a Net Heuristic list, which was then tested on a single game. The result showed both a possible gap in the heuristics, and that even though the game design did adhere to the heuristics, problems still occurred."
187,Assessing game requirements.,ACCEPTED,Experience requirements in video games: Definition and testability,"A properly formed requirement is testable, a necessity for ensuring that design goals are met. While challenging in productivity applications, entertainment applications such as games compound the problem due to their subjective nature. We report here on our efforts to create testable experience requirements, the associated scope challenges and challenges with test design and result interpretation. We further report on issues experienced when performing focus group testing and provide practitioner guidance. © 2015 IEEE."
269,Issues in mobile game development. Check testing related issues.,ACCEPTED,Issues in the development of location-based games,"As new and more powerful mobile devices arrive, such as smartphones, tablets and PDAs, so do new ways of interaction emerge for the users and developers to explore. These devices allow for the creation of never-before-seen applications, using the broad range of inputs and sensors these devices integrate (such as accelerometers, light sensors, electronic compasses, GPS sensor among others), that allow for more ubiquous and personalized experiences. This paper explores issues that arise during the development and design phases of such games, as well as posible solutions for them. Finally we present, a framework for the development of location-based games that is sensible to these issues. This framework was created and tested thanks to a proof-of-concept location-based game (Geo-Wars). © 2011 Joo Tiago Pinheiro Neto Jacob and Antnio Fernando Coelho."
291,New methodology for game development.,ACCEPTED,Multi Agent Software Engineering (MaSE) and Agile Methodology for Game Development,"Agile software development methodologies has become very common in game development methodologies. However, such methodologies must be adapted to different game genres. The purpose of this paper is to investigate the existing game development methodologies and provide a new game development methodology suitable for different game genres. Furthermore, the methodology is based on both predictive and adaptive development models. A critical analysis of Agile game development methodology is presented and we identify the weakness of the current Agile game development. The Agile Agent Game Development Methodology (AAGDM) is introduced as a new hybrid methodology linking the Agent and Agile approach to create a generic game development methodology."
306,Metrics to aid gameplay testing.,ACCEPTED,Postprocessing Gameplay Metrics for Gameplay Performance Segmentation Based on Audiovisual Analysis,"This paper introduces a new variant of gameplay metrics that further develops a set of processes that expand user-centered game testing practices capable of quantifying user experiences. The key goal of the method presented here is to widen the appeal and application of game metrics within research relevant to, and representative of the wider field of game studies. In doing so, we acknowledge that the interests of this research community is often focused on player experience and performance with a broad range of off-the-shelf games that have already been released to the public. In order to be able to include any PC game system within research (or audiovideo stream, e.g., YouTube walkthroughs) our approach comprises of a postprocessing method for analyzing player performance. Through exploiting the audiovisual streams that are transmitted to the player, this approach processes content activated and generated during play and is therefore representative of individual player's encounters with specific games. © 2014 IEEE."
344,QA in scripting for games.,ACCEPTED,Quality assurance in scripting,"Most scripting platforms ignore quality assurance issues for multimedia applications. Our authoring paradigm enables formal analysis, which lets developers explore all the different situations possible during the course of a user session and ensure that the needed responses have indeed been included in the script. We successfully analyzed games from a prototype ITV demonstration script."
524,Survey with gamedevs regarding risk management practices. Investigate.,ACCEPTED,Risk management in video game development projects,"The video game software industry has a reputation for volatile, chaotic projects yet, in spite of dramatic growth in global revenues, surprisingly little academic work has examined these projects. This study reports a preliminary investigation into this under-researched area. We interviewed eight video game producers from a range of companies, using a critical incident method to explore risk management practices and risk perceptions. Our results revealed that in lieu of formal risk management practices, these managers relied on prototyping, pre-production decision points, and agile approaches to contain risk on their projects. Among the risk factors mentioned, two are specific to the unique context of video game development. The risk of failing to match the development strategy to the project was identified as a major cause of problems during the development process, and a new risk - the 'fun factor' - was a key element threatening the success of the final game release. © 2014 IEEE."
371,Redesign of a game control. Check testing practices.,ACCEPTED,Simplifying the controls of an interactive movie game,"Eight months before an interactive movie game was due to be shipped, its developers and funders decided that its user interface had to be radically simplified. The author was given the task of designing a new, simpler control scheme. The paper describes the redesign process, the design issues that arose and how they were resolved, the tests that were conducted to evaluate new design ideas, and concludes with an evaluation of the resulting design, lessons learned, and thoughts on user-interface design vs. game design."
378,Software analytics for game development.,ACCEPTED,Software analytics for digital games,"Software and its development generates an inordinate amount of data. Development activities such as check-ins, work items, bug reports, code reviews, and test executions are recorded in software repositories. User interactions that reflect how customers experience software are recorded in telemetry data, run-time traces, and log files and helps to track application and feature usage and expose performance and reliability. Software analytics takes this data and turns it into actionable insight to better inform decisions related to software. In this talk, I will summarize our efforts in the area of software analytics with a special focus on digital games. I will present several examples of games studies, which we have worked on at Microsoft Research such as how players are engaged in Project Gotham Racing, how skill develops over time in Halo Reach and Forza Motor sports, and the initial experience of game play. I will also point out important differences between games development and traditional software development. The work presented in this talk has been done by Nachi Nagappan, myself, and many others who have visited our group over the past years."
379,Challenges in gamedev.,ACCEPTED,Software engineering challenges in game development,"In Software Engineering (SE), video game development is unique yet similar to other software endeavors. It is unique in that it combines the work of teams covering multiple disciplines (art, music, acting, programming, etc.), and that engaging game play is sought after through the use of prototypes and iterations. With that, game development is faced with challenges that can be addressed using traditional SE practices. The industry needs to adopt sound SE practices for their distinct needs such as managing multimedia assets and finding the 'fun' in game play. The industry must take on the challenges by evolving SE methods to meet their needs. This work investigates these challenges and highlights engineering practices to mitigate these challenges. © 2009 IEEE."
385,SE for Gamdev.,ACCEPTED,Software engineering research for computer games: A systematic review systematic review,"Context: Currently, computer game development is one of the fastest growing industries in the worldwide economy. In addition to that, computer games are rapidly evolving in the sense that newer game versions arrive in a very short interval. Thus, software engineering techniques are needed for game development in order to achieve greater flexibility and maintainability, less cost and effort, better design, etc. In addition, games present several characteristics that differentiate their development from classical software development. Objective: This study aims to assess the state of the art on research concerning software engineering for computer games and discuss possible important areas for future research. Method: We employed a standard methodology for systematic literature reviews using four well known digital libraries. Results: Software engineering for computer games is a research domain that has doubled its research activity during the last 5 years. The dominant research topic has proven to be requirements engineering, while topics such as software verification and maintenance have been neglected up to now. Conclusion: The results of the study suggest that software engineering for computer games is a field that embraces many techniques and methods from conventional software engineering and adapts them so as to fit the specific requirements of game development. In addition to that, the study proposes the employment of more elaborate empirical methods, i.e. controlled experiments and case studies, in game software engineering research, which, have not been extensively used up to now. [All rights reserved Elsevier]."
398,Testing model for mobile games.,ACCEPTED,Study of methodology of testing mobile games based on TTCN-3,"Systematic software testing plays a critical role in software development. Various approaches have been proposed and developed, but software testing is still far from maturity. A very promising strategy is model-based testing that is aimed to automatically generate test cases and evaluate test results based on the software models that specify the behavior of the software under test. In this paper, we propose a general rule model for mobile games by combining the features of the game software and the Wireless Application Protocol. We also build an adjusted model for generating test cases with the characteristics of mobile game software. A series of patterns are created to facilitate the generation of TTCN-3 test suite and test case. A case study on the Fruit Machine game is discussed to illustrate the use of the proposed model for software testing."
400,Regarding updates. Investigate a motivation for testing.,ACCEPTED,Studying the urgent updates of popular games on the Steam platform,"The steadily increasing popularity of computer games has led to the rise of a multi-billion dollar industry. This increasing popularity is partly enabled by online digital distribution platforms for games, such as Steam. These platforms offer an insight into the development and test processes of game developers. In particular, we can extract the update cycle of a game and study what makes developers deviate from that cycle by releasing so-called urgent updates. An urgent update is a software update that fixes problems that are deemed critical enough to not be left unfixed until a regular-cycle update. Urgent updates are made in a state of emergency and outside the regular development and test timelines which causes unnecessary stress on the development team. Hence, avoiding the need for an urgent update is important for game developers. We define urgent updates as 0-day updates (updates that are released on the same day), updates that are released faster than the regular cycle, or self-admitted hotfixes. We conduct an empirical study of the urgent updates of the 50 most popular games from Steam, the dominant digital game delivery platform. As urgent updates are reflections of mistakes in the development and test processes, a better understanding of urgent updates can in turn stimulate the improvement of these processes, and eventually save resources for game developers. In this paper, we argue that the update strategy that is chosen by a game developer affects the number of urgent updates that are released. Although the choice of update strategy does not appear to have an impact on the percentage of updates that are released faster than the regular cycle or self-admitted hotfixes, games that use a frequent update strategy tend to have a higher proportion of 0-day updates than games that use a traditional update strategy."
405,A methodology for game development to facilitate the comunication between different roles in the team.,ACCEPTED,Supporting team work in game design: Better - Better team relationships,"Developing a video game is a costly activity, not only from an economic perspective, but also in terms of the time devoted to researching innovative solutions and managing interfaces between the creative and technical team members. In this article, we explore the possibility to use an approach rooted into AI techniques (namely Behaviour Trees) to help establish a lingua franca between these two different functions, in order to optimize both the development time and the quality of the final product. In particular, we have developed BETTER, a middleware which can be easily embedded into any game engine, and tested it during the design and development of Crazy-Hill, a commercial video game for iOS-based mobile devices."
529,Study about game jams. Might (unlike) have something interesting to get here.,ACCEPTED,Synthesized essence: What game jams teach about prototyping of new software products,"The development of video games comprises engineering teams within various disciplines, e.g., software engineering, game production, and creative arts. Game jams are a promising approach for (software+) development projects to foster on new product development. This paper evaluates the concept of game jam, a community design/development activity, and its positive effects on new software product development with tight schedules in time-oriented, competitive environments. Game jams have received more public attention in recent times, but the concept itself has not been formally discussed so far. A game jam is a composition of design and development strategies: new product development, participatory design, lightweight construction, rapid experience prototyping, product-value focusing, aesthetics and technology, concurrent development and multidisciplinarity. Although game jams are normally used for rapid prototyping of small computer games, the constellation of the mentioned elements provides a powerful technique for rapidly prototyping new product ideas and disruptive innovations. © 2010 ACM."
432,SE for Gamdev.,ACCEPTED,The whats and the whys of games and software engineering,"The intersection of video games and software engineering is not yet well understood. This paper highlights the varied and exciting opportunities available at the intersection of these two disciplines. We investigate four main areas: the development of games, how they are designed, how middleware supports the creative process and how games are tested. We hope that it inspires readers to take on the challenges available in games and software engineering, and join together to create a vibrant community. © 2011 ACM."
534,V&V not testing in games. Investigate something interesting.,ACCEPTED,Towards using devs for modelling adaptive storytelling in virtual games,"For the last decades, Verification and Validation techniques have been well improved in order to make safer complex systems. Sophisticated algorithms and methodologies have been proposed in the domain of formal modelling, and simulation. However, like for testing approaches, all these methodologies suffer from a strong weakness, while they depend on specifications, use cases and test scenarios. Indeed, if the experimental frame is not well-defined, modelling and simulation necessarily lack in accuracy. To overcome this challenge, a solution consists of automatically generate validated scenarios during the simulation, by considering the experimental frame also as a simulation model. Because this problem is similar to the adaptation of the stories in virtual worlds, this paper propose to explore a way to model adaptive storytelling in virtual games using the DEVS formalism. © 2018 Society for Modeling & Simulation International (SCS)."
453,Using sensors to understand the players behaviour.,ACCEPTED,"Using eye gaze, head pose, and facial expression for personalized non-player character interaction","True immersion of a user within a game is only possible when the world simulated looks and behaves as close to reality as possible. This implies that the game must ascertain, among other things, the user's focus and his/her attitude towards the object or person focused on. As part of the effort to achieve this goal, we propose an eye gaze, head pose, and facial expression system for use in real-time games. Both the eye gaze and head pose components utilize underlying 3D models, while the expression recognition module uses the effective but efficient LBP-TOP approach. We then demonstrate the utility of this system in a test application wherein the user looks at one of three non-player characters (NPC) and performs one of the 7 prototypic expressions; the NPC responds based on its personality. To increase the speed and efficiency of the system, the eye gaze and expression recognition modules leverage CUDA and GLSL pixel shaders. © 2011 IEEE."
465,SE for Gamdev.,ACCEPTED,"What Concerns Game Developers? A Study on Game Development Processes, Sustainability and Metrics","It can be argued, that software development and game development share a number of features in their process models, such as the need to design, develop and test software functionalities. However, while the software engineering (SE) models work successfully supporting the software development, their practical application for game development is frequently unsuccessful. To understand this problem and number of other aspects such as Green IT and business models, we conducted a survey with the game industry organizations. Based on our observations on the SE practices, the game industry applies mostly the agile process models or nothing at all, their major concerns for business were mobile development, digital marketing, employees with specific abilities and keeping innovation in their business, and their minor concerns were eco-impact elements, software reusability and financing. Based on our results, we identified areas which would warrant more studies to support the game industry practices, eco-aspects and business."
468,SE for Gamdev.,ACCEPTED,What do game developers expect from development and design tools?,"Context: Development of software is a complex process with several stakeholders and their varying practices. The game industry has also additional requirements such as artistic presentation, an interesting story and high quality sound effects that further complicate the process. Objective: The objective of this paper is to understand what kind of requirements and expectations are attached to the technical infrastructure of game development in practice. Method: This study observed and qualitatively analyzed seven game-developing organizations, from recent startups to established organizations to allow comparison of their use of technical infrastructure. Results: Based on our study, the game organizations, regardless of their size, are generally pleased with the tools they apply. The selections of the applied tools are based on their ability to test concepts and build prototypes to help design. Conclusion: In general, the game development organizations expect their tools to allow adaptability to changes during the development process. The case companies did not seem to have many problems with their current technical infrastructure, and ability to test different solutions was considered very important feature. Copyright 2013 ACM."
470,MVP for gamedev.,ACCEPTED,What is a minimum viable (video) game?,"The concept of `Minimum Viable Product' (MVP) is largely adapted in the software industry as well as in academia. Minimum viable products are used to test hypotheses regarding the target audience, save resources from unnecessary development work and guide a company towards a stable business model. As the game industry is becoming an important business domain, it is not surprise that the concept has been adopted also in the game development. This study surveys how a Minimum Viable Game (MVG) is defined, what is reported in extant literature as well as present results from a small case study survey done to nine game development companies. The study shows that despite popularity of minimum viable games in the industrial fora, the presented views on the concept are diverged and there is lack of practical guidelines and research supporting game companies. This study points out research gaps in the area as well as calls for actions to further develop the concept and to define guidelines."
34,Technique for testing that uses a game,REJECTED,A chess rating system for evolutionary algorithms: A new method for the comparison and ranking of evolutionary algorithms,"The Null Hypothesis Significance Testing (NHST) is of utmost importance for comparing evolutionary algorithms as the performance of one algorithm over another can be scientifically proven. However, NHST is often misused, improperly applied and misinterpreted. In order to avoid the pitfalls of NHST usage this paper proposes a new method, a Chess Rating System for Evolutionary Algorithms (CRS4EAs) for the comparison and ranking of evolutionary algorithms. A computational experiment in CRS4EAs is conducted in the form of a tournament where the evolutionary algorithms are treated as chess players and a comparison between the solutions of two algorithms on the objective function is treated as one game outcome. The rating system used in CRS4EAs was inspired by the Glicko-2 rating system, based on the Bradley-Terry model for dynamic pairwise comparisons, where each algorithm is represented by rating, rating deviation, a rating/confidence interval, and rating volatility. The CRS4EAs was empirically compared to NHST within a computational experiment conducted on 16 evolutionary algorithms and a benchmark suite of 20 numerical minimisation problems. The analysis of the results shows that the CRS4EAs is comparable with NHST but may also have many additional benefits. The computations in CRS4EAs are less complicated and sensitive than those in statistical significance tests, the method is less sensitive to outliers, reliable ratings can be obtained over a small number of runs, and the conservativity/liberality of CRS4EAs is easier to control. © 2014 Elsevier Inc. All rights reserved."
79,Gaming approach to personal development.,REJECTED,An Approach for Professional Development. Triad Gaming Techniques in Simulation,"Simulation covers a wide range of approaches and methods; from those grounded in abstract computational (gaming) techniques to highly people-based situational role playing. These approaches may be seen as delineating extreme ends of a spectrum. While computational modeling is now most frequently linked with digital technology, readers should be aware that earlier analog approaches, including pencil and paper mathematical modeling, existed and produced a high level of valid and reliable data. In the last century, various ingenious devices such as a hydraulic model of the British economy were developed. Curriculum enhancements in health care and related disciplines have placed increasing emphasis upon the skills and attributes of trainee clinicians, and these are best developed in a context, which simulates in a realistic fashion, encounters between practitioner and patient. Gaming simulation using the triad approach has demonstrated significant advantages in specific areas of professional development. It is likely to be most effective when the participants, though in role, are playing themselves. The potential low cost is an additional benefit, as is the likelihood of it being a low risk but highly effective technique. At the heart of a successful encounter is the concept of experiential learning, and reflective practice. © 2008 Elsevier Inc. All rights reserved."
492,Creating a game to address the cognitive aspects of the players.,REJECTED,Development computer games on the Unity game engi for research of elements of the cognitive thinking in the playing process [Розробка ігор на ігровому рушії Unity для дослідження елементів когнітивного мислення в ігровому процесі],"The purpose of this study is development of computer games for research of elements of the cognitive thinking on the Unity game engine. Objectives of study: to analyze the actual methods of evaluation of cognitive functions of man, to work out algorithms and to create programmatic realization of evaluation of cognitive capabilities by means of game. The object of research are computer games. The subject of research: research of elements of the cognitive capabilities of man in the playing process. Results of the study is developed computer games for research of cognitive thinking of man in playing process. © 2018 CEUR-WS. All Rights Reserved."
165,Solution for network multiplayer concerns.,REJECTED,Distributed DeepThought: Synchronising complex network multi-player games in a scalable and flexible manner,"We propose a solution to avoid stability, security and performance concerns in multi-player games. This should lead to greater scalability in existing multi-player games but could also provide a way to implement multi-player functionality in an existing single-player game whilst ensuring the code-base stays organised and robust without requiring large modifications to the existing architecture. The ideas presented in this publication aim to provide a scalable solution not just to the end product but also to the code base in order to ensure greater ease in future maintainability and expansion. © 2013 IEEE."
497,Not related to game development.,REJECTED,ECSE: A pseudo-SDLC game for software engineering class,"Software development is uniquely different especially when compared to other engineering processes. The abstractness of software products has a major influence on the entire software development life cycle, which results in a number of uniquely important challenges. This chapter describes and discusses Engineering Construction for Software Engineers (ECSE), an effective workshop that helps software engineering students to understand some of these critical issues within a short period of time. In this workshop, the students are required to develop a pseudo-software product from scratch. They could learn about unique characteristics and risks of software development life cycle as well as other distinctive phenomenon through the activities. The workshop can still be easily followed by students who are not familiar with certain software development processes such as coding or testing. © 2018 by IGI Global. All rights reserved."
2,Using sensors to understand the players behaviour.,REJECTED,Ensemble': Playing with sensors and sound,This paper presents a set of sensor driven sonic prototypes and the workshops in which they are played with by children in games of dressing up. Seven garments are fitted with wireless sensors that control sound samples and their modifiers in real time. The aim of the project is to capture the children's emerging understanding of the sensors as they explore and play and in the longer term inform the use of analog sensing in touchable interfaces. The system is described and observations from the first workshops are reported. The paper concludes with a short discussion and conclusions regarding both the system itself and the methods used. © 2004 ACM.
202,Automatic approach to tune parameters in game environments.,REJECTED,Fine-tuning parameters for emergent environments in games using artificial intelligence,"This paper presents the design, development, and test results of a tool for adjusting properties of emergent environment maps automatically according to a given scenario. Adjusting properties for a scenario allows a specific scene to take place while still enables players to meddle with emergent maps. The tool uses genetic algorithm and steepest ascent hill-climbing to learn and adjust map properties.Using the proposed tool, the need for time-consuming and labor-intensive parameter adjustments when setting up scenarios in emergent environment maps is greatly reduced. The tool works by converting the paths of events created by users (i.e., the spreading of fire and the flow of water) for a map to the properties of the map that plays out the scenario set by the given paths of events. Vital event points are preserved while event points outside the given scenario are minimized. Test results show that the tool preserves more than 70 percent of vital event points and reduces event points outside given scenarios to less than 3 percent."
207,Modeling the players behaviour.,REJECTED,"Friends and buffaloes: One game, two modelling processes","Starting from a simple gaming-simulation experiment about the management of a common resource, two modelling experiments were conducted in different settings. In the first experiment, the game was played by farmers and the modeller subsequently inferred a model from behaviour observed during the game. In order to address the validation problems underlying this type of modelling, a new experiment was conducted, in which computer science students played the game and then 'self-modelled' their behaviour. We shall present, compare, and discuss both these modelling processes. We show that self-modelling facilitated a better understanding of the players' behaviours, although it is not a complete solution. © 2008, IGI Global."
213,Using prototyping to create a game.,REJECTED,Gambit: a prototyping approach to video game design,"The design of a video game using a prototyping language is discussed. The emphasis is on the problems encountered in user interaction, graphical representation, simulation, and real-time control. The approach taken was that the language and its execution environment should closely parallel the player's perception of the video game universe. The result of these efforts, called Gambit, is a high-level machine-independent language and an accompanying runtime environment. The simple notions of type, type extension, asynchronous control, and object interactions allow a Gambit programmer to express a complex game design without focusing energy on implementation details peripheral to the central idea of the game. A compiler for a significant subset of Gambit has been implanted and run in the Smalltalk programming environment."
217,Using AI to predict the players strategy using previous data.,REJECTED,Game Player Strategy Pattern Recognition by using Radial Basis Function,"Pattern recognition has been successfully used in different application areas, its application on identifying player's strategy during the gameplay which is called Player Strategy Pattern Recognition (PSPR), is another interesting area. PSPR can greatly improve game AI's adaptability, and as a result the entertainment of game is promoted. In this paper, Pac-Man game is used as a test-bed. Kernel classifier of Radial Basis Function (RBF) is chosen to analyze off-line data from gamers who are choosing different strategies, in other words the classifiers are trained with sample data from players using different strategies. The method attempts to use the trained classifier to predict strategy pattern of a future player based on the data captured from its gameplay. This paper presents the basic principle of the PSPR by using the RBF theoretic approach and discusses the results of the experiments. © 2008 IEEE."
503,No related to game development.,REJECTED,GATE: Game-based testing environment,"In this paper, we propose a game-based public testing mechanism called GATE. The purpose of GATE is to make use of the rich human resource on the Internet to help increase effectiveness in software testing and improve test adequacy. GATE facilitates public testing in three main steps: 1) decompose the test criterion satisfaction problem into many smaller sub-model satisfaction problems; 2) construct games for each individual sub-models and presenting the games to the public through web servers; 3) collect and convert public users' action sequence data into real test cases which guarantee to cover not adequately tested elements. A preliminary study on apache-commons-math library shows that 44% of the branches have not been adequately tested by state of the art automatic test generation techniques. Among these branches, at least 42% are decomposable by GATE into smaller sub-problems. These elements naturally become the potential targets of GATE for public game-based testing. © 2011 Author."
248,Understanding the player behaviour by observing him playing.,REJECTED,Immersion and gameplay experience: A contingency framework,"The nature of the relationship between immersion and gameplay experience is investigated, focusing primarily on the literature related to flow. In particular, this paper proposes that immersion and gameplay experience are conceptually different, but empirically positively related through mechanisms related to flow. Furthermore, this study examines gamers' characteristics to determine the influence between immersion and gameplay experiences. The study involves 48 observations in one game setting. Regression analyses including tests for moderation and simple slope analysis are used to reveal gamers' age, experience, and understanding of the game, which moderate the relationship between immersion and gameplay experience. The results suggest that immersion is more positive for gameplay experience when the gamer lacks experience and understanding of the game as well as when the gamer is relatively older. Implications and recommendations for future research are discussed at length in the paper. Copyright © 2010 Daniel Ortqvist and Mats Liljedahl."
254,Usign games to aid software engineering.,REJECTED,Improving software projects inception phase using games: ActiveAction workshop,"Studies have demonstrated that an important factor to increase the success rate of software projects is the involvement of key stakeholders at the right time, in order to define business objectives, scope of the project and requirements. The Inception phase of projects is in charge to provide these outcomes and is suitable to really involve stakeholders as team members because of the non-technical nature of the activities. However, since the stakeholders' involvement is a time- and money-consuming activity, it is important to maximize its efficiency. With that in mind, ludic aspect inherent to games can be used as a strategy to optimize the Inception phase. This paper presents ActiveAction, a game-based workshop used as an alternative for the software project's Inception phase in order to increase its effectiveness and improve the stakeholders' involvement in the project. ActiveAction combines classical and game-based techniques which permit a deep involvement of stakeholders and a collaborative identification of objectives, constraints and risks during an intensive workshop oriented to project conceptualization. ActiveAction workshop resulted in a successful game-based strategy that has improved the Inception phase of 19 projects with different customers. After-workshop surveys, projects outcomes and customer satisfaction indicate validity of the method. ActiveAction is a valuable game-based alternative to carry out the Inception phase in a software project. It makes possible to get an important amount of information, directly from key stakeholders in a short period of time increasing the success rate of projects."
259,No related to testing.,REJECTED,Indirect Network Effects and Platform Dominance in the Video Game Industry: A Network Perspective,"Going beyond the traditional conceptualization of indirect network effects as the number of complements available, this study analyzes how the network positions of platforms and complementors explain platform dominance. We use data from the U.S. home video game industry between 2002 and 2006 to test our model of platform dominance. While the impact of degree of links with complementors representing the number of complements is significant, our study also finds that platform dominance is positively influenced by support from a greater breadth of titles by complementors and lesser degree of overlap with other platforms. We also find that ties with high-status complementors influence platform dominance, but this impact decreases with platform age. Our results suggest benefits to refine our conceptualization of indirect network effects from a network perspective. The managerial implications are that each platform provider needs to differentiate its platform by attracting high-status developers and by providing third-party developers with toolkits that encourage them to develop exclusive titles."
508,Not related to games.,REJECTED,Investigating the design process: Participatory design in agile software development,"Purpose: This paper aims to explore a case of customer and user participation in an agile software development project, which produced a tailor-made information system for workplace support as a step towards a theory of participatory design in agile software development. Design/methodology/approach: Based on an integrated framework for user participation derived from the participatory design literature the research was performed as a case study and semi-structured, open-ended interviews were conducted with about a third of the development team and with a representative sample of key players and future users in the customer organization. The interview data were supplemented with company and project documents. Findings: The paper found genuine customer and user participation carried out by onsite customers and by other operational staff in the form of direct and indirect participation and with functional and democratic empowerment. The onsite customers played informative, consultative and participative roles. The analysis revealed that planning games, user stories and story cards, working software and acceptance tests structured the customer and user participation. This form of user participation supported a balance between flexibility and project progress and resulted in a project and a product which were considered a success by the customer and the development organization. The analysis showed that the integrative framework for user participation can also fruitfully be used in a new context to understand what participatory design is and how, when and where it can be performed as an instance of a design process in agile development. As such the paper contributes to an analytical and a design theory of participatory design in agile development. Furthermore the paper explicates why participatory design contributes to the successful completion of the investigated project. By drawing on innovation theory it was found that participatory design in agile development bears the characteristics of a successful organizational innovation. Grounding further explanations in complex adaptive systems theory the paper provides an additional argument why participatory design despite some identified challenges fosters project staff to successfully carry out the agile development project. Originality/value: The paper presents an exploratory, empirical study of an understudied phenomenon and contributes to theory building. © Emerald Group Publishing Limited."
267,Not related to testing.,REJECTED,Is the resource-based 'view' a useful perspective for SHRM research? The case of the video game industry,"The purpose of this paper is to present the results of an exploratory empirical research carried out in 2001-2002, amongst 20 firms in the French video game industry. The objective of this research was to analyse the SHRM of these companies and to test the relevance of the Resource Based View of the firm, which states that Human Resources are all the more crucial for a given firm as they are specific, non imitable and socially complex (Coff, R. (1997) Academy of Management Review, Vol. 22, No. 2, pp.374-402.). On the basis of semi-directive interviews of HR operators, the stake was to characterise the HR practices of each company in connection with its strategy and development stage. We thus obtained a snapshot of SHRM's various profiles existing in this sector. We further analyse the possible rationales to explain a paradoxical finding: video games companies, as they grow, tend to get rid of their specific, socially complex and causally ambiguous assets (namely the creative skills) in favour of more generic set of skills (namely, the management skills). Copyright © 2005 Inderscience Enterprises Ltd."
280,Using game-logs to improve the player experience.,REJECTED,Mining experiential patterns from game-logs of board game,"In board games, game-logs record past game processes, which can be regarded as an accumulation of experience. Similar to a real person, a computer player can gradually increase its skill by learning from game-logs. Therefore, the game becomes more interesting. This paper proposes an extensible approach to mine experiential patterns from increasing game-logs. The computer player improves its strategies by utilizing these growing patterns, just as it acquires experience. To evaluate the effect and performance of the approach, we designed a sample board game as a test platform and elaborated an experiment consisting of a series of tests. Experimental results show that our approach is effective and efficient. © 2015 Liang Wang et al."
296,Model checking tool.,REJECTED,On-the-fly techniques for game-based software model checking,"We introduce on-the-fly composition, symbolic modelling and lazy iterated approximation refinement for game-semantic models. We present MAGE, an experimental model checker implementing this new technology. We discuss several typical examples and compare MAGE with BLAST and GAMECHECKER, which are the state-of-the-art tools in on-the-fly software model checking, and game-based model checking."
297,Not related to game.,REJECTED,Online model-based testing under uncertainty,"Modern software systems are required to operate in a highly uncertain and changing environment. They have to control the satisfaction of their requirements at run-time, and possibly adapt and cope with situations that have not been completely addressed at design-time. Software engineering methods and techniques are, more than ever, forced to deal with change and uncertainty (lack of knowledge) explicitly. For tackling the challenge posed by uncertainty in delivering more reliable systems, this paper proposes a novel online Model-based Testing technique that complements classic test case generation based on pseudo-random sampling strategies with an uncertainty-aware sampling strategy. To deal with system uncertainty during testing, the proposed strategy builds on an Inverse Uncertainty Quantification approach that is related to the discrepancy between the measured data at run-time (while the system executes) and a Markov Decision Process model describing the behavior of the system under test. To this purpose, a conformance game approach is adopted in which tests feed a Bayesian inference calibrator that continuously learns from test data to tune the system model and the system itself. A comparative evaluation between the proposed uncertainty-aware sampling policy and classical pseudo-random sampling policies is also presented using the Tele Assistance System running example, showing the differences in achieved accuracy and efficiency."
300,Ontology for game development. Not related to testing.,REJECTED,Ontology-Based Domain Analysis for Model Driven Pervasive Game Development,"Domain Analysis (DA) plays an important role in Model Driven Development (MDD) and Domain-Specific Modeling (DSM). However, most formal DA methods are heavy weight and not practical sometimes. For instance, when computer games are developed, the problem domain (game design) is decided gradually within numerous iterations. It is not practical to fit a heavy-weight DA in such an agile process. In this research, we propose a light-weight DA which can be embedded in the original game development process. The DA process is based on a game ontology which serves for both game design and domain analysis. In this paper, we introduce the ontology and demonstrate how to use it in the domain analysis process. We discuss the quality and evaluate the ontology with a user acceptance survey. The test result shows that most potential users considered the ontology useful and easy to use."
518,Strategy to choose which mobile platform to test according with the reviews.,REJECTED,Prioritizing the devices to test your app on: A case study of android game apps,"Star ratings that are given by the users of mobile apps directly impact the revenue of its developers. At the same time, for popular platforms like Android, these apps must run on hundreds of devices increasing the chance for device-specific problems. Devicespecific problems could impact the rating assigned to an app, given the varying capabilities of devices (e.g., hardware and software). To fix device-specific problems developers must test their apps on a large number of Android devices, which is costly and inefficient. Therefore, to help developers pick which devices to test their apps on, we propose using the devices that are mentioned in user reviews. We mine the user reviews of 99 free game apps and find that, apps receive user reviews from a large number of devices: between 38 to 132 unique devices. However, most of the reviews (80%) originate from a small subset of devices (on average, 33%). Furthermore, we find that developers of new game apps with no reviews can use the review data of similar game apps to select the devices that they should focus on first. Finally, among the set of devices that generate the most reviews for an app, we find that some devices tend to generate worse ratings than others. Our findings indicate that focusing on the devices with the most reviews (in particular the ones with negative ratings), developers can effectively prioritize their limited Quality Assurance (QA) efforts, since these devices have the greatest impact on ratings. Copyright 2014 ACM."
310,Game to aid SE.,REJECTED,Problems in modeling the software development process as an adventure game,"SESAM (Software Engineering Simulation by Animated Models) is a simulator for practicing the role of a software project manager. Its long term goal is to provide a tool for training CS students. As a research project, SESAM calls for an integrated model of the software development process, reflecting and quantifying many phenomena observed in real software projects. We are currently using the second prototype, which can already demonstrate some rational behaviour. More important, however, were our observations in the process of constructing SESAM. They shed light on the current state of software engineering, and on the applicability of metrics. SESAM is being developed in an evolutionary style by the Software Engineering Department (Lehrstuhl) at Stuttgart University; it is implemented in Smalltalk-80 on Unix-Workstations. This paper concentrates on the fundamental questions raised by the work on SESAM. A more complete description of our work has been published before (Ludewig et al., 1992). © Springer-Verlag Berlin Heidelberg 1993."
341,GameDev technique (GDD) to aid SE.,REJECTED,Proposal of Game Design Document from software engineering requirements perspective,"The Game Design Document (GDD) plays a key role in the design phase of every game development. A poorly elaborated GDD can lead to rework and loss of investment in production and postproduction phases. To address these issues, an analysis of several available GDDs found in the literature was performed, contrasting our findings with the best practices from Software Requirements Specification (SRS). Our improved GDD incorporates a common understanding of terms, quality assurance, decision making, definition of relations, boundaries, limitations and knowledge of game elements. Finally, our GDD is put side by side with a commercial GDD."
372,Gaming platforms to test algotithms,REJECTED,Simulating fusion algorithms with gaming platforms,"We discuss issues in testing various cognitive fusion algorithms for situation management. We provide a proof-of-principle discussion and demo showing how gaming technologies and platforms could be used to devise and test various fusion algorithms, including input, processing, and output, and we look at how the proof-of-principle could lead to more advanced test beds and methods for high-level fusion in support of situation management. We develop four simple fusion scenarios and one more complex scenario in which a simple rulebased system is scripted to govern the behavior of battlespace entities. We conclude that the proof-of-principle warrants further work to experiment with various high-level fusion algorithms and more complex scenarios for simulation exercises."
375,New immersion technology.,REJECTED,Smelling screen: Technique to present a virtual odor source at an arbitrary position on a screen,"A new olfactory display that can present a virtual odor source at an arbitrary position on a two-dimensional screen is proposed in this paper. The proposed device can give a sensation that an odor is emanating from a certain position on the screen. Fans are placed at the four corners of the screen. The airflows generated by the fans are deflected multiple times by making them collide with each other, and are finally directed toward the user from the position of a virtual odor source on the screen. By introducing odor vapor into the airflows, the odor is spread from the virtual odor source toward the user. The position of the virtual odor source can be shifted to an arbitrary position on the screen by adjusting the balance of the airflows from the four fans. The user can freely move his/her head and sniff at various locations. Potential applications of the proposed device include digital signage, video games, and exhibitions in museums. The result of odor-distribution measurement is presented here to show the validity of the device design. © 2012 IEEE."
381,Creating a game.,REJECTED,Software engineering challenges of multi-player outdoor smartphone games,"Physical inactivity and social isolation are the demons of computer gaming. To combat these and similar problems, my goal is to create attractive game experiences that require play outdoors, encourage multi-player interaction, and incorporate vigorous physical activity inherently. However, play outdoors in large scale naturalistic environments, using only the equipment (e.g., smartphones) people normally carry with them in the world, brings new challenges to game design. Gone is the central server that coordinates all activities and manages evolution of the game state; gone is perfect communication among all players at all times; and gone are specialized sensors and controllers purpose built for games. This paper lays out the motivation for this style of gaming, as well as the challenges we face in engineering them, from requirements capture through design, coding, and validation. Finally, I summarize first steps that have already been taken and hint at future directions. © 2011 ACM."
413,Game as a method to testing software,REJECTED,"Testing, optimizaton, and games","We discuss algorithmic problems arising in the testing of reactive systems, i.e. systems that interact with their environment. The goal is to design test sequences so that we can deduce desired information about the given system under test, such as whether it conforms to a given specification model, or whether it satisfies given requirement properties. Test generation can be approached from different points of view - as an optimization problem of minimizing cost and maximizing the effectiveness of the tests; as a game between tester and system under test; or as a learning problem. We touch on some of these aspects and related algorithmic questions."
427,Showing off the game engine,REJECTED,The Panda3D graphics engine,"Panda3D is a platform-agnostic, networked, display architecture designed to be flexible enough to support everything from real-time graphics applications to the development of high-end virtual reality theme park attractions or video games. Wherever possible, Panda uses standard programming tools and techniques, thus decreasing learning curve for new Panda programmers and making the engine more adaptable to advances in compilers, graphics, and other related components. It also uses the Python scripting language as an interface to C+++ libraries. This allows for rapid prototyping, which shortens development time and improves quality."
437,About mobile toolkits in games.,REJECTED,Toolkits for open innovation - The case of mobile phone games,"User toolkits enable consumers to develop customized product applications without having dedicated technical knowledge. Applied in the field of handheld computing, toolkits are a very powerful instrument to meet the growing demand for customized mobile applications. In this paper, the theoretical principles and functionalities of user interaction toolkits are translated into a technical software concept for mobile phone games. The presented toolkit is a new internet based application allowing users to create a customized game on their desktop computer and to transfer it to handheld devices. In contrast to well known open source software development projects, no programming expertise is required. Thus, participation of innovative users is comparatively easy. In line with the open source concept, but as an extending feature to the toolkit approach, the presented solution is embedded in an online community. Thus, contributions by innovative users can be stored in a library leading to a continuously growing information pool of available components. Games and components can be passed on easily between customers, facilitating the adoption of other users' contributions as well as collaborative development between users. The community feature of the toolkit does not only provide the common toolset of online communities allowing for user-to-user communication, e.g. chats and bulletin boards, or text based contributions, e.g. recommendations, product evaluations and voting tools, but it also enables users to exchange and jointly develop actual product prototypes. In this regard, the presented 'toolkit for open innovation' will be the foundation of a 'value web' in a unique manner: a value web in between consumers and users. The paper further derives economic benefits of the developed toolkit for mobile phone game creation theoretically and integrates them into a diversified business model. The toolkit as a distinct performance feature has the potential to establish a social environment for its most enthusiastic users and thereby to strengthen user relationships with the provider and increase overall business success."
531,Not about games.,REJECTED,Towards a methodology for validating emergent behavior simulations,"As game technology becomes more widely used in defense, emergency response, and commercial simulations, validating these simulations will become increasingly important. Complex systems, emergent behavior, and rapid update cycles make validation simulations in this environment particularly challenging. Standard approaches to validation fall short of achieving the desired results for the complex behaviors generated human behavior models and agent based simulations. A methodology is needed that will provide effective VV&A for these complex behavior models. This paper outlines necessary requirements leading toward an approach for developing an effective validation process for behavior generation software and addresses the capabilities and limitations of vali-dation for the developed simulations."
533,Not about testing games.,REJECTED,Towards immersive multimodal gameplay,"We describe a computer game design that employs interface mechanisms fostering a greater sense of player immersion than is typically present in other games. The system uses a large-scale projection display, video-based body position tracking, and bimanual gestural input for interaction. We describe these mechanisms and their implementation in detail, highlighting our user-centered design process. Finally, we describe an experiment comparing our interaction mechanisms with conventional game controllers. Test subjects preferred our interface overall, finding it easier to learn and use."
540,Not related to gamedev.,REJECTED,Verification and refutation of probabilistic specifications via games,"We develop an abstraction-based framework to check probabilistic specifications of Markov Decision Processes (MDPs) using the stochastic two-player game abstractions (i.e. ""games"") developed by Kwiatkowska et al. as a foundation. We define an abstraction preorder for these game abstractions which enables us to identify many new game abstractions for each MDP - ranging from compact and imprecise to complex and precise. This added ability to trade precision for efficiency is crucial for scalable software model checking, as precise abstractions are expensive to construct in practice. Furthermore, we develop a four-valued probabilistic computation tree logic (PCTL) semantics for game abstractions. Together, the preorder and PCTL semantics comprise a powerful verification and refutation framework for arbitrary PCTL properties of MDPs. © Mark Kattenbelt and Michael Huth."